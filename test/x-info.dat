((3) 8 (((lib "scribble/decode-struct.rkt") . deserialize-info:part-index-desc-v0) ((lib "scribble/html-properties.rkt") . deserialize-info:css-addition-v0) ((lib "scribble/latex-properties.rkt") . deserialize-info:tex-addition-v0) ((lib "scribble/core.rkt") . deserialize-info:style-v0) ((lib "scribble/core.rkt") . deserialize-delayed-element) ((lib "scribble/core.rkt") . deserialize-info:link-element-v0) ((lib "scribble/core.rkt") . deserialize-info:element-v0) ((lib "scribble/render-struct.rkt") . deserialize-info:mobile-root-v0)) 2083 ((q part "sec:lists-programming") "Enumerations" "Generalizing Functions" (0) (c counter c (c (? . 8) c (? . 834))) (c counter c (c (? . 9) c (? . 85))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_two.html" . unix) "Reading XML" "figure" "exercise" "value" (c counter c (c (? . 9) c (? . 1895))) (c counter c (c (? . 9) c (? . 365))) (c counter c (c (? . 9) c (? . 49))) (c counter c (c (? . 9) c (? . 622))) (c (? . 10)) (c counter c (c (? . 8) c (? . 1038))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_one.html" . unix) "Dir*" (q tech "matrix") (c counter c (c (? . 8) c (? . 621))) (c counter c (c (? . 9) c (? . 1547))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_six.html" . unix) (c counter c (c (? . 9) c (? . 729))) "The Arithmetic of Images" (c counter c (c (? . 9) c (? . 646))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_five.html" . unix) (c counter c (c (? . 9) c (? . 33))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_4.html" . unix) (q tech "entry") (q tech "bsl fun def*") (c counter c (c (? . 9) c (? . 1498))) (q part "some-i/o") "ex:dir-how-many3" (q tech "dir.v2") (c counter c (c (? . 8) c (? . 269))) (c counter c (c (? . 9) c (? . 588))) (c counter c (c (? . 9) c (? . 1883))) (q part "sec:zoo2") "Composing Functions" (c counter c (c (? . 9) c (? . 666))) (q tech "doorstate") "Full Space War" "Non-standard Recursion" (c (c (? . 9) c (? . 1086))) "Weapon" (c counter c (c (? . 9) c (? . 1125))) (c counter c (c (? . 9) c (? . 759))) "Xexpr.v3" "ex:prefix-isl" "Any" "fsm" (c (c (? . 8) c (? . 522))) (c (c (? . 9) c (? . 493))) (q tech "ft") "Programming with Conditionals" (c counter c (c (? . 9) c (? . 330))) "data-uni" "h" (c counter c (c (? . 9) c (? . 124))) (c counter c (c (? . 9) c (? . 190))) "Attribute*.v3" "mix" "UFO" "Russian Dolls" "Addr" "model" (c counter c (c (? . 9) c (? . 542))) (c counter c (c (? . 9) c (? . 725))) (q part "sec:intervals") (c (u . "I")) "Intermezzo: Vectors" (q tech "addr") (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_three.html" . unix) (c counter c (c (? . 8) c (? . 255))) "Finite State Machines" (q tech "image") (c counter c (c (? . 9) c (? . 1781))) "Attribute.v3" (q part "sec:bundle") (c (1 (c collects c (u . #"scribble") c (u . #"racket.css"))) c (2 (c collects c (u . #"scribble") c (u . #"racket.tex")))) (q part "sec:int-lambda") (q part "sec:domain") (c counter c (c (? . 9) c (? . 105))) (c counter c (c (? . 8) c (? . 495))) "ex:sort1" (c counter c (c (? . 9) c (? . 1695))) "HMWord" (c counter c (c (? . 9) c (? . 437))) (c counter c (c (? . 9) c (? . 1634))) (c counter c (c (? . 8) c (? . 2062))) (q part "Adapting_the_Design_Recipe") (c (u . "V")) (q part "sec:local-definitions") (c (u . "III")) (q tech "binarytree") (c counter c (c (? . 9) c (? . 1901))) "The Loss of Knowledge" (c counter c (c (? . 9) c (? . 1568))) (q part "ch:backtrack") (c counter c (c (? . 9) c (? . 373))) "cond4" (c counter c (c (? . 9) c (? . 101))) (c (c (? . 9) c (? . 395))) (c counter c (c (? . 8) c (? . 1191))) "ex:quick-sort-abstract" (c counter c (c (? . 9) c (? . 461))) "List-of-numbers" "Processing Two Lists Simultaneously: Case 2" (c counter c (c (? . 8) c (? . 2071))) (q tech "row") "Phone" (q tech "simplegraph") "Table" "sim-dd" "lo" (c counter c (c (? . 8) c (? . 918))) (c counter c (c (? . 8) c (? . 1070))) (c counter c (c (? . 9) c (? . 939))) "A Problem with Structural Processing" (q tech "transition") (q tech "s expr") "Refining Data Definitions" "A Graphical Editor, Revisited" "ex:binding1" "Processing Two Lists Simultaneously: Case 1" (c counter c (c (? . 9) c (? . 345))) "Feeding Worms" (c counter c (c (? . 8) c (? . 897))) (q part "ch:dd-similarities") "SimulationState.v2" (c counter c (c (? . 9) c (? . 991))) (q tech "qp") (c counter c (c (? . 9) c (? . 637))) (q tech "lam") (q tech "xexpr.v2") "Summary" "Prologue: How to Program" "Three" "Accumulators and Trees" (c counter c (c (? . 9) c (? . 1019))) (c (c (? . 9) c (? . 829))) (c counter c (c (? . 9) c (? . 384))) (c counter c (c (? . 9) c (? . 447))) "graph" (c counter c (c (? . 9) c (? . 1466))) (q tech "xenum.v2") (q tech "dir.v3") (c (c (? . 9) c (? . 680))) "Bucket" (q tech "xitem.v1") "DK" "animationstate" (c counter c (c (? . 9) c (? . 1631))) (c counter c (c (? . 8) c (? . 816))) "Exercises on Processing Two Complex Inputs" (c counter c (c (? . 9) c (? . 798))) "sig" (q part "sec:rd") (c (? . 64)) (c (u . "II")) (c counter c (c (? . 9) c (? . 388))) (c (c (? . 9) c (? . 1662))) "Global Constants" (c counter c (c (? . 9) c (? . 541))) (q part "sec:fractal") (q part "i4-5") "" (c counter c (c (? . 8) c (? . 401))) (c counter c (c (? . 9) c (? . 949))) "list of number" "XEnum.v2" "Inputs and Output" (c (? . 172)) "The Arithmetic of Booleans" (c counter c (c (? . 9) c (? . 1453))) (c counter c (c (? . 9) c (? . 1552))) (q tech "dir*") (c counter c (c (? . 9) c (? . 1670))) (c counter c (c (? . 9) c (? . 346))) (c counter c (c (? . 9) c (? . 332))) "pair number image" (c counter c (c (? . 9) c (? . 550))) (c counter c (c (? . 9) c (? . 216))) (c counter c (c (? . 9) c (? . 1037))) (q tech "trafficlight") (c part c (u . "chap:i1-2")) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/i1-2.html" . unix) (q tech "bsl expr") (c counter c (c (? . 9) c (? . 2014))) "ex:integral-dc" "You Are a Programmer Now" (c counter c (c (? . 9) c (? . 381))) (c counter c (c (? . 9) c (? . 356))) "XYZ" (c counter c (c (? . 9) c (? . 850))) (c counter c (c (? . 9) c (? . 966))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/i3-4.html" . unix) "Numeric Integration" (c counter c (c (? . 8) c (? . 444))) (c counter c (c (? . 8) c (? . 2021))) "Domain Knowledge" (c (? . 201)) "Letter" "ex:enum-count" (c counter c (c (? . 9) c (? . 204))) "Row" (q tech "work") "... Add Expressive Power" (q part "sec:arith-bools") (c (? . 174)) (c counter c (c (? . 9) c (? . 686))) (c counter c (c (? . 9) c (? . 464))) (c counter c (c (? . 9) c (? . 1702))) (c tech c (? . 309)) (c counter c (c (? . 9) c (? . 1636))) "ex:lambda2" (q part "sec:arith-str") (c 1 ? . 70) (c counter c (c (? . 9) c (? . 265))) (c counter c (c (? . 9) c (? . 1548))) (c counter c (c (? . 9) c (? . 1596))) (c counter c (c (? . 9) c (? . 1468))) (c counter c (c (? . 9) c (? . 1017))) (c counter c (c (? . 9) c (? . 679))) (c counter c (c (? . 9) c (? . 1941))) "Arbitrarily Large Data" (c counter c (c (? . 9) c (? . 648))) (c counter c (c (? . 8) c (? . 1318))) (q part "ch:htdp") (c 3 ? . 70) (q part "ch:design-algo") (c 30 ? . 92) (c counter c (c (? . 9) c (? . 417))) (c counter c (c (? . 9) c (? . 531))) (c counter c (c (? . 9) c (? . 1535))) (c counter c (c (? . 8) c (? . 565))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/part_prologue.html" . unix) (c counter c (c (? . 9) c (? . 1768))) (q part "sec:accu-style") "List-of-names" (3 "RktSym" (c tt-chars ? . 80)) (4 (c (5 (3 "RktStxLink" (c tt-chars ? . 80)) "lambda" (q form ((lib "lang/htdp-intermediate-lambda.rkt") lambda))))) (c counter c (c (? . 8) c (? . 1169))) (c counter c (c (? . 8) c (? . 1797))) "ex:fsm-design2" (c counter c (c (? . 9) c (? . 245))) "SL" (c counter c (c (? . 9) c (? . 1111))) (c counter c (c (? . 9) c (? . 893))) "Non-empty Lists" (c counter c (c (? . 9) c (? . 1414))) (c counter c (c (? . 9) c (? . 804))) (c counter c (c (? . 9) c (? . 1353))) (q tech "bsl fun def") "fig:func-int" "ex:illegal-exp1" (c counter c (c (? . 9) c (? . 256))) (c counter c (c (? . 9) c (? . 338))) (c counter c (c (? . 9) c (? . 1066))) (q part "ch:funcs-progs") (c counter c (c (? . 9) c (? . 1460))) (q tech "table") (c counter c (c (? . 9) c (? . 315))) "Recognizing the Need for an Accumulator" "ex:web-data2" (q tech "word") "Number" (c counter c (c (? . 9) c (? . 604))) "fig:worm" (c counter c (c (? . 9) c (? . 1862))) (c counter c (c (? . 8) c (? . 544))) (q tech "velocity") "fig:height-accu" (c counter c (c (? . 8) c (? . 273))) (q part "sec:refine-funcs") (q part "ch:money-sexp") (c (u . "IV")) (c counter c (c (? . 9) c (? . 1077))) "accu-edit" "editor" "Transition.v3" (c counter c (c (? . 9) c (? . 943))) (c counter c (c (? . 8) c (? . 494))) (c counter c (c (? . 9) c (? . 1218))) (c counter c (c (? . 9) c (? . 1887))) (q tech "letter") "Designing World Programs" (q tech "x1t") (u . "fig:create-rocket-scene.v2") (c counter c (c (? . 8) c (? . 289))) "Interpreting Functions" (c counter c (c (? . 9) c (? . 1606))) (c counter c (c (? . 9) c (? . 756))) (c counter c (c (? . 9) c (? . 326))) (c counter c (c (? . 9) c (? . 1776))) (c counter c (c (? . 9) c (? . 562))) "dog" "Input Errors" "Child" "Simplifying Functions" (q tech "inventory") "Transforming Functions into Accumulator-Style" (c counter c (c (? . 9) c (? . 1513))) (c counter c (c (? . 8) c (? . 1151))) (q part "sec:binary-search") (c 31 ? . 92) "A Glimpse at Parsing" (q tech "al") "node" "wc" (c counter c (c (? . 9) c (? . 310))) (c (c (? . 9) c (? . 327))) (c (c (? . 9) c (? . 982))) (c (c (? . 9) c (? . 1053))) "ex:gcd-gen-time" (c counter c (c (? . 8) c (? . 1792))) (c (c (? . 9) c (? . 1590))) (c counter c (c (? . 9) c (? . 1292))) "BSL" "ex:wage-general" (c counter c (c (? . 9) c (? . 320))) "Refining Interpreters" (c counter c (c (? . 9) c (? . 771))) (c counter c (c (? . 9) c (? . 1893))) (q tech "transition.v2") "ex:dir-how-many2" "mix-zoo" (q part "part:six") (c (u . "VI")) "list-and" "VCat" "design12" "ex:nested-dd" (c (c (? . 9) c (? . 333))) (q tech "block") (q part "sec:finger-lists") (c 10 ? . 160) "ex:file-find" (c (c (? . 8) c (? . 640))) (c counter c (c (? . 9) c (? . 501))) (c counter c (c (? . 9) c (? . 380))) (c counter c (c (? . 8) c (? . 1104))) (c counter c (c (? . 9) c (? . 730))) "List-of-strings" "ex:sort1-b" "struct-edit4" "maybe" (c counter c (c (? . 9) c (? . 1371))) (q tech "phone") "Designing With Intertwined Data" (q part "sec:sortI") (q tech "shape") "Functions Are Values" (c counter c (c (? . 9) c (? . 1042))) (c counter c (c (? . 9) c (? . 1085))) "ex:3queens" (c counter c (c (? . 8) c (? . 1727))) (c counter c (c (? . 9) c (? . 1230))) "Tetris" "ex:if-cond" (c counter c (c (? . 9) c (? . 360))) (q tech "gameplayer") (q tech "tm") (q part "sec:sexp") "ex:worm2" (q part "i3-4") (q part "sec:func-similarities") (c 16 ? . 94) (c counter c (c (? . 9) c (? . 519))) (c counter c (c (? . 9) c (? . 525))) "File" (q part "sec:choice") "ex:atom" (c counter c (c (? . 9) c (? . 1270))) (q part "sec:xml") (c 25 ? . 277) "ex:shape-distance" (c counter c (c (? . 9) c (? . 377))) (q tech "attribute*.v3") "ex:bsl-parse-def2" "ex:define-struct-value" "TrafficLight" (c counter c (c (? . 8) c (? . 1553))) "ex:legal-def1" "ex:sum-accu-inex" (c counter c (c (? . 9) c (? . 385))) (q tech "xexpr") "constant1" "ex:xml-dd" (c counter c (c (? . 9) c (? . 389))) "Refining Functions" (c (? . 391)) (c counter c (c (? . 9) c (? . 524))) (c counter c (c (? . 8) c (? . 1299))) "mix-vehicle" "Single Point of Control" (c counter c (c (? . 9) c (? . 1049))) (q part "pro-cond") (c counter c (c (? . 8) c (? . 1850))) "Rational" "fig:shots" "fig:quick-sort" (c counter c (c (? . 8) c (? . 402))) "list-edit2" (c (c (? . 9) c (? . 721))) "List-of-shots" "worldstate" (q tech "stockworld") (c counter c (c (? . 9) c (? . 1699))) "ex:free-bound-dd0" (c counter c (c (? . 9) c (? . 410))) (c counter c (c (? . 9) c (? . 1145))) (q part "htdp2e-epilogue") (c counter c (c (? . 9) c (? . 1329))) (c counter c (c (? . 8) c (? . 1013))) "Position" "ex:substitute" (q tech "vcham") (c counter c (c (? . 9) c (? . 957))) (c counter c (c (? . 8) c (? . 774))) (c counter c (c (? . 9) c (? . 1326))) (q tech "mouseevt") (q part "sec:files-what") (c 23 ? . 277) (c counter c (c (? . 9) c (? . 1015))) (q part "sec:need-accu") (c (? . 264)) (c 37 ? . 329) (q part "sec:forests") (c 22 ? . 277) (q tech "n") (q part "sec:sec-fsm-list") (c (? . 75)) (q part "ch:more-accu") "missileornot" "Nested-number" "ex:fancy-signatures2" "Path" (q tech "xmachine") "Editor" (c counter c (c (? . 9) c (? . 1418))) (q part "sec:boolean-if") "Processing Two Lists Simultaneously: Case 3" "fig:cond-enum" "Intermezzo: Pattern Matching" (c (? . 445)) "ex:bsl-eval-all" (q part "sec:space-war") (c (? . 42)) (c 13 ? . 160) (q tech "ff") (c (c (? . 9) c (? . 669))) (c counter c (c (? . 8) c (? . 1680))) (c counter c (c (? . 8) c (? . 741))) (q part "ch:intervals-enums") (c 4 ? . 70) (c counter c (c (? . 9) c (? . 992))) (q tech "file.v2") (c counter c (c (? . 9) c (? . 1578))) (c counter c (c (? . 9) c (? . 1767))) "design3" (q part "ch:summary6") "XItem.v2" "ex:list-cons2" (q tech "unitworld") (q part "ch:gen-rec-samples") (q part "sec:synsem:and-or") (c counter c (c (? . 9) c (? . 1476))) "ex:count-ft" (c counter c (c (? . 9) c (? . 469))) "List-of-amounts" "Existing Abstractions" "fun1" (c counter c (c (? . 9) c (? . 473))) "ex:find-root-monotonic" (c counter c (c (? . 9) c (? . 475))) "Design By Composition" (c counter c (c (? . 9) c (? . 1977))) "Abstracting with " (q part "sec:edit1") (c 5 ? . 70) (q tech "dir.v1") (q tech "attribute") "PositiveInteger" (c tech c (? . 1124)) "Itemizations and Structures" (c counter c (c (? . 9) c (? . 1007))) "Termination" (c counter c (c (? . 8) c (? . 1896))) "X1T" "Xexpr.v0" "Board" "mix-ufo2-test" "fig:queens-non-solutions" "fig:sd" "fig:path-exists2" (c counter c (c (? . 8) c (? . 496))) "design4" (c counter c (c (? . 9) c (? . 498))) "MouseEvt" "ex:pi-accu" "KeyEvent" "FSM-State" (q part "Unquote_Splice") "PositiveNumber" "design13" (c counter c (c (? . 9) c (? . 506))) (c counter c (c (? . 8) c (? . 1872))) (c counter c (c (? . 9) c (? . 923))) "SIGS.v2" "work1.5" (c counter c (c (? . 9) c (? . 511))) (c counter c (c (? . 9) c (? . 786))) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/i2-3.html" . unix) (c counter c (c (? . 9) c (? . 1152))) "A Problem with Generative Recursion" "The Universe of Data" "Exercises and Projects" "y2k" "Interpreting Variables" (c counter c (c (? . 9) c (? . 1304))) "fig:find-path-code" (c counter c (c (? . 9) c (? . 1838))) "struct-edit3" "ex:fancy-signatures1" "File*" "N" (c counter c (c (? . 9) c (? . 840))) "ex:file-example3" (c counter c (c (? . 9) c (? . 529))) "ex:perm-explode" (q part "sec:synsem:errors") (c (? . 319) q ": Errors") "Structures in Lists" "Dog" "ex:animate" (c counter c (c (? . 9) c (? . 536))) "ex:quick-sort-non-terminate" (c counter c (c (? . 9) c (? . 538))) "VCham" "ex:abs-min-max" "ex:integral-kepler" (c counter c (c (? . 9) c (? . 1214))) "fig:mc-transition" (c counter c (c (? . 9) c (? . 1163))) (q tech "to") (c tech c (? . 280)) (c counter c (c (? . 9) c (? . 1517))) (q tech "ctemperature") "struct4" "1Transition" (q part "BSL__Tests") "Programming with Structures" "fig:rel-abs-human" (c counter c (c (? . 8) c (? . 554))) (c counter c (c (? . 9) c (? . 2057))) "SimulationState.v1" "FSM" (q tech "boolean") (c counter c (c (? . 8) c (? . 1639))) "Nameless Functions" "n1" "List-of-temperatures" (c counter c (c (? . 9) c (? . 1322))) (u . "fig:create-rocket-scene.v3") (c counter c (c (? . 9) c (? . 654))) (q part "sec:world-structs") (q tech "tetri") "LOD" "NELoP" (q tech "r3") (q part "sec:more-accu-trees") (c (? . 139)) (c 38 ? . 329) "ex:tetris1" (c counter c (c (? . 9) c (? . 575))) "A Graphical Editor, with Mouse" "Finger Exercises" "ex:root-of-tangent" (c counter c (c (? . 9) c (? . 579))) "Similarities in Functions" (q part "sec:interpreter-all") "TID" "ex:free-bound1" (c counter c (c (? . 9) c (? . 584))) "nested number" "Node" "ex:quick-sort-filter" "Adding Accumulators" (c (? . 589)) "Designing with Itemizations, Again" (q tech "ball 2d") (c counter c (c (? . 9) c (? . 1057))) (q part "sec:synsem:var-defns} ") "Trees" "BS" (c counter c (c (? . 9) c (? . 1925))) (q tech "hmword") "Intermezzo: Scope" (c (? . 599)) "Simple Tetris" "Vel" "Designing with Itemizations" "ex:abs-tabulate" "fig:generative-vs-structural" (c counter c (c (? . 8) c (? . 605))) "Variations on the Theme" (c (? . 607)) "Abstractions from Examples" (c counter c (c (? . 9) c (? . 938))) (c counter c (c (? . 9) c (? . 1848))) "fig:siepic" (c counter c (c (? . 8) c (? . 612))) (c counter c (c (? . 9) c (? . 1001))) (c counter c (c (? . 9) c (? . 1160))) (q tech "xitem.v2") (q part "sec:design-func") "mix-uni" (c (c (? . 9) c (? . 618))) (c counter c (c (? . 9) c (? . 1598))) "fig:lam-tree" "ex:bsl-eval-def" "StockWorld" (q tech "xword") "Programs" (c counter c (c (? . 9) c (? . 1921))) (c counter c (c (? . 9) c (? . 1643))) (c counter c (c (? . 9) c (? . 1231))) "work3" (c counter c (c (? . 9) c (? . 629))) "Abstraction" (c counter c (c (? . 8) c (? . 1981))) "Xexpr.v2" "editor-explain" (c (c (? . 9) c (? . 634))) (c counter c (c (? . 8) c (? . 1730))) "ex:fold-append" "pair boolean string" "Adding Structure" "fig:graph" "nelist0" (c counter c (c (? . 9) c (? . 641))) "XEnum.v1" (c (c (? . 9) c (? . 1833))) (c counter c (c (? . 9) c (? . 1168))) "ex:double-amount" (c counter c (c (? . 9) c (? . 739))) "cond1" (q part "moving-on") (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/htdp2e-epilogue.html" . unix) "ex:para-dd" (c (c (? . 9) c (? . 651))) (c counter c (c (? . 8) c (? . 1087))) "ex:is-prime" (c tech c (? . 1146)) (c counter c (c (? . 9) c (? . 687))) (c (c (? . 9) c (? . 768))) (q part "ch:simu") (c counter c (c (? . 9) c (? . 887))) "Rendering XML Enumerations" "itemization" "keyevent" (c (c (? . 8) c (? . 1528))) (q part "sec:simplification") (c (? . 300)) "ex:triangulate2" "Fixed-Size Data" (q part "ch:lists2") "car-test" "Mixing It Up" "ex:sem-funcs" (c counter c (c (? . 9) c (? . 671))) "Local Function Definitions" (c (? . 673)) (q part "sec:abstraction-exercises") (c (? . 518)) (c 18 ? . 94) (c counter c (c (? . 9) c (? . 892))) "ex:find-root-test" "ex:find-path6" "list-string" (c counter c (c (? . 9) c (? . 681))) (q tech "number") "sec:dd-similarities" (c (c (? . 9) c (? . 967))) "ex:list-cons5" "shots2" "ex:sexpr-abstract2" (c counter c (c (? . 9) c (? . 688))) (c counter c (c (? . 9) c (? . 1161))) (q part "pro-many-def") "Intertwined Data" (q part "sec:interpreter-variables") (c (? . 520)) (c 24 ? . 277) (c counter c (c (? . 9) c (? . 1421))) (c counter c (c (? . 9) c (? . 1534))) (c counter c (c (? . 9) c (? . 980))) (q tech "phonerecord") "File.v3" "list-sum2" (c counter c (c (? . 9) c (? . 701))) (c counter c (c (? . 9) c (? . 1067))) (c counter c (c (? . 9) c (? . 944))) "ex:quick-sort-time1" (c counter c (c (? . 9) c (? . 705))) (c counter c (c (? . 9) c (? . 1666))) "S-expr" "Atom" (q part "ch:files") (c counter c (c (? . 9) c (? . 1904))) "sec:design-world" (c (? . 287)) (q part "ch:strange-recursions") (c (? . 43)) (c 29 ? . 92) (3 "RktVal" (c tt-chars ? . 80)) "struct3" (c counter c (c (? . 9) c (? . 718))) (c counter c (c (? . 8) c (? . 1559))) "editor-list-rev-aux" (q tech "connection") "XML as S-expressions" (c (? . 723)) "riot2" (q part "sec:list-world") (q part "ch:summary2") (c (? . 136)) "ex:fsm-state=" "list-sum1" (q part "ch:summary1") (c (? . 136)) (q tech "equation") (q tech "puzzlestate") (c counter c (c (? . 8) c (? . 760))) "ex:fsm0" (c counter c (c (? . 9) c (? . 736))) (c counter c (c (? . 9) c (? . 1795))) "struct14" (q part "sec:design-accu") "fig:distance" (c counter c (c (? . 9) c (? . 763))) (c counter c (c (? . 9) c (? . 935))) "pedestrian" (c counter c (c (? . 9) c (? . 744))) (c counter c (c (? . 9) c (? . 1988))) "Designing Abstractions" "fig:door-simu" (c counter c (c (? . 8) c (? . 748))) "Lo1S" "ex:rankings-splicing" (c counter c (c (? . 9) c (? . 751))) "fig:build-a-list" (c counter c (c (? . 8) c (? . 753))) "From Functions to Programs" "work4" "Shot" (c counter c (c (? . 9) c (? . 983))) "struct11" "fig:list-box" (c part c (u . "chap:htdp2e-epilogue")) (c (? . 167)) "average-0" (c counter c (c (? . 9) c (? . 1714))) "fig:wage*" (c counter c (c (? . 8) c (? . 765))) (c counter c (c (? . 9) c (? . 1343))) "ex:find-path5" "sec:edit3" (c (? . 577)) "ex:fsm-reacquaint3" "Transition" (c counter c (c (? . 8) c (? . 1332))) "fig:sim-graph" "fig:file2list" (c counter c (c (? . 8) c (? . 775))) "IR" (c counter c (c (? . 8) c (? . 1420))) "ex:add-to-each-map" (c counter c (c (? . 9) c (? . 779))) "Coordinate" "Tank" "ex:permutations" (c counter c (c (? . 9) c (? . 783))) "Programming" "ex:quasi-un" (c counter c (c (? . 9) c (? . 2070))) "BSL-expr" (q tech "ll") (3 "RktValLink" (c tt-chars ? . 80)) (q lib "lang/htdp-beginner.rkt") "fig:count-down" (c (c (? . 8) c (? . 792))) (q tech "xenum.v1") (q part "sec:gauss") "VAnimal" (q tech "line") "ex:tetris2" (q part "sec:two-inputs:simplify") (c 26 ? . 277) "Recursive Auxiliary Functions" (c (? . 801)) "BSL-fun-expr" "ex:file-example1" "transpose" (c counter c (c (? . 9) c (? . 805))) "Designing Functions that Consume Two Complex Inputs" (c counter c (c (? . 9) c (? . 1989))) (c counter c (c (? . 9) c (? . 914))) "Accumulators as Results" (c counter c (c (? . 9) c (? . 977))) "design5" (c counter c (c (? . 9) c (? . 812))) "1transition" (c tech c (? . 814)) "fig:parse-bsl-expr" (q part "sec:integrate") (c (? . 198)) (c 32 ? . 92) (q part "sec:prog-similarities") (c (? . 581)) "Matrix" "Designing Algorithms" (c (? . 823)) (c (c (? . 9) c (? . 1162))) "Extended Exercise: Checking (on) Queens" "TOS" "FSM.v2" "cond-draw-rocket" (q part "sec:interpreter-functions") (c (? . 291)) "fig:list-pick" (c counter c (c (? . 8) c (? . 832))) "fig:bundle" "ex:sem2-funcs" (c counter c (c (? . 9) c (? . 835))) "AnimationState" "Generative Recursion" (q tech "xyz") "ex:gauss-equiv2" (c (c (? . 9) c (? . 1307))) "ex:list-cons4" (c counter c (c (? . 9) c (? . 842))) (c counter c (c (? . 9) c (? . 1068))) "Ball-1d" "Epilogue" (c (? . 846)) "arith-b2" (c counter c (c (? . 9) c (? . 848))) "ex:proper-bea" "person" "nested string" (q tech "landscape") (c counter c (c (? . 9) c (? . 1654))) "bucket" (c counter c (c (? . 9) c (? . 2046))) "fig:list-pick2" (c counter c (c (? . 8) c (? . 857))) (q part "i1-2") (c (? . 167)) "ex:gauss-subtract" (c counter c (c (? . 9) c (? . 861))) (c counter c (c (? . 9) c (? . 1871))) "contains-flatt02" (c counter c (c (? . 9) c (? . 864))) (c counter c (c (? . 9) c (? . 1393))) "ex:tree-ref-simpl" (c counter c (c (? . 9) c (? . 867))) "String" (q part "sec:lists-cons") (c "What Is " c (6 #f (c (6 (? . 717) "'") c (6 (? . 717) "(") c (6 (? . 717) ")"))) c ", What Is " c (6 (? . 241) (4 (c (5 (? . 790) "cons" (c def c (c (? . 791) q cons))))))) (c 9 ? . 160) (q part "ch:summary4") (q part "ch:mix") (c (? . 486)) "fig:cmp-dog-cat2" (c counter c (c (? . 8) c (? . 876))) "color" "Association" (q part "sec:abbrev") (c "The " c (6 (? . 241) (4 (c (5 (? . 790) "list" (c def c (c (? . 791) q list)))))) q " Function") (c 12 ? . 160) "ex:xml-accessors" (c counter c (c (? . 9) c (? . 883))) "ex:rel-abs-O" (c counter c (c (? . 9) c (? . 885))) "ex:arrows-dd" "ex:mc-next-state" (c counter c (c (? . 9) c (? . 888))) "ex:define-struct-syn" (c counter c (c (? . 9) c (? . 890))) "ex:quote-list" "ex:dir-how-many-map" "Lists and World" (c (? . 894)) "lr" "fig:design7" "list of string" "List-of-String" "shots1" (c counter c (c (? . 9) c (? . 900))) "ex:rel-abs-from-reverse" (c counter c (c (? . 9) c (? . 902))) (q part "sec:lambda-technical") (c (6 (? . 241) (? . 242)) q ", Technically") (c 19 ? . 94) "ex:cross" (c counter c (c (? . 9) c (? . 907))) "FT" "A Graphical Editor" (c (? . 910)) "ex:list-cons3" (c counter c (c (? . 9) c (? . 912))) "ex:legal-def1a" "Price" "fig:real-time" (c counter c (c (? . 8) c (? . 916))) "fig:door-closer" (q part "sec:btrees") (c (? . 595)) (c counter c (c (? . 9) c (? . 2042))) (c counter c (c (? . 9) c (? . 1996))) "ex:queen-render" (q tech "nelon") (q tech "solution") (c counter c (c (? . 9) c (? . 1846))) "ex:test-compare" (c counter c (c (? . 9) c (? . 927))) (q tech "nonnegativenumber") (q part "ch:abstract") (c (? . 747)) "struct-edit1" (c counter c (c (? . 9) c (? . 932))) "Itemizations" "ex:need-accu" (c counter c (c (? . 9) c (? . 1208))) (c "Intermezzo: " c (? . 319)) "ex:gauss-equiv" "ex:web-data1" "ex:sum-a" (c counter c (c (? . 9) c (? . 940))) "PuzzleState" "ex:local-interm1" "render-poly-last" (q part "ch:3lambda") (c (? . 561)) "ex:fire-fighters" (c counter c (c (? . 9) c (? . 947))) "ex:syn-funcs" "Using Abstractions, by Examples" "Structure in the World" (c (? . 951)) (c counter c (c (? . 9) c (? . 1884))) "fun10b" (c counter c (c (? . 9) c (? . 954))) (c counter c (c (? . 9) c (? . 1272))) "ex:permutations1" "fig:full-grammar" (c counter c (c (? . 8) c (? . 958))) (q part "programming") (c (? . 785)) "The Poetry Of S-expressions" (c counter c (c (? . 8) c (? . 1376))) "ex:2use-filter" (c counter c (c (? . 9) c (? . 964))) "ex:scope2" "mix2" "Four" "Structure Type Definitions" (q part "sec:two-inputs:case1") (c (? . 125)) (q part "sec:files-lines") (c (? . 307)) (c counter c (c (? . 9) c (? . 1229))) (c counter c (c (? . 9) c (? . 1291))) "Pair-number-image" "ex:zip" "fig:wave-y-function" (c counter c (c (? . 8) c (? . 978))) "ex:gauss-complete" "Computing" "ex:represent-graph" "ex:find-root-discrete" (c counter c (c (? . 9) c (? . 1265))) "AL" "fig:structural-gcd" (c counter c (c (? . 8) c (? . 986))) (q tech "lofd") (q part "sec:cond") (c (? . 55)) "ex:queens-solve" "ex:bsl-eval-def1" "Accumulators" (c (? . 993)) (c (c (? . 9) c (? . 1095))) "Tree" "Temperature" (c part c (u . "chap:i5-6")) (c counter c (c (? . 9) c (? . 1474))) (q tech "xexpr.v3") "ex:tetris3" "fig:cyclic-graph" (c (c (? . 8) c (? . 1002))) "Boolean Expressions" (c (? . 1004)) "3LON" "arith-b1" (q part "sec:isl-abstractions") (c (? . 472)) "Dir.v3" "ex:find-path2" (c (c (? . 9) c (? . 1011))) "fig:cmp-above-below" "lon" "ex:quick-sort-time2" (c counter c (c (? . 9) c (? . 1176))) "ex:merge" (q tech "rational") "ex:quick-sort-drop" (q tech "rd") "On Testing" "ConsOrEmpty" "Word" "Designing Accumulator-Style Functions" (c (? . 1024)) (q tech "position") "TM" (q tech "vanimal") (c counter c (c (? . 9) c (? . 1452))) (c counter c (c (? . 9) c (? . 1148))) "Natural Numbers" "Quasiquote And Unquote" "ex:gcd-struct-time" (c counter c (c (? . 9) c (? . 1033))) "Fractals, a First Taste" (c (? . 1035)) "ex:build-list1" "fig:traffic-light" "How It Works" (q part "sec:int1-structs") (c (? . 969)) "fun7" (q tech "lod") "cond12" (c counter c (c (? . 9) c (? . 1044))) "List-of-list-of-strings" "sec:itemization" (c (? . 934)) "ex:bsl-var-eval" (q part "sec:spoc") (c (? . 396)) (c 17 ? . 94) "design6" "ex:sierpinski-aux" (c counter c (c (? . 9) c (? . 1054))) (c counter c (c (? . 9) c (? . 1117))) "ex:family-forest2" "CP" "The Arithmetic of Numbers" (q part "sec:funcs") (c 2 ? . 70) "Mixing It up with Booleans" (c (? . 1062)) "ex:contains-general" (c counter c (c (? . 9) c (? . 1064))) "work2" "col-row" "struct16-copy" (q tech "temperature") "fig:fsm1" "ex:replace-eol-simp" (c counter c (c (? . 9) c (? . 1071))) (q tech "vcat") "ex:enum-refactor" (c counter c (c (? . 9) c (? . 1074))) (q tech "simulationstate.v1") "ex:explain-structural-gcd" "fig:data-def-arrows" (c counter c (c (? . 8) c (? . 1078))) "Functions And Programs" (c (? . 1080)) "Dir.v1" (c tech c (? . 662)) "Using Abstractions" "ex:gen-fun-instance1" "ex:find-path4" "fig:wage.v2" "Data Representations with Accumulators" "Lists" (c counter c (c (? . 9) c (? . 1816))) "Intervals, Enumerations, Itemizations" (c (? . 1091)) "XMachine" (c counter c (c (? . 9) c (? . 1279))) "mix1" (c counter c (c (? . 8) c (? . 1726))) "List-of-words" (q part "part:five") (c (? . 838)) "fig:uni-dd" (c (c (? . 8) c (? . 1100))) "ex:queens-board" (c counter c (c (? . 9) c (? . 1102))) "fig:list of names" (c counter c (c (? . 8) c (? . 1831))) "ufo" (c tech c (? . 1106)) (c counter c (c (? . 9) c (? . 1367))) "fig:bundle-template-bad" (c counter c (c (? . 8) c (? . 1109))) "convertFC" (q part "more-def") "ir" (c tech c (? . 1113)) (c counter c (c (? . 9) c (? . 1685))) (c tech c (? . 407)) "ex:bsl-var-subst" "ex:bsl-eval-bool" (c counter c (c (? . 9) c (? . 1118))) "More Uses of Accumulation" (c (? . 1120)) (q part "sec:two-inputs:ex") (c (? . 155)) "fsm state" "ex:worm4" "BinaryTree" "BSL-fun-def" (q tech "fsm.v2") (q part "sec:design") (c (? . 755)) "weapon" (q part "sec:finger-design") (c (? . 578)) "struct13" (c counter c (c (? . 9) c (? . 1134))) "Quote" (c part c (? . 1136)) "ex:file-du" (c counter c (c (? . 9) c (? . 1138))) "struct6" (c counter c (c (? . 9) c (? . 1140))) (q tech "conscombination") "struct10" (c (c (? . 9) c (? . 1143))) "ex:adaptive-integral" "closed" "NEList-of-temperatures" "ex:draw-shape1" "subst" (c counter c (c (? . 9) c (? . 1149))) "fig:accountant" "ex:enum2-design" (q part "sec:usage-examples") (c (? . 950)) "ex:add-pi-accu" (c counter c (c (? . 9) c (? . 1155))) (c counter c (c (? . 9) c (? . 1410))) (q tech "shotworld") (q tech "sl") "ex:length-accu" "ex:2build-list1" "ex:maybe" "ex:slope" "NorF" "Structures" (q part "sec:lambda") (c (? . 479) c (6 (? . 241) (? . 242)) q " I") "list-image" "fig:sim-bt-ex" "Recursion without Structure" (c (? . 1170)) (q tech "transition.v3") "mix-ufo2-finish" (c (c (? . 9) c (? . 1173))) "Equation" "ex:draw-poly-local" "ex:factorial-inv" (c counter c (c (? . 9) c (? . 1177))) (q tech "list of name") (c counter c (c (? . 8) c (? . 1653))) "Solution" (q part "sec:worms") (c (? . 127)) (c counter c (c (? . 9) c (? . 2007))) (c (c (? . 8) c (? . 1190))) (q part "sec:worlds-mix") (c 6 ? . 70) (q part "sec:config") (c counter c (c (? . 9) c (? . 1380))) "fig:uni-struct" "fig:sort-local" "tank" (q part "ch:summary3") "ex:age-ft" (c counter c (c (? . 9) c (? . 1194))) (c counter c (c (? . 9) c (? . 1707))) (q part "sec:tetris") (c (? . 601)) "interval" (q tech "bsl fun expr") "A Bit More about Worlds" (q tech "string") "ex:abstractions-in-snake" (c counter c (c (? . 9) c (? . 1203))) (c counter c (c (? . 9) c (? . 1750))) "fig:def-fun-arrows" (c counter c (c (? . 8) c (? . 1206))) "rd1" "Adapting the Design Recipe" (c (? . 1209)) (q part "sec:enum") (c (? . 660)) "FF" "ex:triangulate1" (c (c (? . 9) c (? . 1602))) (q part "sec:progs") (c (? . 625)) "ex:fsm" (c part c (? . 488)) (c (? . 488)) (q part "i5-6") (c (? . 71)) (c (? . 167)) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/i5-6.html" . unix) "Mathematical Examples" (q tech "board") "List-of" "list of" "cond10" "ex:tetris0" "ex:list-cons1" "read-dd" (c counter c (c (? . 9) c (? . 1232))) "ex:bsl-one-def" (c counter c (c (? . 9) c (? . 1234))) (c (c (? . 9) c (? . 1889))) "Similarities in Signatures" (q tech "nelop") "fun4" (c counter c (c (? . 9) c (? . 1239))) (q part "sec:more-accu-mc") (c (? . 1088)) "struct1" (c counter c (c (? . 9) c (? . 1243))) "interpret-height" (c (c (? . 9) c (? . 1245))) "work1" (c counter c (c (? . 9) c (? . 1247))) (q tech "list of amount") "ex:fsm-design3" (c counter c (c (? . 9) c (? . 1250))) (c tech c (? . 2058)) "coordinate" "missile" "Lon" "S-expressions" (c (? . 1256)) "ex:xml-no-list-of" (c counter c (c (? . 9) c (? . 1258))) (c tech c (? . 170)) (c counter c (c (? . 9) c (? . 1784))) (c (c (? . 9) c (? . 1582))) "ex:file-find-path" (c counter c (c (? . 9) c (? . 1263))) "ex:fold2" (q tech "child") (c counter c (c (? . 9) c (? . 1632))) "fig:sexp-template" (c counter c (c (? . 8) c (? . 1268))) "ex:simplify1" (c counter c (c (? . 8) c (? . 1980))) "ex:quick-sort-terminal" "One Program, Many Definitions" (c (? . 1273)) "b" "Attribute" (q tech "price") (c counter c (c (? . 9) c (? . 1315))) "cell" (c counter c (c (? . 9) c (? . 2072))) "ex:abs-sum-prod" (c counter c (c (? . 9) c (? . 1281))) (q tech "email message") "editor-implode-manually" (c (c (? . 9) c (? . 1284))) (c counter c (c (? . 9) c (? . 1298))) "Transition.v2" (q part "sec:synsem:vocab") (c (? . 319) q ": Vocabulary") "BSL-var-expr" "ex:draw-poly1" "fun6" (q tech "symbol") "no-articles" (c counter c (c (? . 9) c (? . 1294))) (q part "sec:gen-funcs") (c (? . 2)) "ex:lambda1" "fig:queens-solutions" "fun10a" (c counter c (c (? . 9) c (? . 1300))) "Onward" (c (? . 1302)) "ex:2fold-map" "Functions" (c (? . 1305)) "ex:editor-mouse-structural" (q part "sec:not") "CI" "struct9" (c (c (? . 9) c (? . 1310))) "PhoneRecord" "Los" (q tech "tid") "fun10" "ex:alt-dir1" (c counter c (c (? . 9) c (? . 1316))) "fig:sort" "Color" "ex:illegal-ex1" (c counter c (c (? . 9) c (? . 1320))) "cond9" "ex:sierpinski-start" (c counter c (c (? . 9) c (? . 1323))) (c counter c (c (? . 9) c (? . 1412))) "ex:dir-how-many4" "arith-i1" (c counter c (c (? . 9) c (? . 1327))) "ex:filter-eval1" (q part "sec:arith-num") (c (? . 1059)) "fig:traffi-rep" "Simultaneous Processing" (c (? . 1333)) (c (c (? . 8) c (? . 1745))) (q tech "tree") "RD" "struct-edit0" (c counter c (c (? . 9) c (? . 1338))) "ex:quicksort-hand" (c counter c (c (? . 9) c (? . 1340))) (q tech "list of shot") "ex:list1" "ex:use-filter" (c counter c (c (? . 9) c (? . 1344))) (c counter c (c (? . 9) c (? . 1923))) (q part "sec:predicates") "ex:legal-ex1" (c counter c (c (? . 9) c (? . 1348))) "Extended Exercise: Gaussian Elimination" (c (? . 1350)) "Nelon" "nelist3" (c tech c (? . 51)) (c (c (? . 9) c (? . 2029))) "design1" (c counter c (c (? . 9) c (? . 1356))) "open" "design8" (c (c (? . 9) c (? . 1359))) "ex:checked2" (c counter c (c (? . 9) c (? . 1361))) "Virtual Pet Worlds" (q part "ch:list-sort") (c (? . 477)) "XWord" "ex:designing-build-list" (c part c (u . "chap:i4-5")) (c (? . 167)) (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/i4-5.html" . unix) "ex:bezier" "create-editor" (c (c (? . 9) c (? . 1372))) "ex:bundle-loops" (c counter c (c (? . 9) c (? . 1374))) "fig:undeclareds" (q part "sec:trans-accu") (c (? . 302)) "Low" "ex:polyn" "fig:generative-gcd" (c counter c (c (? . 8) c (? . 1381))) "Xexpr.v1" "fig:sigs-examples" (c (c (? . 8) c (? . 1384))) "fig:poly-root" (c counter c (c (? . 8) c (? . 1386))) "cond5" (c (c (? . 9) c (? . 1388))) "File.v2" (q part "ch:accumulator-samples") (c (? . 97)) "ex:ufo-complete" (c (c (? . 9) c (? . 1962))) (q part "part:4") (c (? . 692)) (q part "part:two") (c (? . 226)) (c counter c (c (? . 9) c (? . 1766))) (q part "i2-3") "GamePlayer" "LR" (q part "sec:enums") (c (? . 1)) "QP" (q tech "atom") (q part "ch:structure") (c (? . 639)) "1String" "ex:find-root-example" "Xexpr" "arith-i4" (q tech "list of word") "ex:generative-length" "SimpleGraph" (q part "sec:arith-images") (c (? . 24)) "fun10c" (c counter c (c (? . 9) c (? . 1703))) "fig:sierpinski-code" "cond11" "fig:add-sierpinski" (c counter c (c (? . 8) c (? . 1422))) (q part "ch:gen-rec-math") (c (? . 1225)) "Email Message" "Unquote Splice" (c (? . 1427)) (c (? . 136)) (q part "sec:queens") (c (? . 826)) (c 33 ? . 92) (q part "sec:two-inputs:design") (c (? . 807)) "ex:gcd-structural1" (c counter c (c (? . 9) c (? . 1435))) "WorldState" (q tech "spacegame") (q tech "3lon") "The Arithmetic of Strings" (c (? . 1440)) "fig:contains-flatt?" (c counter c (c (? . 8) c (? . 1442))) (c counter c (c (? . 8) c (? . 1525))) "Recursion that Ignores Structure" (q part "sec:list-produce") (c 11 ? . 160) (q part "computing") (c (? . 981)) (q part "sec:lists:ne") (c (? . 250)) "ex:contains-general2" "ex:worm3" (q tech "attribute.v3") (c tech c (? . 1358)) (q part "sec:loss:structural") (c (? . 119)) (c 36 ? . 329) "Integer" "ex:and-or-map" "Designing with Structures" "ex:fsm-list" (c counter c (c (? . 9) c (? . 1462))) (c part c (u . "chap:i3-4")) (c (? . 167)) "ex:perm-xmas" "Missile" "raises" "Direction" "More on Lists" (c (? . 1470)) "Boolean" (q part "sec:struct-gen-rec") "ex:file-find-path-compose" (q tech "list of temperature") "ex:fold-map" (c counter c (c (? . 8) c (? . 1543))) (q part "sec:synsem:grammar") (c (? . 319) q ": Grammar") "ex:file-example2" (c counter c (c (? . 9) c (? . 1480))) (c counter c (c (? . 9) c (? . 1982))) (q part "arithmetic-pro") "sigs.v2" (q tech "bsl var expr") "ex:gauss-fast" (c counter c (c (? . 9) c (? . 1486))) (q part "sub:reading-xml") (c (? . 7)) "ex:bsl-var-eval-atomic" (c counter c (c (? . 9) c (? . 1490))) "Arithmetic" "fig:dsl" (c counter c (c (? . 8) c (? . 1493))) (c counter c (c (? . 9) c (? . 1571))) "Making Choices" (c (? . 1496)) "ex:queens-threatened" "ex:tree-generation" (c counter c (c (? . 9) c (? . 1499))) "cond1-nested" (c counter c (c (? . 9) c (? . 1501))) (q part "sec:global") (c (? . 163)) (q part "sec:progstructs") (c (? . 553)) "Shape" "ex:mc-solve" (c counter c (c (? . 9) c (? . 1508))) "ex:bsl-var-eval2" (c counter c (c (? . 9) c (? . 1510))) "Inventory" "ex:free-bound-access" "fig:isl-ho-list" (c counter c (c (? . 8) c (? . 1514))) "cp" "struct11b" (q part "sec:worlds-more") (c (? . 1201)) "ex:ec-ft" (c counter c (c (? . 9) c (? . 1520))) "Velocity" (q part "part:three") (c (? . 631)) "fig:sort-ill" "fig:xexpr-tp" (c counter c (c (? . 8) c (? . 1526))) "fig:universe" (c "Functions from " c (6 (? . 241) (? . 242))) "Programming with Lists" (c (? . 1530)) (c counter c (c (? . 9) c (? . 2028))) "Maybe" "ex:height-accu" "ex:scope-meaning" "Landscape" "fig:parse-bsl-fun-expr" (c counter c (c (? . 8) c (? . 1537))) "ex:xml-interpret" (c counter c (c (? . 9) c (? . 1539))) "ex:xml-words" (c counter c (c (? . 9) c (? . 1541))) "fig:draw-poly" "Abstractions from Templates" "ConsCombination" (c counter c (c (? . 8) c (? . 1619))) "ex:free-bound-dd1" "ex:palindrome" (q part "ch:evaluator") (c (? . 322)) (q part "sec:lis-lis") "ex:mc-terminates" "fig:adding-dot-to-scene" (q part "symbols") (c (? . 1032)) "File.v1" "ex:permute-local" (c counter c (c (? . 9) c (? . 1557))) "fig:root-of-f" "Posn" (q tech "xexpr.v1") (q part "program-now") (c (? . 191)) "SOE" "sec:traverse-graph1" "ex:find-root-test2" (c counter c (c (? . 9) c (? . 1566))) "ex:use-map" (q tech "nelist of temperature") (c counter c (c (? . 9) c (? . 1842))) "ex:checked3" (q part "ch:poetry-sexp") (c (? . 962)) "ex:file-ls" (c counter c (c (? . 9) c (? . 1574))) (q part "ch:basic-arithmetic") (c (? . 1492)) "zoo3" "Dir.v2" "ex:sort2" (c counter c (c (? . 9) c (? . 1580))) "cond6" "ex:sort-abstract" (c counter c (c (? . 9) c (? . 1583))) "ex:fsm-reacquaint2" (c counter c (c (? . 9) c (? . 1585))) (q tech "three") (q part "sec:abs-signatures") (c (? . 1237)) "design9a" "ex:eval1" (c counter c (c (? . 9) c (? . 1591))) "ex:def-var-sem3" (c counter c (c (? . 9) c (? . 1593))) (q tech "shot") "shots3" "How to Design Programs, Second Edition" "ex:bsl-prog-dd" (q part "sec:sil") (c (? . 534)) "MissileOrNot" "mix-ufo-stop" (q tech "posn") (q part "sec:composing") (c (? . 39)) "contains-flatt03" "Structural versus Generative Recursion" (c (? . 1607)) "ex:bsl-parse" (c counter c (c (? . 9) c (? . 1609))) "Designing Functions" (c (? . 1611)) "Work" "fun2" (c counter c (c (? . 9) c (? . 1614))) (c counter c (c (? . 9) c (? . 2003))) "ex:find-path-comp" (c counter c (c (? . 9) c (? . 1617))) "fig:convert2" (q tech "any") (q tech "file.v1") (q part "sec:files-models") (c (? . 122)) "ex:fsm-match" (c (c (? . 9) c (? . 1624))) "ex:eval+def1" (c counter c (c (? . 9) c (? . 1626))) (c counter c (c (? . 9) c (? . 1911))) (q part "sec:fractal-acc") (c (? . 810)) "nelist1" "ex:terminate-bundle" (c (? . 136)) "list0" (c counter c (c (? . 9) c (? . 1819))) "arith-s0" "predicate2" (c counter c (c (? . 9) c (? . 1637))) "fig:design5" "BSL-da-all" "sec:itemization-design2" (c (? . 591)) "zoo4" "H" (q tech "xexpr.v0") "ex:triangulate3" (c counter c (c (? . 9) c (? . 1646))) "ex:bundle-from-abstraction" (c counter c (c (? . 9) c (? . 1648))) (q part "sec:two-inputs:case3") (c (? . 443)) "norf" "fig:blue-eyes" "ex:hangman-list" "sec:data-uni" (c (? . 517)) "Entry" (q tech "file.v3") "Block" (q part "sec:lambdaII") (c (? . 479) c (6 (? . 241) (? . 242)) q " II") "mix-ufo-render" "struct-edit2" (c counter c (c (? . 9) c (? . 1663))) "LOFD" "ex:matrix-gen" "Connection" "ex:free-bound-both" (c counter c (c (? . 9) c (? . 1668))) "ex:file-ls-R" "fig:read" (c counter c (c (? . 8) c (? . 1671))) "ex:xml-represent" (c counter c (c (? . 9) c (? . 1673))) "Finger Exercises: Lists" (c (? . 1675)) "BSL-fun-def*" "connect-dots-ex" (c counter c (c (? . 9) c (? . 1678))) "fig:def-data-mutual-arrows" "fun3" (c counter c (c (? . 9) c (? . 1681))) "Lists in Lists, Files" (c (? . 1683)) "ex:xmachine-data1" "arith-p1" (c counter c (c (? . 9) c (? . 1686))) (q part "sec:lists-records") (u . "fig:create-rocket-scene.v6") (c counter c (c (? . 8) c (? . 1689))) "XItem.v1" (q part "sec:designing-with-abstraction") "fig:enum" (c counter c (c (? . 8) c (? . 1693))) "arith-n" (q tech "low") (q tech "imagestream") "Extended Exercises" "struct16" "fig:mix-ufo2" (c (c (? . 8) c (? . 1700))) "ex:2and-or-map" "ex:sexpr-abstract1" (q tech "positivenumber") (q part "sec:design-abstract") (c (? . 609)) "ex:time-factorial" "sec:edit2" (c (? . 123)) "Constant Definitions" (c (? . 1710)) "ex:to10" (c counter c (c (? . 9) c (? . 1712))) "design2" (c tech c (? . 898)) (q part "sec:apriori-abs") (c (? . 1544)) "struct5" (c counter c (c (? . 9) c (? . 1718))) "Domain-Specific Languages" (c (? . 1720)) "fig:cons" (c counter c (c (? . 8) c (? . 1722))) "design9" (c (c (? . 9) c (? . 1724))) "fig:root" "fig:tetris" (q part "ch:lists1") (c (? . 1089)) "fig:fsm-a-b-or-c*-d" "ex:bsl-all-sexpr" (c counter c (c (? . 9) c (? . 1731))) "Mixing up Worlds" (c (? . 1733)) "ex:squared" (c counter c (c (? . 9) c (? . 1735))) (q part "sec:local-is-power") (c (? . 208)) "UnitWorld" (q tech "ci") "n3" (c counter c (c (? . 9) c (? . 1741))) "fig:local-is-power" (c counter c (c (? . 8) c (? . 1743))) "world-signatures" "fig:data-def" (c (c (? . 8) c (? . 1746))) "ex:gcd-structural2" (c counter c (c (? . 9) c (? . 1748))) "ex:dir0" (q tech "lot") "ex:infinite-set" (c counter c (c (? . 9) c (? . 1752))) "Intermezzo: Quote, Unquote" (c (? . 1754)) (q part "sec:nats") (c (? . 1031)) "ex:worm5" (c counter c (c (? . 9) c (? . 1758))) "fig:blue-eyed-child" (c counter c (c (? . 8) c (? . 1760))) "ex:bsl-eval" (c counter c (c (? . 9) c (? . 1762))) "fraud" (c counter c (c (? . 9) c (? . 1764))) "struct12" "ex:count-local" "ex:string-bundle" "Pair-boolean-string" "Graph" (c counter c (c (? . 9) c (? . 1847))) "ex:xml+string" (c counter c (c (? . 9) c (? . 1772))) "ex:bsl-var-numeric" (c counter c (c (? . 9) c (? . 1774))) "fun6-constant" "Lam" "One More Definition" (c (? . 1778)) "Interpreting Expressions" "ex:queen-property-testing" "ex:attribute-value" (c counter c (c (? . 9) c (? . 1782))) "struct2" "ex:mc-accu-state" (c counter c (c (? . 9) c (? . 1785))) (q part "ch:summary5") (c (? . 136)) "CTemperature" (q part "sec:input-errors") (c (? . 298)) "fig:cmp-dog-cat" (q part "sec:permute") (c counter c (c (? . 9) c (? . 2006))) "random1" (c counter c (c (? . 8) c (? . 2065))) "fig:integrate-test" "mix3" (c (c (? . 9) c (? . 1798))) "encode" (c counter c (c (? . 9) c (? . 1800))) (c tech c (? . 1199)) "ShotWorld" (q tech "consorempty") "nelist2" (c counter c (c (? . 9) c (? . 1805))) "design14" (c counter c (c (? . 9) c (? . 1807))) (c part c (u . "chap:i2-3")) (c (? . 167)) "Similarities in Data Definitions" (c (? . 1811)) "ex:bsl-dd" (c counter c (c (? . 9) c (? . 1813))) (q tech "positiveinteger") "convertDM" "collapse" (c counter c (c (? . 9) c (? . 1817))) "ex:scope1" (q part "sec:works") (c (? . 1039)) "fig:matrix" (c counter c (c (? . 8) c (? . 1822))) "LRCD" "fig:queens" (c counter c (c (? . 8) c (? . 1825))) "fig:terminology" (c counter c (c (? . 8) c (? . 1827))) "predicate1" (c counter c (c (? . 9) c (? . 1829))) "fig:definition-q" (q tech "association") "mix-ufo-move" (q tech "soe") "ex:find-root-locals" (c counter c (c (? . 9) c (? . 1835))) "Designing With Self-Referential Data Definitions" "ex:family-forest1" (q part "ch:design-lists") (c (? . 1837)) (q tech "file*") "cond3" (q part "sec:testing") (c (? . 1021)) (q tech "integer") "arith-i2" "ex:abstractions-in-space-war" "ex:2fold-append" (q tech "file") "fig:template-q" "mix-ufo-fire" (c (c (? . 9) c (? . 1851))) (q part "ch:list-games") (c (? . 1698)) "rd2" (c counter c (c (? . 9) c (? . 1855))) "NonnegativeNumber" "Symbol" (q tech "list of list of string") "ex:prefix-bsl" (c counter c (c (? . 9) c (? . 1860))) "arith-p2" "Similarities Everywhere" (c (? . 1863)) "Algorithms that Backtrack" (c (? . 1865)) "ex:drop-take" (c counter c (c (? . 9) c (? . 1867))) (q part "sec:loss:generative") (c (? . 516)) "ex:bsl-lookup-con" "fig:testing" (q part "ch:3use") (c (? . 1084)) "LOT" "fig:family-tree" (c counter c (c (? . 8) c (? . 1876))) (u . "fig:create-rocket-scene.v4") (c counter c (c (? . 8) c (? . 1878))) (q part "sec:quick-sort") (c (? . 1445)) "lrcd" "ex:worm1" "ex:xmachine-data2" "ex:weekly-wage" (c counter c (c (? . 9) c (? . 1885))) "ex:find-root-termination" (q tech "polygon") "cond7" "Nested-string" (q part "sec:synsem:sem") (c (? . 319) q ": Meaning") "fun5" "Polygon" "fun0" "fig:familyS" (q tech "four") "lo1" (q part "sec:design-N") (c (? . 350)) "ex:abs-sort" "Binary Search" (c (? . 1902)) "ex:parse-words" (c counter c (c (? . 9) c (? . 1950))) "Forests" (c (? . 1906)) "Data Analysis" (c (? . 1908)) "path" "contains-flatt01" (q part "sec:structures") (c (? . 1165)) "ex:lists" (c counter c (c (? . 9) c (? . 1914))) (q part "sec:design-itemization") (c (? . 603)) (q tech "direction") "How To Design Programs" (c (? . 1919)) "ex:quick-sort-switch" (q tech "bsl da all") "ex:xml-odd-recursion" "Image" "arith-s2" (q part "htdp2e") (c (? . 1597)) "Interpreting Everything" (c (? . 1928)) (q tech "1string") "fig:solutions-for-4" (c counter c (c (? . 8) c (? . 1931))) "ex:dir-how-many1" (c counter c (c (? . 9) c (? . 1933))) "ex:free-bound-undeclared" (c counter c (c (? . 9) c (? . 1935))) "fig:data-info" (c counter c (c (? . 8) c (? . 1937))) (q part "sec:compounding2") (c (? . 39)) "ex:2use-map" (q part "sec:zoo1") (c (? . 1363)) "ex:lambda0" (c counter c (c (? . 9) c (? . 1944))) "ex:bsl-value" (c counter c (c (? . 9) c (? . 1946))) (q part "sec:interpreter") (c (? . 1780)) "struct11a" "Many Ways To Compute" (c (? . 1951)) (q part "sec:functions-as-values") (c (? . 353)) (c (? . 1136)) "Function Simplification" (c (? . 1956)) "The Commerce Of XML" (c (? . 1958)) (q part "sec:newton") (q "Newton" rsquo "s Method") "car-test-again" "Ball-2d" (q part "sec:designstructs") (c (? . 1461)) (q tech "vel") "SIGS" (q tech "simulationstate.v2") (q part "sec:two-inputs:case2") (c (? . 108)) "DoorState" (q tech "ball 1d") "Arithmetic and Arithmetic" (c (? . 1973)) "Not!" (c (? . 1975)) "ex:queen-tests" "fig:words-on-line" (c counter c (c (? . 8) c (? . 1978))) "fig:lex-beginner" (u . "fig:create-rocket-scene.v5") "arith-i3" "SpaceGame" "Functions that Produce Lists" (c (? . 1984)) "ex:lambda3" (c counter c (c (? . 9) c (? . 1986))) "ex:fsm-reacquaint1" "ex:integral-rectangle" "More Similarities in Functions" (c (? . 1990)) "fig:syn-beginner" (c counter c (c (? . 8) c (? . 1992))) "More Virtual Pets" (c (? . 1994)) "cond2" "ex:tree-pick" (c counter c (c (? . 9) c (? . 1997))) "Predicates: Know Thy Data" (c (? . 1999)) "n2" (c counter c (c (? . 9) c (? . 2001))) "struct15" "world-process" (c counter c (c (? . 8) c (? . 2004))) "ex:gauss-solve" "ex:xml-item1" "fig:path-exists1" (c counter c (c (? . 8) c (? . 2008))) "ex:2sort-abstract" (c counter c (c (? . 9) c (? . 2010))) "Person" "Line" "ex:bsl-parse-def" "ex:define-struct2" (c counter c (c (? . 9) c (? . 2015))) (q part "part:prologue") (c (? . 137)) "ex:gen-fun-instance2" (c counter c (c (? . 9) c (? . 2019))) "fig:ufo" "ex:dna-prefix" (c counter c (c (? . 9) c (? . 2022))) "struct7" (c (c (? . 9) c (? . 2024))) "ex:unquote-splicing" (c counter c (c (? . 9) c (? . 2026))) "ex:list7" "time-structure" (c part c (u . "chap:part:prologue")) "mix-coordinates" (c (c (? . 9) c (? . 2031))) (c (? . 319) q ": Tests") "ex:editor-mouse" (c (c (? . 9) c (? . 2034))) "ex:gauss-data" (c counter c (c (? . 9) c (? . 2036))) "fig:def-fun-mutual-arrows" (c counter c (c (? . 8) c (? . 2038))) "fig:fsm-again" (c counter c (c (? . 8) c (? . 2040))) "ex:bsl-parse-var" "Rearranging Words" (c (? . 2043)) "ImageStream" "letter-writing" (c (? . 136)) "arith-s1" (c counter c (c (? . 9) c (? . 2048))) "Designing with Abstractions" (c (? . 2050)) (q part "part:one") (c (? . 667)) "R3" "Incremental Refinement" (c (? . 2055)) "ex:filter-eval2" "vec" "LLS" "ex:mc-state" (c counter c (c (? . 9) c (? . 2060))) "fig:rel-abs-dist" "Creating Lists" (c (? . 2063)) "fig:copier" "Traversing Graphs" (c (? . 2066)) "Intervals" (c (? . 2068)) "ex:enum-subst" "fig:newton" "ex:quick-sort-terminates" (q part "sec:arith-mix") (c (? . 670)) "ex:draw-poly0" (c counter c (c (? . 9) c (? . 2075))) "ex:depth" (c counter c (c (? . 9) c (? . 2077))) "ex:bsl-da-all" (c counter c (c (? . 9) c (? . 2079))) "mix4" (c (c (? . 9) c (? . 2081)))) () (c (7 #f) h ! (equal) ((? . 0) v! (? . 1531) (? . 0) (c 3 ? . 872) (? . 6) #f) ((c index-entry c (? . 1403)) c (c (? . 1)) c (c (6 #f (? . 1404))) c (? . 3)) ((c index-entry c (? . 1296)) c (c (? . 2)) c (c (6 #f (? . 1297))) c (? . 3)) ((? . 4) v! #f (? . 4) #f (? . 26) #f) ((? . 5) v! #f (? . 5) #f (? . 6) #f) ((c index-entry c (? . 1488)) c (c (? . 7)) c (c (6 #f (? . 1489))) c (? . 3)) ((c counter c (c (? . 8) c (? . 605) c (? . 10))) . 79) ((c counter c (c (? . 9) c (? . 651) ? . 15)) . 207) ((? . 11) v! #f (? . 11) #f (? . 17) #f) ((? . 12) v! #f (? . 12) #f (? . 6) #f) ((? . 13) v! #f (? . 13) #f (? . 73) #f) ((? . 14) v! #f (? . 14) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1878) c (? . 10))) . 3) ((c counter c (c (? . 9) c (? . 2022) ? . 15)) . 333) ((? . 16) v! #f (? . 16) #f (? . 17) #f) ((c index-entry c (? . 177)) c (c (? . 18)) c (c (6 italic (? . 18))) q tech) ((? . 19) v! #f (? . 19) #f (? . 6) #f) ((? . 20) v! #f (? . 20) #f (? . 22) #f) ((? . 21) v! #f (? . 21) #f (? . 22) #f) ((c counter c (c (? . 8) c (? . 1100) c (? . 10))) . 22) ((? . 23) v! #f (? . 23) #f (? . 6) #f) ((c index-entry c (? . 1416)) c (c (? . 24)) c (c (6 #f (? . 1417))) c (? . 3)) ((? . 25) v! #f (? . 25) #f (? . 26) #f) ((? . 27) v! #f (? . 27) #f (? . 28) #f) ((? . 29) v! #f (? . 29) #f (? . 17) #f) ((? . 30) v! #f (? . 30) #f (? . 28) #f) ((? . 31) v! #f (? . 31) #f (? . 26) #f) ((? . 32) v! (? . 173) (? . 32) (c #f c #f c (? . 167)) (? . 237) #f) ((c counter c (c (? . 9) c (? . 33) ? . 15)) . 271) ((? . 34) v! #f (? . 34) #f (? . 28) #f) ((? . 35) v! #f (? . 35) #f (? . 6) #f) ((? . 36) v! #f (? . 36) #f (? . 26) #f) ((? . 37) v! #f (? . 37) #f (? . 6) #f) ((? . 38) v! (? . 1995) (? . 38) (c 7 ? . 481) (? . 17) #f) ((c counter c (c (? . 8) c (? . 748) c (? . 10))) . 17) ((c counter c (c (? . 9) c (? . 310) ? . 15)) . 158) ((c index-entry c (? . 1604)) c (c (? . 39)) c (c (6 #f (? . 1605))) c (? . 3)) ((c counter c (c (? . 9) c (? . 410) ? . 15)) . 417) ((? . 40) v! #f (? . 40) #f (? . 26) #f) ((? . 41) v! #f (? . 41) #f (? . 17) #f) ((c index-entry c (? . 448)) c (c (? . 42)) c (c (6 #f (? . 449))) c (? . 3)) ((c index-entry c (? . 714)) c (c (? . 43)) c (c (6 #f (? . 715))) c (? . 3)) ((c counter ? . 44) v! #f (c counter c (? . 51) ? . 44) #f (? . 26) #f) ((c index-entry c (c tech c (c (? . 57) c (? . 1131)))) c (c (? . 45)) c (c (6 italic (? . 45))) q tech) ((c counter c (c (? . 9) c (? . 1044) ? . 15)) . 56) ((? . 46) v! #f (? . 46) #f (? . 6) #f) ((? . 47) v! #f (? . 47) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 848) ? . 15)) . 10) ((c index-entry c (? . 1000)) c (c (? . 48)) c (c (6 italic (? . 48))) q tech) ((c counter c (c (? . 9) c (? . 1668) ? . 15)) . 418) ((c counter c (c (? . 9) c (? . 49) ? . 15)) . 230) ((c index-entry c (? . 1620)) c (c (? . 50)) c (c (6 italic (? . 50))) q tech) ((c counter ? . 52) v! #f (c counter c (? . 51) ? . 52) #f (? . 26) #f) ((c counter ? . 53) v! #f (c counter c (? . 62) ? . 53) #f (? . 17) #f) ((? . 54) v! #f (? . 54) #f (? . 28) #f) ((c index-entry c (? . 989)) c (c (? . 55)) c (c (6 #f (? . 990))) c (? . 3)) ((? . 56) v! #f (? . 56) #f (? . 6) #f) ((c tech c (c (? . 57) c (? . 58))) v! #f (c tech c (? . 57) c (? . 58)) #f (? . 17) #f) ((? . 59) v! #f (? . 59) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 783) ? . 15)) . 178) ((? . 60) v! #f (? . 60) #f (? . 26) #f) ((c index-entry c (? . 379)) c (c (? . 61)) c (c (6 italic (? . 61))) q tech) ((c index-entry c (c tech c (c (? . 62) c (? . 1106)))) c (c (? . 63)) c (c (6 italic (? . 63))) q tech) ((c index-entry c (? . 158)) c (c (? . 64)) c (c (6 #f (? . 159))) c (? . 3)) ((c index-entry c (? . 72)) c (c (? . 65)) c (c (6 italic (? . 65))) q tech) ((c index-entry c (c tech c (c (? . 151) c (? . 66)))) c (c (? . 66)) c (c (6 italic (? . 66))) q tech) ((? . 67) v! #f (? . 67) #f (? . 26) #f) ((? . 68) v! #f (? . 68) #f (? . 6) #f) ((? . 69) v! (? . 2069) (? . 69) (c 4 ? . 456) (? . 17) #f) ((c index-entry c (? . 1221)) c (c (? . 71)) c (c (6 #f (? . 1222))) c (? . 3)) ((? . 72) v! #f (? . 72) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 101) ? . 15)) . 48) ((c counter c (c (? . 9) c (? . 475) ? . 15)) . 363) ((? . 74) v! #f (? . 74) #f (? . 26) #f) ((c index-entry c (? . 432)) c (c (? . 75)) c (c (6 #f (? . 433))) c (? . 3)) ((? . 76) v! #f (? . 76) #f (? . 17) #f) ((? . 77) v! #f (? . 77) #f (? . 26) #f) ((c index-entry c (? . 1454)) c (c (? . 78)) c (c (6 italic (? . 78))) q tech) ((? . 79) v! (? . 1171) (? . 79) (c 1 ? . 716) (? . 26) #f) ((? . 81) v! (? . 1529) (? . 81) (c 1 ? . 906) (? . 73) #f) ((? . 82) v! (? . 202) (? . 82) (c 3 ? . 230) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1774) ? . 15)) . 286) ((? . 83) v! #f (? . 83) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1946) ? . 15)) . 281) ((? . 84) v! #f (? . 84) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 85) ? . 15)) . 169) ((c counter c (c (? . 8) c (? . 857) c (? . 10))) . 73) ((? . 86) v! #f (? . 86) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1580) ? . 15)) . 171) ((c index-entry c (? . 598)) c (c (? . 87)) c (c (6 italic (? . 87))) q tech) ((? . 88) v! #f (? . 88) #f (? . 73) #f) ((? . 89) v! #f (? . 89) #f (? . 6) #f) ((? . 90) v! #f (? . 90) #f (? . 22) #f) ((? . 91) v! (? . 1210) (? . 91) (c 1 ? . 232) (? . 26) #f) ((c counter c (c (? . 9) c (? . 1510) ? . 15)) . 290) ((? . 93) v! (? . 674) (? . 93) (c 2 ? . 677) (? . 73) #f) ((c counter c (c (? . 9) c (? . 245) ? . 15)) . 192) ((? . 95) v! #f (? . 95) #f (? . 22) #f) ((? . 96) v! #f (? . 96) #f (? . 73) #f) ((c index-entry c (? . 1391)) c (c (? . 97)) c (c (6 #f (? . 1392))) c (? . 3)) ((? . 98) v! #f (? . 98) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1078) c (? . 10))) . 34) ((? . 99) v! (? . 1866) (? . 99) (? . 1432) (? . 26) #f) ((? . 100) v! #f (? . 100) #f (? . 28) #f) ((? . 102) v! #f (? . 102) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 864) ? . 15)) . 120) ((c counter ? . 103) v! #f (c counter c (? . 62) ? . 103) #f (? . 17) #f) ((? . 104) v! #f (? . 104) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 105) ? . 15)) . 344) ((? . 106) v! #f (? . 106) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1239) ? . 15)) . 17) ((c index-entry c (c tech c (c (? . 114) c (? . 170)))) c (c (? . 107)) c (c (6 italic (? . 107))) q tech) ((c index-entry c (? . 1969)) c (c (? . 108)) c (c (6 #f (? . 1970))) c (? . 3)) ((? . 109) v! #f (? . 109) #f (? . 26) #f) ((? . 110) v! #f (? . 110) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1764) ? . 15)) . 145) ((c counter c (c (? . 9) c (? . 575) ? . 15)) . 186) ((c index-entry c (? . 349)) c (c (? . 111)) c (c (6 italic (? . 111))) q tech) ((? . 112) v! #f (? . 112) #f (? . 22) #f) ((c index-entry c (? . 262)) c (c (? . 113)) c (c (6 italic (? . 113))) q tech) ((c counter c (c (? . 9) c (? . 579) ? . 15)) . 368) ((c tech c (c (? . 114) c (? . 115))) v! #f (c tech c (? . 114) c (? . 115)) #f (? . 73) #f) ((? . 116) v! #f (? . 116) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 927) ? . 15)) . 334) ((? . 117) v! #f (? . 117) #f (? . 6) #f) ((? . 118) v! #f (? . 118) #f (? . 28) #f) ((c index-entry c (? . 532)) c (q "BSL: Errors") c (c (6 #f (? . 533))) c (? . 3)) ((c index-entry c (? . 1456)) c (c (? . 119)) c (c (6 #f (? . 1457))) c (? . 3)) ((c counter c (c (? . 9) c (? . 812) ? . 15)) . 34) ((? . 120) v! #f (? . 120) #f (? . 6) #f) ((? . 121) v! #f (? . 121) #f (? . 28) #f) ((c index-entry c (? . 1622)) c (c (? . 122)) c (c (6 #f (? . 1623))) c (? . 3)) ((c index-entry c (c part c (c (? . 404) c (? . 1708)))) c (c (? . 123)) c (c (6 #f (? . 1709))) c (? . 3)) ((c counter c (c (? . 9) c (? . 681) ? . 15)) . 126) ((c counter c (c (? . 9) c (? . 124) ? . 15)) . 415) ((c index-entry c (? . 970)) c (c (? . 125)) c (c (6 #f (? . 971))) c (? . 3)) ((c counter c (c (? . 9) c (? . 511) ? . 15)) . 150) ((? . 126) v! #f (? . 126) #f (? . 6) #f) ((c index-entry c (? . 1182)) c (c (? . 127)) c (c (6 #f (? . 1183))) c (? . 3)) ((c counter c (c (? . 9) c (? . 861) ? . 15)) . 377) ((? . 128) v! #f (? . 128) #f (? . 26) #f) ((? . 129) v! (? . 1864) (? . 129) (? . 368) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1490) ? . 15)) . 335) ((c counter c (c (? . 9) c (? . 377) ? . 15)) . 244) ((c counter c (c (? . 9) c (? . 538) ? . 15)) . 348) ((c index-entry c (? . 1968)) c (c (? . 130)) c (c (6 italic (? . 130))) q tech) ((? . 131) v! #f (? . 131) #f (? . 26) #f) ((? . 132) v! #f (? . 132) #f (? . 26) #f) ((? . 133) v! #f (? . 133) #f (? . 73) #f) ((? . 134) v! #f (? . 134) #f (? . 22) #f) ((? . 135) v! #f (? . 135) #f (? . 28) #f) ((c index-entry c (? . 731)) c (c (? . 136)) c (c (6 #f (? . 732))) c (? . 3)) ((c index-entry c (? . 2017)) c (c (? . 137)) c (c (6 #f (? . 2018))) c (? . 3)) ((c index-entry c (? . 1587)) c (c (? . 138)) c (c (6 italic (? . 138))) q tech) ((c counter c (c (? . 9) c (? . 333) ? . 15)) . 206) ((c counter c (c (? . 9) c (? . 1340) ? . 15)) . 339) ((c index-entry c (? . 572)) c (c (? . 139)) c (c (6 #f (? . 573))) c (? . 3)) ((? . 140) v! #f (? . 140) #f (? . 26) #f) ((c counter ? . 141) v! #f (c counter c (? . 661) ? . 141) #f (? . 17) #f) ((? . 142) v! #f (? . 142) #f (? . 187) #f) ((? . 143) v! #f (? . 143) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 842) ? . 15)) . 166) ((c counter c (c (? . 9) c (? . 2026) ? . 15)) . 198) ((c tech c (c (? . 51) c (? . 144))) v! #f (c tech c (? . 51) c (? . 144)) #f (? . 26) #f) ((? . 145) v! #f (? . 145) #f (? . 28) #f) ((? . 146) v! #f (? . 146) #f (? . 28) #f) ((? . 147) v! #f (? . 147) #f (? . 28) #f) ((c counter ? . 148) v! #f (c counter c (? . 51) ? . 148) #f (? . 26) #f) ((c index-entry c (c tech c (c (? . 114) c (? . 855)))) c (c (? . 149)) c (c (6 italic (? . 149))) q tech) ((? . 150) v! #f (? . 150) #f (? . 28) #f) ((c tech c (c (? . 151) c (? . 152))) v! #f (c tech c (? . 151) c (? . 152)) #f (? . 17) #f) ((? . 153) v! #f (? . 153) #f (? . 6) #f) ((? . 154) v! #f (? . 154) #f (? . 28) #f) ((c index-entry c (? . 1122)) c (c (? . 155)) c (c (6 #f (? . 1123))) c (? . 3)) ((? . 156) v! #f (? . 156) #f (? . 6) #f) ((c tech c (c (? . 62) c (? . 157))) v! #f (c tech c (? . 62) c (? . 157)) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 876) c (? . 10))) . 51) ((? . 158) v! (? . 159) (? . 158) (c 4 ? . 337) (? . 6) #f) ((? . 161) v! #f (? . 161) #f (? . 17) #f) ((c counter ? . 162) v! #f (c counter c (? . 62) ? . 162) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1374) ? . 15)) . 336) ((c counter c (c (? . 9) c (? . 1520) ? . 15)) . 253) ((c counter c (c (? . 9) c (? . 1712) ? . 15)) . 411) ((c index-entry c (? . 1503)) c (c (? . 163)) c (c (6 #f (? . 1504))) c (? . 3)) ((? . 164) v! #f (? . 164) #f (? . 73) #f) ((? . 165) v! (? . 1036) (? . 165) (c 1 ? . 306) (? . 26) #f) ((? . 166) v! (? . 446) (? . 166) (? . 1369) (? . 1370) #t) ((c counter c (c (? . 9) c (? . 835) ? . 15)) . 211) ((c counter c (c (? . 9) c (? . 1851) ? . 15)) . 88) ((c counter c (c (? . 8) c (? . 402) c (? . 10))) . 77) ((c counter c (c (? . 9) c (? . 1835) ? . 15)) . 362) ((? . 168) v! #f (? . 168) #f (? . 6) #f) ((? . 169) v! #f (? . 169) #f (? . 73) #f) ((c index-entry c (? . 1260)) c (c (? . 107)) c (c (6 italic (? . 107))) q tech) ((c counter c (c (? . 9) c (? . 360) ? . 15)) . 111) ((c counter c (c (? . 9) c (? . 1785) ? . 15)) . 424) ((c index-entry c (? . 146)) c (c (? . 171)) c (c (6 italic (? . 171))) q tech) ((c index-entry c (? . 32)) c (c (? . 172)) c (c (6 #f (? . 173))) c (? . 3)) ((c index-entry c (? . 209)) c (c (? . 174)) c (c (6 #f (? . 210))) c (? . 3)) ((? . 175) v! #f (? . 175) #f (? . 6) #f) ((? . 176) v! #f (? . 176) #f (? . 22) #f) ((? . 177) v! #f (? . 177) #f (? . 28) #f) ((? . 178) v! #f (? . 178) #f (? . 28) #f) ((? . 179) v! #f (? . 179) #f (? . 17) #f) ((? . 180) v! #f (? . 180) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 671) ? . 15)) . 209) ((c tech c (c (? . 114) c (? . 181))) v! #f (c tech c (? . 114) c (? . 181)) #f (? . 73) #f) ((? . 182) v! #f (? . 182) #f (? . 17) #f) ((? . 183) v! #f (? . 183) #f (? . 197) #f) ((? . 184) v! #f (? . 184) #f (? . 73) #f) ((? . 185) v! #f (? . 185) #f (? . 17) #f) ((? . 186) v! () (? . 186) (c 8 ? . 860) (? . 187) #f) ((c counter c (c (? . 8) c (? . 289) c (? . 10))) . 1) ((? . 188) v! #f (? . 188) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 986) c (? . 10))) . 80) ((c counter c (c (? . 9) c (? . 1772) ? . 15)) . 308) ((? . 189) v! #f (? . 189) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 190) ? . 15)) . 372) ((c index-entry c (? . 1562)) c (c (? . 191)) c (c (6 #f (? . 1563))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1624) ? . 15)) . 388) ((? . 192) v! #f (? . 192) #f (? . 187) #f) ((c counter c (c (? . 9) c (? . 1762) ? . 15)) . 282) ((c counter c (c (? . 9) c (? . 204) ? . 15)) . 312) ((c counter c (c (? . 8) c (? . 273) c (? . 10))) . 107) ((? . 193) v! #f (? . 193) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 506) ? . 15)) . 42) ((c index-entry c (? . 839)) c (c (? . 194)) c (c (6 italic (? . 194))) q tech) ((c counter c (c (? . 8) c (? . 1931) c (? . 10))) . 100) ((? . 195) v! #f (? . 195) #f (? . 28) #f) ((? . 196) v! #f (? . 196) #f (? . 197) #f) ((c index-entry c (? . 817)) c (c (? . 198)) c (c (6 #f (? . 818))) c (? . 3)) ((? . 199) v! #f (? . 199) #f (? . 17) #f) ((? . 200) v! #f (? . 200) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1486) ? . 15)) . 410) ((c index-entry c (? . 82)) c (c (? . 201)) c (c (6 #f (? . 202))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1323) ? . 15)) . 428) ((c index-entry c (? . 286)) c (c (? . 203)) c (c (6 italic (? . 203))) q tech) ((? . 205) v! #f (? . 205) #f (? . 28) #f) ((c index-entry c (? . 110)) c (c (? . 206)) c (c (6 italic (? . 206))) q tech) ((? . 207) v! #f (? . 207) #f (? . 6) #f) ((c index-entry c (? . 1737)) c (c (? . 208)) c (c (6 #f (? . 1738))) c (? . 3)) ((c counter c (c (? . 8) c (? . 1992) c (? . 10))) . 27) ((? . 209) v! (? . 210) (? . 209) (c 5 ? . 218) (? . 17) #f) ((? . 211) v! #f (? . 211) #f (? . 6) #f) ((? . 212) v! #f (? . 212) #f (? . 6) #f) ((? . 213) v! #f (? . 213) #f (? . 73) #f) ((? . 214) v! #f (? . 214) #f (? . 22) #f) ((? . 215) v! #f (? . 215) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 216) ? . 15)) . 250) ((c counter c (c (? . 9) c (? . 705) ? . 15)) . 354) ((? . 217) v! (? . 1441) (? . 217) (c 2 ? . 218) (? . 17) #f) ((? . 219) v! #f (? . 219) #f (? . 28) #f) ((? . 220) v! #f (? . 220) #f (? . 22) #f) ((? . 221) v! #f (? . 221) #f (? . 6) #f) ((? . 222) v! #f (? . 222) #f (? . 6) #f) ((? . 223) v! #f (? . 223) #f (? . 28) #f) ((? . 224) v! #f (? . 224) #f (? . 26) #f) ((? . 225) v! #f (? . 225) #f (? . 73) #f) ((c index-entry c (? . 1397)) c (c (? . 226)) c (c (6 #f (? . 1398))) c (? . 3)) ((? . 227) v! #f (? . 227) #f (? . 17) #f) ((? . 228) v! #f (? . 228) #f (? . 6) #f) ((? . 229) v! (? . 1920) (? . 229) (? . 230) (? . 17) #f) ((? . 231) v! (? . 824) (? . 231) (? . 232) (? . 26) #f) ((? . 233) v! #f (? . 233) #f (? . 28) #f) ((? . 234) v! #f (? . 234) #f (? . 6) #f) ((? . 235) v! #f (? . 235) #f (? . 197) #f) ((c counter c (c (? . 8) c (? . 1422) c (? . 10))) . 112) ((? . 236) v! #f (? . 236) #f (? . 237) #f) ((c counter c (c (? . 9) c (? . 1805) ? . 15)) . 129) ((? . 238) v! #f (? . 238) #f (? . 26) #f) ((? . 239) v! (? . 590) (? . 239) (c 2 ? . 428) (? . 22) #f) ((c index-entry c (? . 1179)) c (c (? . 240)) c (c (6 italic (? . 240))) q tech) ((c index-entry c (? . 1660)) c (q "Abstracting with lambda II") c (c (6 #f (? . 1661))) c (? . 3)) ((? . 243) v! #f (? . 243) #f (? . 22) #f) ((? . 244) v! #f (? . 244) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 256) ? . 15)) . 108) ((? . 246) v! #f (? . 246) #f (? . 6) #f) ((c index-entry c (? . 1159)) c (c (? . 247)) c (c (6 italic (? . 247))) q tech) ((? . 248) v! #f (? . 248) #f (? . 6) #f) ((? . 249) v! #f (? . 249) #f (? . 28) #f) ((c index-entry c (? . 1450)) c (c (? . 250)) c (c (6 #f (? . 1451))) c (? . 3)) ((? . 251) v! #f (? . 251) #f (? . 26) #f) ((? . 252) v! #f (? . 252) #f (? . 28) #f) ((? . 253) v! #f (? . 253) #f (? . 6) #f) ((? . 254) v! #f (? . 254) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 529) ? . 15)) . 270) ((c counter c (c (? . 8) c (? . 255) c (? . 10))) . 90) ((? . 257) v! #f (? . 257) #f (? . 187) #f) ((c counter c (c (? . 9) c (? . 805) ? . 15)) . 159) ((c counter c (c (? . 9) c (? . 779) ? . 15)) . 396) ((? . 258) v! #f (? . 258) #f (? . 28) #f) ((? . 259) v! #f (? . 259) #f (? . 6) #f) ((? . 260) v! (? . 1081) (? . 260) (? . 1061) (? . 17) #f) ((? . 261) v! #f (? . 261) #f (? . 73) #f) ((? . 262) v! #f (? . 262) #f (? . 26) #f) ((? . 263) v! #f (? . 263) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 629) ? . 15)) . 152) ((c index-entry c (? . 426)) c (c (? . 264)) c (c (6 #f (? . 427))) c (? . 3)) ((c counter c (c (? . 9) c (? . 265) ? . 15)) . 320) ((c counter c (c (? . 8) c (? . 978) c (? . 10))) . 92) ((c counter c (c (? . 9) c (? . 1735) ? . 15)) . 204) ((? . 266) v! #f (? . 266) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 320) ? . 15)) . 330) ((c index-entry c (? . 683)) c (c (? . 267)) c (c (6 italic (? . 267))) q tech) ((? . 268) v! #f (? . 268) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 269) c (? . 10))) . 47) ((? . 270) v! #f (? . 270) #f (? . 17) #f) ((? . 271) v! #f (? . 271) #f (? . 22) #f) ((? . 272) v! #f (? . 272) #f (? . 17) #f) ((? . 274) v! #f (? . 274) #f (? . 22) #f) ((? . 275) v! (? . 392) (? . 275) (c 3 ? . 424) (? . 28) #f) ((c counter c (c (? . 8) c (? . 1493) c (? . 10))) . 69) ((? . 276) v! (? . 1959) (? . 276) (? . 376) (? . 28) #f) ((c counter c (c (? . 9) c (? . 736) ? . 15)) . 193) ((? . 278) v! #f (? . 278) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 385) ? . 15)) . 402) ((c tech c (c (? . 279) c (? . 280))) v! #f (c tech c (? . 279) c (? . 280)) #f (? . 22) #f) ((c index-entry c (? . 1172)) c (c (? . 281)) c (c (6 italic (? . 281))) q tech) ((? . 282) v! #f (? . 282) #f (? . 73) #f) ((? . 283) v! #f (? . 283) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 618) ? . 15)) . 91) ((? . 284) v! #f (? . 284) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1526) c (? . 10))) . 70) ((? . 285) v! #f (? . 285) #f (? . 26) #f) ((? . 286) v! #f (? . 286) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 688) ? . 15)) . 262) ((c counter c (c (? . 9) c (? . 469) ? . 15)) . 251) ((c index-entry c (c part c (c (? . 151) c (? . 712)))) c (c (? . 287)) c (c (6 #f (? . 713))) c (? . 3)) ((? . 288) v! #f (? . 288) #f (? . 28) #f) ((? . 290) v! #f (? . 290) #f (? . 237) #f) ((c index-entry c (? . 830)) c (c (? . 291)) c (c (6 #f (? . 831))) c (? . 3)) ((c index-entry c (? . 727)) c (c (? . 136)) c (c (6 #f (? . 728))) c (? . 3)) ((? . 292) v! #f (? . 292) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1064) ? . 15)) . 200) ((c counter c (c (? . 9) c (? . 1194) ? . 15)) . 252) ((c counter c (c (? . 9) c (? . 867) ? . 15)) . 326) ((? . 293) v! #f (? . 293) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 473) ? . 15)) . 14) ((? . 294) v! #f (? . 294) #f (? . 28) #f) ((? . 295) v! #f (? . 295) #f (? . 17) #f) ((? . 296) v! #f (? . 296) #f (? . 6) #f) ((c tech c (c (? . 57) c (? . 297))) v! #f (c tech c (? . 57) c (? . 297)) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1206) c (? . 10))) . 36) ((c index-entry c (? . 1790)) c (c (? . 298)) c (c (6 #f (? . 1791))) c (? . 3)) ((c index-entry c (? . 1266)) c (c (? . 299)) c (c (6 italic (? . 299))) q tech) ((c index-entry c (? . 664)) c (c (? . 300)) c (c (6 #f (? . 665))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1074) ? . 15)) . 311) ((? . 301) v! #f (? . 301) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1243) ? . 15)) . 57) ((c index-entry c (? . 1377)) c (c (? . 302)) c (c (6 #f (? . 1378))) c (? . 3)) ((? . 303) v! #f (? . 303) #f (? . 22) #f) ((? . 304) v! #f (? . 304) #f (? . 28) #f) ((? . 305) v! (? . 1903) (? . 305) (c 2 ? . 306) (? . 26) #f) ((c index-entry c (? . 972)) c (c (? . 307)) c (c (6 #f (? . 973))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1281) ? . 15)) . 213) ((? . 308) v! #f (? . 308) #f (? . 28) #f) ((c tech c (c (? . 51) c (? . 309))) v! #f (c tech c (? . 51) c (? . 309)) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1359) ? . 15)) . 37) ((c counter c (c (? . 9) c (? . 718) ? . 15)) . 59) ((? . 311) v! #f (? . 311) #f (? . 6) #f) ((c counter ? . 312) v! #f (c counter c (? . 62) ? . 312) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1388) ? . 15)) . 49) ((c counter ? . 313) v! #f (c counter c (? . 51) ? . 313) #f (? . 26) #f) ((c counter ? . 314) v! #f (c counter c (? . 151) ? . 314) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 315) ? . 15)) . 353) ((? . 316) v! #f (? . 316) #f (? . 73) #f) ((c counter ? . 317) v! #f (c counter c (? . 151) ? . 317) #f (? . 17) #f) ((? . 318) v! #f (? . 318) #f (? . 17) #f) ((c index-entry c (? . 1288)) c (q "BSL: Vocabulary") c (c (6 #f (? . 1289))) c (? . 3)) ((? . 321) v! #f (? . 321) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1829) ? . 15)) . 101) ((c index-entry c (? . 1549)) c (c (? . 322)) c (c (6 #f (? . 1550))) c (? . 3)) ((? . 323) v! #f (? . 323) #f (? . 28) #f) ((? . 324) v! #f (? . 324) #f (? . 17) #f) ((? . 325) v! #f (? . 325) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 326) ? . 15)) . 268) ((c counter c (c (? . 9) c (? . 327) ? . 15)) . 92) ((? . 328) v! (? . 994) (? . 328) (? . 329) (? . 22) #t) ((c counter c (c (? . 9) c (? . 330) ? . 15)) . 125) ((c index-entry c (? . 1073)) c (c (? . 331)) c (c (6 italic (? . 331))) q tech) ((c counter c (c (? . 9) c (? . 1138) ? . 15)) . 276) ((c counter c (c (? . 9) c (? . 332) ? . 15)) . 41) ((c counter c (c (? . 9) c (? . 964) ? . 15)) . 238) ((c counter ? . 334) v! #f (c counter c (? . 114) ? . 334) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1673) ? . 15)) . 301) ((? . 335) v! #f (? . 335) #f (? . 6) #f) ((? . 336) v! (? . 1676) (? . 336) (c 1 ? . 337) (? . 6) #f) ((c counter c (c (? . 9) c (? . 1617) ? . 15)) . 399) ((c counter c (c (? . 9) c (? . 338) ? . 15)) . 274) ((c counter ? . 339) v! #f (c counter c (? . 51) ? . 339) #f (? . 26) #f) ((? . 340) v! #f (? . 340) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 1356) ? . 15)) . 30) ((c counter c (c (? . 9) c (? . 536) ? . 15)) . 245) ((c counter c (c (? . 8) c (? . 1384) c (? . 10))) . 23) ((? . 341) v! #f (? . 341) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1746) c (? . 10))) . 20) ((? . 342) v! #f (? . 342) #f (? . 73) #f) ((? . 343) v! #f (? . 343) #f (? . 6) #f) ((c index-entry c (? . 1715)) c (c (? . 344)) c (c (6 italic (? . 344))) q tech) ((c counter c (c (? . 9) c (? . 345) ? . 15)) . 170) ((c counter c (c (? . 9) c (? . 346) ? . 15)) . 74) ((c tech c (c (? . 114) c (? . 347))) v! #f (c tech c (? . 114) c (? . 347)) #f (? . 73) #f) ((? . 348) v! #f (? . 348) #f (? . 22) #f) ((? . 349) v! #f (? . 349) #f (? . 6) #f) ((c index-entry c (? . 1899)) c (c (? . 350)) c (c (6 #f (? . 1900))) c (? . 3)) ((? . 351) v! (? . 802) (? . 351) (c 3 ? . 882) (? . 6) #f) ((? . 352) v! #f (? . 352) #f (? . 73) #f) ((c index-entry c (? . 1953)) c (c (? . 353)) c (c (6 #f (? . 1954))) c (? . 3)) ((? . 354) v! #f (? . 354) #f (? . 17) #f) ((? . 355) v! #f (? . 355) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 389) ? . 15)) . 305) ((c counter c (c (? . 9) c (? . 356) ? . 15)) . 389) ((? . 357) v! #f (? . 357) #f (? . 6) #f) ((? . 358) v! #f (? . 358) #f (? . 6) #f) ((c index-entry c (? . 568)) c (c (? . 359)) c (c (6 italic (? . 359))) q tech) ((c counter c (c (? . 9) c (? . 498) ? . 15)) . 33) ((? . 361) v! #f (? . 361) #f (? . 187) #f) ((? . 362) v! #f (? . 362) #f (? . 6) #f) ((? . 363) v! #f (? . 363) #f (? . 26) #f) ((? . 364) v! (? . 1257) (? . 364) (c 3 ? . 430) (? . 28) #f) ((c counter c (c (? . 9) c (? . 365) ? . 15)) . 181) ((? . 366) v! (? . 600) (? . 366) (? . 1465) (? . 197) #t) ((? . 367) v! (? . 1991) (? . 367) (c 2 ? . 368) (? . 73) #f) ((? . 369) v! #f (? . 369) #f (? . 17) #f) ((? . 370) v! #f (? . 370) #f (? . 73) #f) ((c index-entry c (? . 1849)) c (c (? . 371)) c (c (6 italic (? . 371))) q tech) ((c counter c (c (? . 8) c (? . 1700) c (? . 10))) . 24) ((? . 372) v! (? . 1497) (? . 372) (c 4 ? . 232) (? . 26) #f) ((c counter c (c (? . 9) c (? . 373) ? . 15)) . 257) ((? . 374) v! #f (? . 374) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 584) ? . 15)) . 421) ((? . 375) v! (? . 724) (? . 375) (c 1 ? . 376) (? . 28) #f) ((? . 378) v! #f (? . 378) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1011) ? . 15)) . 384) ((? . 379) v! #f (? . 379) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 380) ? . 15)) . 296) ((c counter c (c (? . 9) c (? . 381) ? . 15)) . 114) ((c index-entry c (? . 185)) c (c (? . 382)) c (c (6 italic (? . 382))) q tech) ((? . 383) v! #f (? . 383) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 384) ? . 15)) . 106) ((? . 386) v! #f (? . 386) #f (? . 22) #f) ((? . 387) v! #f (? . 387) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 634) ? . 15)) . 161) ((c counter c (c (? . 9) c (? . 388) ? . 15)) . 26) ((? . 390) v! #f (? . 390) #f (? . 28) #f) ((c index-entry c (? . 275)) c (c (? . 391)) c (c (6 #f (? . 392))) c (? . 3)) ((c counter c (c (? . 9) c (? . 701) ? . 15)) . 124) ((? . 393) v! #f (? . 393) #f (? . 17) #f) ((? . 394) v! #f (? . 394) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 395) ? . 15)) . 93) ((c index-entry c (? . 1050)) c (c (? . 396)) c (c (6 #f (? . 1051))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1800) ? . 15)) . 157) ((? . 397) v! #f (? . 397) #f (? . 28) #f) ((? . 398) v! (? . 1952) (? . 398) (c #f c #f c (? . 167)) (? . 237) #f) ((? . 399) v! #f (? . 399) #f (? . 6) #f) ((c index-entry c (? . 1018)) c (c (? . 400)) c (c (6 italic (? . 400))) q tech) ((c counter c (c (? . 8) c (? . 401) c (? . 10))) . 40) ((? . 403) v! #f (? . 403) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1203) ? . 15)) . 232) ((c counter ? . 405) v! #f (c counter c (? . 404) ? . 405) #f (? . 6) #f) ((c index-entry c (? . 1342)) c (c (? . 406)) c (c (6 italic (? . 406))) q tech) ((c counter c (c (? . 9) c (? . 1648) ? . 15)) . 337) ((c tech c (c (? . 151) c (? . 407))) v! #f (c tech c (? . 151) c (? . 407)) #f (? . 17) #f) ((? . 408) v! #f (? . 408) #f (? . 28) #f) ((? . 409) v! #f (? . 409) #f (? . 17) #f) ((? . 411) v! #f (? . 411) #f (? . 22) #f) ((? . 412) v! #f (? . 412) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1155) ? . 15)) . 408) ((? . 413) v! (? . 847) (? . 413) (? . 762) (? . 650) #t) ((? . 414) v! #f (? . 414) #f (? . 73) #f) ((? . 415) v! #f (? . 415) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 612) c (? . 10))) . 82) ((c index-entry c (? . 1026)) c (c (? . 416)) c (c (6 italic (? . 416))) q tech) ((c counter c (c (? . 9) c (? . 417) ? . 15)) . 260) ((? . 418) v! #f (? . 418) #f (? . 17) #f) ((? . 419) v! #f (? . 419) #f (? . 6) #f) ((? . 420) v! #f (? . 420) #f (? . 22) #f) ((? . 421) v! #f (? . 421) #f (? . 28) #f) ((? . 422) v! #f (? . 422) #f (? . 17) #f) ((? . 423) v! (? . 1909) (? . 423) (c 1 ? . 424) (? . 28) #f) ((? . 425) v! #f (? . 425) #f (? . 26) #f) ((? . 426) v! (? . 427) (? . 426) (c 1 ? . 428) (? . 22) #f) ((c counter c (c (? . 9) c (? . 1348) ? . 15)) . 104) ((? . 429) v! (? . 1907) (? . 429) (c 2 ? . 430) (? . 28) #f) ((? . 431) v! #f (? . 431) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 641) ? . 15)) . 130) ((? . 432) v! (? . 433) (? . 432) (c 5 ? . 450) (? . 6) #f) ((? . 434) v! (? . 1121) (? . 434) (? . 574) (? . 22) #f) ((c tech c (c (? . 62) c (? . 435))) v! #f (c tech c (? . 62) c (? . 435)) #f (? . 17) #f) ((c index-entry c (c tech c (c (? . 114) c (? . 586)))) c (c (? . 436)) c (c (6 italic (? . 436))) q tech) ((c counter c (c (? . 9) c (? . 437) ? . 15)) . 217) ((c index-entry c (c tech c (c (? . 51) c (? . 1910)))) c (c (? . 438)) c (c (6 italic (? . 438))) q tech) ((? . 439) v! #f (? . 439) #f (? . 28) #f) ((c index-entry c (c tech c (c (? . 279) c (? . 280)))) c (c (? . 440)) c (c (6 italic (? . 440))) q tech) ((c tech c (c (? . 114) c (? . 170))) v! #f (c tech c (? . 114) c (? . 170)) #f (? . 73) #f) ((? . 441) v! #f (? . 441) #f (? . 17) #f) ((? . 442) v! (? . 1063) (? . 442) (c 6 ? . 218) (? . 17) #f) ((c index-entry c (? . 1650)) c (c (? . 443)) c (c (6 #f (? . 1651))) c (? . 3)) ((c counter c (c (? . 8) c (? . 444) c (? . 10))) . 11) ((c index-entry c (? . 166)) c (c (? . 445)) c (c (6 #f (? . 446))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1234) ? . 15)) . 291) ((c counter c (c (? . 9) c (? . 447) ? . 15)) . 298) ((c counter c (c (? . 8) c (? . 832) c (? . 10))) . 72) ((? . 448) v! (? . 449) (? . 448) (c 4 ? . 450) (? . 6) #f) ((? . 451) v! #f (? . 451) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1054) ? . 15)) . 427) ((c counter ? . 452) v! #f (c counter c (? . 151) ? . 452) #f (? . 17) #f) ((? . 453) v! #f (? . 453) #f (? . 28) #f) ((? . 454) v! #f (? . 454) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 775) c (? . 10))) . 86) ((? . 455) v! (? . 1092) (? . 455) (? . 456) (? . 17) #f) ((? . 457) v! #f (? . 457) #f (? . 28) #f) ((? . 458) v! #f (? . 458) #f (? . 28) #f) ((? . 459) v! #f (? . 459) #f (? . 17) #f) ((c index-entry c (? . 547)) c (c (? . 440)) c (c (6 italic (? . 440))) q tech) ((? . 460) v! #f (? . 460) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 461) ? . 15)) . 32) ((? . 462) v! (? . 1633) (? . 462) (c 39 ? . 329) (? . 22) #f) ((c index-entry c (? . 616)) c (c (? . 463)) c (c (6 italic (? . 463))) q tech) ((c counter c (c (? . 8) c (? . 554) c (? . 10))) . 102) ((c counter c (c (? . 9) c (? . 464) ? . 15)) . 165) ((? . 465) v! #f (? . 465) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1514) c (? . 10))) . 53) ((? . 466) v! (? . 608) (? . 466) (? . 306) (? . 26) #f) ((? . 467) v! (? . 1005) (? . 467) (c #f c #f c (? . 167)) (? . 187) #f) ((c counter c (c (? . 9) c (? . 1914) ? . 15)) . 117) ((c counter c (c (? . 9) c (? . 912) ? . 15)) . 164) ((? . 468) v! #f (? . 468) #f (? . 73) #f) ((? . 470) v! #f (? . 470) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1140) ? . 15)) . 62) ((c counter c (c (? . 8) c (? . 1937) c (? . 10))) . 8) ((c counter c (c (? . 8) c (? . 496) c (? . 10))) . 105) ((c index-entry c (? . 1249)) c (c (? . 471)) c (c (6 italic (? . 471))) q tech) ((c index-entry c (? . 1008)) c (c (? . 472)) c (c (6 #f (? . 1009))) c (? . 3)) ((? . 474) v! #f (? . 474) #f (? . 17) #f) ((? . 476) v! #f (? . 476) #f (? . 26) #f) ((c index-entry c (? . 1364)) c (c (? . 477)) c (c (6 #f (? . 1365))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1583) ? . 15)) . 224) ((c index-entry c (? . 1891)) c (q "BSL: Meaning") c (c (6 #f (? . 1892))) c (? . 3)) ((? . 478) v! #f (? . 478) #f (? . 26) #f) ((c index-entry c (? . 1166)) c (q "Abstracting with lambda I") c (c (6 #f (? . 1167))) c (? . 3)) ((? . 480) v! (? . 911) (? . 480) (c 6 ? . 481) (? . 17) #f) ((? . 482) v! #f (? . 482) #f (? . 28) #f) ((? . 483) v! #f (? . 483) #f (? . 28) #f) ((c index-entry c (? . 1815)) c (c (? . 484)) c (c (6 italic (? . 484))) q tech) ((? . 485) v! #f (? . 485) #f (? . 6) #f) ((c index-entry c (? . 874)) c (c (? . 486)) c (c (6 #f (? . 875))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1748) ? . 15)) . 357) ((? . 487) v! #f (? . 487) #f (? . 17) #f) ((c index-entry c (? . 1219)) c (c (? . 488)) c (c (6 #f (? . 1220))) c (? . 3)) ((? . 489) v! #f (? . 489) #f (? . 28) #f) ((c index-entry c (? . 288)) c (c (? . 490)) c (c (6 italic (? . 490))) q tech) ((c counter c (c (? . 8) c (? . 1693) c (? . 10))) . 67) ((c counter c (c (? . 9) c (? . 888) ? . 15)) . 425) ((c index-entry c (? . 1645)) c (c (? . 491)) c (c (6 italic (? . 491))) q tech) ((c index-entry c (? . 904)) c (q "lambda, Technically") c (c (6 #f (? . 905))) c (? . 3)) ((c index-entry c (? . 1226)) c (c (? . 492)) c (c (6 italic (? . 492))) q tech) ((c counter c (c (? . 9) c (? . 493) ? . 15)) . 89) ((c counter c (c (? . 8) c (? . 494) c (? . 10))) . 98) ((c counter c (c (? . 8) c (? . 495) c (? . 10))) . 110) ((? . 497) v! #f (? . 497) #f (? . 22) #f) ((? . 499) v! #f (? . 499) #f (? . 17) #f) ((c index-entry c (? . 422)) c (c (? . 500)) c (c (6 italic (? . 500))) q tech) ((c counter c (c (? . 9) c (? . 501) ? . 15)) . 406) ((c index-entry c (? . 1083)) c (c (? . 502)) c (c (6 italic (? . 502))) q tech) ((c index-entry c (? . 485)) c (c (? . 503)) c (c (6 italic (? . 503))) q tech) ((? . 504) v! (? . 1428) (? . 504) (c #f c #f c (? . 167)) (? . 514) #f) ((c index-entry c (? . 1704)) c (c (? . 505)) c (c (6 italic (? . 505))) q tech) ((? . 507) v! #f (? . 507) #f (? . 17) #f) ((? . 508) v! #f (? . 508) #f (? . 17) #f) ((? . 509) v! #f (? . 509) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1626) ? . 15)) . 110) ((c index-entry c (c tech c (c (? . 62) c (? . 1484)))) c (c (? . 510)) c (c (6 italic (? . 510))) q tech) ((? . 512) v! #f (? . 512) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1310) ? . 15)) . 65) ((? . 513) v! #f (? . 513) #f (? . 514) #f) ((c counter c (c (? . 9) c (? . 890) ? . 15)) . 113) ((? . 515) v! #f (? . 515) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1689) c (? . 10))) . 5) ((c index-entry c (? . 1869)) c (c (? . 516)) c (c (6 #f (? . 1870))) c (? . 3)) ((c counter c (c (? . 9) c (? . 902) ? . 15)) . 398) ((c index-entry c (c part c (c (? . 57) c (? . 1655)))) c (c (? . 517)) c (c (6 #f (? . 1656))) c (? . 3)) ((c index-entry c (? . 675)) c (c (? . 518)) c (c (6 #f (? . 676))) c (? . 3)) ((c counter c (c (? . 9) c (? . 519) ? . 15)) . 29) ((c index-entry c (? . 693)) c (c (? . 520)) c (c (6 #f (? . 694))) c (? . 3)) ((? . 521) v! #f (? . 521) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 522) c (? . 10))) . 95) ((? . 523) v! #f (? . 523) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 524) ? . 15)) . 73) ((c counter c (c (? . 9) c (? . 525) ? . 15)) . 216) ((c index-entry c (? . 1841)) c (c (? . 526)) c (c (6 italic (? . 526))) q tech) ((c index-entry c (? . 431)) c (c (? . 527)) c (c (6 italic (? . 527))) q tech) ((? . 528) v! #f (? . 528) #f (? . 26) #f) ((? . 530) v! #f (? . 530) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 531) ? . 15)) . 179) ((? . 532) v! (? . 533) (? . 532) (c #f c #f c (? . 167)) (? . 187) #f) ((c index-entry c (? . 1599)) c (c (? . 534)) c (c (6 #f (? . 1600))) c (? . 3)) ((c index-entry c (c tech c (c (? . 57) c (? . 297)))) c (c (? . 535)) c (c (6 italic (? . 535))) q tech) ((? . 537) v! #f (? . 537) #f (? . 73) #f) ((? . 539) v! #f (? . 539) #f (? . 26) #f) ((c index-entry c (? . 418)) c (c (? . 540)) c (c (6 italic (? . 540))) q tech) ((c counter c (c (? . 9) c (? . 541) ? . 15)) . 205) ((c counter c (c (? . 9) c (? . 542) ? . 15)) . 370) ((? . 543) v! #f (? . 543) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 544) c (? . 10))) . 111) ((? . 545) v! #f (? . 545) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1637) ? . 15)) . 102) ((? . 546) v! #f (? . 546) #f (? . 28) #f) ((? . 547) v! #f (? . 547) #f (? . 17) #f) ((? . 548) v! #f (? . 548) #f (? . 17) #f) ((? . 549) v! #f (? . 549) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 907) ? . 15)) . 321) ((c counter c (c (? . 9) c (? . 550) ? . 15)) . 60) ((c index-entry c (c tech c (c (? . 51) c (? . 814)))) c (c (? . 551)) c (c (6 italic (? . 551))) q tech) ((c counter c (c (? . 9) c (? . 1232) ? . 15)) . 154) ((? . 552) v! (? . 2033) (? . 552) (c #f c #f c (? . 167)) (? . 187) #f) ((c index-entry c (? . 1505)) c (c (? . 553)) c (c (6 #f (? . 1506))) c (? . 3)) ((? . 555) v! #f (? . 555) #f (? . 22) #f) ((? . 556) v! #f (? . 556) #f (? . 73) #f) ((c index-entry c (? . 1076)) c (c (? . 557)) c (c (6 italic (? . 557))) q tech) ((c index-entry c (c tech c (c (? . 51) c (? . 51)))) c (c (? . 558)) c (c (6 italic (? . 558))) q tech) ((? . 559) v! #f (? . 559) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1782) ? . 15)) . 306) ((? . 560) v! #f (? . 560) #f (? . 6) #f) ((c index-entry c (? . 945)) c (c (? . 561)) c (c (6 #f (? . 946))) c (? . 3)) ((c counter c (c (? . 9) c (? . 562) ? . 15)) . 133) ((c index-entry c (? . 1475)) c (c (? . 563)) c (c (6 italic (? . 563))) q tech) ((c counter c (c (? . 9) c (? . 2060) ? . 15)) . 423) ((? . 564) v! #f (? . 564) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 565) c (? . 10))) . 2) ((c counter c (c (? . 8) c (? . 916) c (? . 10))) . 71) ((? . 566) v! #f (? . 566) #f (? . 22) #f) ((? . 567) v! (? . 952) (? . 567) (c 5 ? . 481) (? . 17) #f) ((? . 568) v! #f (? . 568) #f (? . 6) #f) ((c index-entry c (? . 1043)) c (c (? . 569)) c (c (6 italic (? . 569))) q tech) ((c index-entry c (? . 1238)) c (c (? . 570)) c (c (6 italic (? . 570))) q tech) ((? . 571) v! #f (? . 571) #f (? . 17) #f) ((? . 572) v! (? . 573) (? . 572) (c 1 ? . 574) (? . 22) #f) ((? . 576) v! #f (? . 576) #f (? . 6) #f) ((c index-entry c (c part c (c (? . 279) c (? . 769)))) c (c (? . 577)) c (c (6 #f (? . 770))) c (? . 3)) ((c index-entry c (? . 1132)) c (c (? . 578)) c (c (6 #f (? . 1133))) c (? . 3)) ((? . 580) v! #f (? . 580) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1541) ? . 15)) . 307) ((c index-entry c (? . 820)) c (c (? . 581)) c (c (6 #f (? . 821))) c (? . 3)) ((? . 582) v! (? . 1929) (? . 582) (c 4 ? . 695) (? . 28) #f) ((c index-entry c (? . 1314)) c (c (? . 583)) c (c (6 italic (? . 583))) q tech) ((c counter c (c (? . 9) c (? . 1462) ? . 15)) . 195) ((? . 585) v! #f (? . 585) #f (? . 22) #f) ((c tech c (c (? . 114) c (? . 586))) v! #f (c tech c (? . 114) c (? . 586)) #f (? . 73) #f) ((c index-entry c (c tech c (c (? . 51) c (? . 309)))) c (c (? . 587)) c (c (6 italic (? . 587))) q tech) ((c counter c (c (? . 9) c (? . 588) ? . 15)) . 343) ((c index-entry c (? . 239)) c (c (? . 589)) c (c (6 #f (? . 590))) c (? . 3)) ((c index-entry c (c part c (c (? . 62) c (? . 1641)))) c (c (? . 591)) c (c (6 #f (? . 1642))) c (? . 3)) ((? . 592) v! #f (? . 592) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 947) ? . 15)) . 190) ((? . 593) v! #f (? . 593) #f (? . 28) #f) ((? . 594) v! (? . 1711) (? . 594) (c #f c #f c (? . 167)) (? . 187) #f) ((c index-entry c (? . 919)) c (c (? . 595)) c (c (6 #f (? . 920))) c (? . 3)) ((c counter c (c (? . 8) c (? . 1743) c (? . 10))) . 56) ((c index-entry c (c tech c (c (? . 57) c (? . 1275)))) c (c (? . 596)) c (c (6 italic (? . 596))) q tech) ((? . 597) v! #f (? . 597) #f (? . 17) #f) ((? . 598) v! #f (? . 598) #f (? . 28) #f) ((c index-entry c (? . 366)) c (c (? . 599)) c (c (6 #f (? . 600))) c (? . 3)) ((c index-entry c (? . 1197)) c (c (? . 601)) c (c (6 #f (? . 1198))) c (? . 3)) ((c index-entry c (? . 1966)) c (c (? . 602)) c (c (6 italic (? . 602))) q tech) ((c index-entry c (? . 1916)) c (c (? . 603)) c (c (6 #f (? . 1917))) c (? . 3)) ((c counter c (c (? . 9) c (? . 604) ? . 15)) . 212) ((? . 606) v! #f (? . 606) #f (? . 26) #f) ((c index-entry c (? . 466)) c (c (? . 607)) c (c (6 #f (? . 608))) c (? . 3)) ((c index-entry c (? . 1705)) c (c (? . 609)) c (c (6 #f (? . 1706))) c (? . 3)) ((? . 610) v! #f (? . 610) #f (? . 26) #f) ((? . 611) v! #f (? . 611) #f (? . 73) #f) ((? . 613) v! #f (? . 613) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 1002) c (? . 10))) . 96) ((? . 614) v! #f (? . 614) #f (? . 6) #f) ((? . 615) v! #f (? . 615) #f (? . 22) #f) ((? . 616) v! #f (? . 616) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1508) ? . 15)) . 426) ((? . 617) v! (? . 1612) (? . 617) (c 1 ? . 230) (? . 17) #f) ((c counter ? . 619) v! #f (c counter c (? . 62) ? . 619) #f (? . 17) #f) ((? . 620) v! #f (? . 620) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 900) ? . 15)) . 140) ((c counter c (c (? . 8) c (? . 621) c (? . 10))) . 108) ((c counter c (c (? . 9) c (? . 622) ? . 15)) . 294) ((c index-entry c (? . 408)) c (c (? . 623)) c (c (6 italic (? . 623))) q tech) ((? . 624) v! #f (? . 624) #f (? . 28) #f) ((c index-entry c (? . 1216)) c (c (? . 625)) c (c (6 #f (? . 1217))) c (? . 3)) ((c counter c (c (? . 8) c (? . 753) c (? . 10))) . 30) ((? . 626) v! #f (? . 626) #f (? . 26) #f) ((? . 627) v! #f (? . 627) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1338) ? . 15)) . 70) ((? . 628) v! #f (? . 628) #f (? . 6) #f) ((? . 630) v! #f (? . 630) #f (? . 6) #f) ((c index-entry c (? . 1523)) c (c (? . 631)) c (c (6 #f (? . 1524))) c (? . 3)) ((? . 632) v! #f (? . 632) #f (? . 237) #f) ((c index-entry c (? . 135)) c (c (? . 633)) c (c (6 italic (? . 633))) q tech) ((c counter ? . 635) v! #f (c counter c (? . 404) ? . 635) #f (? . 6) #f) ((? . 636) v! #f (? . 636) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 637) ? . 15)) . 228) ((c counter c (c (? . 9) c (? . 2024) ? . 15)) . 63) ((c tech c (c (? . 114) c (? . 638))) v! #f (c tech c (? . 114) c (? . 638)) #f (? . 73) #f) ((c index-entry c (? . 1407)) c (c (? . 639)) c (c (6 #f (? . 1408))) c (? . 3)) ((c counter c (c (? . 8) c (? . 640) c (? . 10))) . 94) ((c counter c (c (? . 9) c (? . 940) ? . 15)) . 401) ((? . 642) v! #f (? . 642) #f (? . 6) #f) ((c index-entry c (? . 794)) c (c (? . 643)) c (c (6 italic (? . 643))) q tech) ((c counter ? . 644) v! #f (c counter c (? . 62) ? . 644) #f (? . 17) #f) ((? . 645) v! #f (? . 645) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 646) ? . 15)) . 369) ((? . 647) v! #f (? . 647) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 648) ? . 15)) . 44) ((? . 649) v! (? . 1303) (? . 649) (c #f c #f c (? . 167)) (? . 650) #f) ((c counter ? . 652) v! #f (c counter c (? . 114) ? . 652) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1316) ? . 15)) . 269) ((? . 653) v! #f (? . 653) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 654) ? . 15)) . 412) ((? . 655) v! #f (? . 655) #f (? . 17) #f) ((? . 656) v! #f (? . 656) #f (? . 6) #f) ((c counter ? . 657) v! #f (c counter c (? . 51) ? . 657) #f (? . 26) #f) ((? . 658) v! (? . 1334) (? . 658) (? . 800) (? . 28) #f) ((? . 659) v! #f (? . 659) #f (? . 73) #f) ((c index-entry c (? . 1211)) c (c (? . 660)) c (c (6 #f (? . 1212))) c (? . 3)) ((c index-entry c (c tech c (c (? . 661) c (? . 662)))) c (c (? . 502)) c (c (6 italic (? . 502))) q tech) ((c counter ? . 663) v! #f (c counter c (? . 57) ? . 663) #f (? . 17) #f) ((? . 664) v! (? . 665) (? . 664) (c 5 ? . 430) (? . 28) #f) ((c counter c (c (? . 9) c (? . 1344) ? . 15)) . 225) ((c counter c (c (? . 8) c (? . 792) c (? . 10))) . 13) ((c counter c (c (? . 9) c (? . 666) ? . 15)) . 379) ((c index-entry c (? . 2052)) c (c (? . 667)) c (c (6 #f (? . 2053))) c (? . 3)) ((? . 668) v! (? . 1471) (? . 668) (? . 1447) (? . 6) #f) ((c counter c (c (? . 9) c (? . 669) ? . 15)) . 36) ((c index-entry c (? . 2073)) c (c (? . 670)) c (c (6 #f (? . 2074))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1258) ? . 15)) . 300) ((? . 672) v! #f (? . 672) #f (? . 73) #f) ((c index-entry c (? . 93)) c (c (? . 673)) c (c (6 #f (? . 674))) c (? . 3)) ((? . 675) v! (? . 676) (? . 675) (c 6 ? . 677) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1741) ? . 15)) . 135) ((? . 678) v! #f (? . 678) #f (? . 514) #f) ((c counter c (c (? . 9) c (? . 679) ? . 15)) . 359) ((c counter c (c (? . 9) c (? . 680) ? . 15)) . 387) ((? . 682) v! #f (? . 682) #f (? . 6) #f) ((? . 683) v! #f (? . 683) #f (? . 17) #f) ((c part c (c (? . 114) c (? . 684))) v! (? . 1812) (c part c (? . 114) c (? . 684)) (c 3 ? . 368) (? . 73) #f) ((c counter ? . 685) v! #f (c counter c (? . 62) ? . 685) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 686) ? . 15)) . 168) ((c counter c (c (? . 9) c (? . 1327) ? . 15)) . 5) ((c counter c (c (? . 9) c (? . 687) ? . 15)) . 141) ((? . 689) v! #f (? . 689) #f (? . 28) #f) ((? . 690) v! #f (? . 690) #f (? . 73) #f) ((? . 691) v! (? . 1274) (? . 691) (c #f c #f c (? . 167)) (? . 237) #f) ((c index-entry c (? . 1395)) c (c (? . 692)) c (c (6 #f (? . 1396))) c (? . 3)) ((? . 693) v! (? . 694) (? . 693) (c 2 ? . 695) (? . 28) #f) ((? . 696) v! #f (? . 696) #f (? . 17) #f) ((? . 697) v! #f (? . 697) #f (? . 22) #f) ((? . 698) v! #f (? . 698) #f (? . 26) #f) ((? . 699) v! #f (? . 699) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 954) ? . 15)) . 21) ((c index-entry c (? . 1658)) c (c (? . 700)) c (c (6 italic (? . 700))) q tech) ((c counter c (c (? . 9) c (? . 744) ? . 15)) . 97) ((c counter c (c (? . 8) c (? . 765) c (? . 10))) . 41) ((? . 702) v! #f (? . 702) #f (? . 6) #f) ((? . 703) v! #f (? . 703) #f (? . 6) #f) ((? . 704) v! #f (? . 704) #f (? . 6) #f) ((? . 706) v! #f (? . 706) #f (? . 26) #f) ((? . 707) v! #f (? . 707) #f (? . 26) #f) ((c index-entry c (? . 121)) c (c (? . 708)) c (c (6 italic (? . 708))) q tech) ((c index-entry c (? . 1406)) c (c (? . 709)) c (c (6 italic (? . 709))) q tech) ((? . 710) v! (? . 2056) (? . 710) (? . 424) (? . 28) #f) ((? . 711) v! #f (? . 711) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 932) ? . 15)) . 71) ((c part c (c (? . 151) c (? . 712))) v! (? . 713) (c part c (? . 151) c (? . 712)) (c 6 ? . 230) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1817) ? . 15)) . 155) ((? . 714) v! (? . 715) (? . 714) (? . 716) (? . 26) #f) ((c index-entry c (? . 870)) c (q "What Is '(), What Is cons") c (c (6 #f (? . 871))) c (? . 3)) ((? . 719) v! #f (? . 719) #f (? . 17) #f) ((? . 720) v! #f (? . 720) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 2015) ? . 15)) . 115) ((c counter c (c (? . 9) c (? . 721) ? . 15)) . 162) ((? . 722) v! #f (? . 722) #f (? . 22) #f) ((c index-entry c (? . 375)) c (c (? . 723)) c (c (6 #f (? . 724))) c (? . 3)) ((c counter c (c (? . 9) c (? . 725) ? . 15)) . 143) ((? . 726) v! (? . 895) (? . 726) (c 5 ? . 337) (? . 6) #f) ((? . 727) v! (? . 728) (? . 727) (c 14 ? . 160) (? . 6) #f) ((c counter c (c (? . 9) c (? . 729) ? . 15)) . 191) ((c counter c (c (? . 9) c (? . 730) ? . 15)) . 123) ((? . 731) v! (? . 732) (? . 731) (c 7 ? . 70) (? . 17) #f) ((c counter c (c (? . 8) c (? . 1822) c (? . 10))) . 93) ((? . 733) v! #f (? . 733) #f (? . 26) #f) ((? . 734) v! #f (? . 734) #f (? . 22) #f) ((? . 735) v! #f (? . 735) #f (? . 6) #f) ((? . 737) v! #f (? . 737) #f (? . 6) #f) ((? . 738) v! #f (? . 738) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 739) ? . 15)) . 77) ((? . 740) v! (? . 1025) (? . 740) (? . 428) (? . 22) #f) ((c counter c (c (? . 8) c (? . 741) c (? . 10))) . 89) ((? . 742) v! #f (? . 742) #f (? . 6) #f) ((? . 743) v! #f (? . 743) #f (? . 22) #f) ((? . 745) v! #f (? . 745) #f (? . 17) #f) ((? . 746) v! #f (? . 746) #f (? . 28) #f) ((c index-entry c (? . 930)) c (c (? . 747)) c (c (6 #f (? . 931))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1585) ? . 15)) . 315) ((? . 749) v! #f (? . 749) #f (? . 17) #f) ((c index-entry c (c tech c (c (? . 404) c (? . 1898)))) c (c (? . 750)) c (c (6 italic (? . 750))) q tech) ((c counter c (c (? . 9) c (? . 751) ? . 15)) . 199) ((? . 752) v! #f (? . 752) #f (? . 514) #f) ((? . 754) v! #f (? . 754) #f (? . 6) #f) ((c index-entry c (? . 1129)) c (c (? . 755)) c (c (6 #f (? . 1130))) c (? . 3)) ((c counter c (c (? . 9) c (? . 756) ? . 15)) . 153) ((c index-entry c (? . 1595)) c (c (? . 757)) c (c (6 italic (? . 757))) q tech) ((? . 758) v! #f (? . 758) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1724) ? . 15)) . 39) ((c counter c (c (? . 9) c (? . 759) ? . 15)) . 67) ((c counter c (c (? . 9) c (? . 2019) ? . 15)) . 346) ((c counter c (c (? . 8) c (? . 760) c (? . 10))) . 31) ((? . 761) v! () (? . 761) (c 40 ? . 762) (? . 650) #f) ((c counter c (c (? . 9) c (? . 763) ? . 15)) . 128) ((? . 764) v! #f (? . 764) #f (? . 17) #f) ((? . 766) v! #f (? . 766) #f (? . 6) #f) ((? . 767) v! #f (? . 767) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 768) ? . 15)) . 386) ((c part c (c (? . 279) c (? . 769))) v! (? . 770) (c part c (? . 279) c (? . 769)) (c 4 ? . 428) (? . 22) #f) ((c counter c (c (? . 9) c (? . 1245) ? . 15)) . 53) ((c counter c (c (? . 9) c (? . 771) ? . 15)) . 316) ((c index-entry c (? . 120)) c (c (? . 772)) c (c (6 italic (? . 772))) q tech) ((? . 773) v! #f (? . 773) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 774) c (? . 10))) . 103) ((? . 776) v! #f (? . 776) #f (? . 26) #f) ((c index-entry c (c tech c (c (? . 114) c (? . 1113)))) c (c (? . 777)) c (c (6 italic (? . 777))) q tech) ((? . 778) v! #f (? . 778) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 1876) c (? . 10))) . 57) ((? . 780) v! #f (? . 780) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 1435) ? . 15)) . 356) ((c index-entry c (c tech c (c (? . 62) c (? . 1253)))) c (c (? . 781)) c (c (6 italic (? . 781))) q tech) ((c index-entry c (c tech c (c (? . 62) c (? . 1192)))) c (c (? . 782)) c (c (6 italic (? . 782))) q tech) ((? . 784) v! #f (? . 784) #f (? . 6) #f) ((c index-entry c (? . 960)) c (c (? . 785)) c (c (6 #f (? . 961))) c (? . 3)) ((c counter c (c (? . 9) c (? . 786) ? . 15)) . 197) ((? . 787) v! #f (? . 787) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1361) ? . 15)) . 99) ((c index-entry c (? . 188)) c (c (? . 788)) c (c (6 italic (? . 788))) q tech) ((? . 789) v! #f (? . 789) #f (? . 6) #f) ((c index-entry c (? . 880)) c (q "The list Function") c (c (6 #f (? . 881))) c (? . 3)) ((c counter ? . 793) v! #f (c counter c (? . 661) ? . 793) #f (? . 17) #f) ((? . 794) v! #f (? . 794) #f (? . 28) #f) ((? . 795) v! (? . 1351) (? . 795) (c 3 ? . 819) (? . 26) #f) ((c counter c (c (? . 9) c (? . 1501) ? . 15)) . 45) ((c index-entry c (? . 1028)) c (c (? . 796)) c (c (6 italic (? . 796))) q tech) ((c counter c (c (? . 9) c (? . 883) ? . 15)) . 303) ((c counter c (c (? . 9) c (? . 1033) ? . 15)) . 352) ((? . 797) v! #f (? . 797) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 798) ? . 15)) . 187) ((? . 799) v! (? . 1957) (? . 799) (c 4 ? . 800) (? . 28) #f) ((c index-entry c (? . 351)) c (c (? . 801)) c (c (6 #f (? . 802))) c (? . 3)) ((c index-entry c (? . 1200)) c (c (? . 803)) c (c (6 italic (? . 803))) q tech) ((c counter c (c (? . 9) c (? . 804) ? . 15)) . 265) ((? . 806) v! #f (? . 806) #f (? . 6) #f) ((c index-entry c (? . 1433)) c (c (? . 807)) c (c (6 #f (? . 1434))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1807) ? . 15)) . 43) ((? . 808) v! #f (? . 808) #f (? . 26) #f) ((? . 809) v! #f (? . 809) #f (? . 187) #f) ((c counter c (c (? . 9) c (? . 1609) ? . 15)) . 284) ((c index-entry c (? . 1629)) c (c (? . 810)) c (c (6 #f (? . 1630))) c (? . 3)) ((? . 811) v! #f (? . 811) #f (? . 28) #f) ((? . 813) v! #f (? . 813) #f (? . 17) #f) ((? . 815) v! #f (? . 815) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 816) c (? . 10))) . 65) ((? . 817) v! (? . 818) (? . 817) (c 2 ? . 819) (? . 26) #f) ((c counter c (c (? . 9) c (? . 1320) ? . 15)) . 105) ((c counter c (c (? . 9) c (? . 1177) ? . 15)) . 403) ((? . 820) v! (? . 821) (? . 820) (c 1 ? . 368) (? . 73) #f) ((c index-entry c (? . 19)) c (c (? . 822)) c (c (6 italic (? . 822))) q tech) ((c counter c (c (? . 9) c (? . 2010) ? . 15)) . 237) ((c index-entry c (? . 231)) c (c (? . 823)) c (c (6 #f (? . 824))) c (? . 3)) ((c counter ? . 825) v! #f (c counter c (? . 114) ? . 825) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1537) c (? . 10))) . 66) ((c index-entry c (? . 1430)) c (c (? . 826)) c (c (6 #f (? . 1431))) c (? . 3)) ((c index-entry c (? . 546)) c (c (? . 827)) c (c (6 italic (? . 827))) q tech) ((c index-entry c (? . 1128)) c (c (? . 828)) c (c (6 italic (? . 828))) q tech) ((c counter c (c (? . 9) c (? . 829) ? . 15)) . 51) ((? . 830) v! (? . 831) (? . 830) (c 3 ? . 695) (? . 28) #f) ((? . 833) v! #f (? . 833) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 834) c (? . 10))) . 75) ((? . 836) v! #f (? . 836) #f (? . 73) #f) ((c index-entry c (c tech c (c (? . 151) c (? . 152)))) c (c (? . 837)) c (c (6 italic (? . 837))) q tech) ((c index-entry c (? . 1098)) c (c (? . 838)) c (c (6 #f (? . 1099))) c (? . 3)) ((? . 839) v! #f (? . 839) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1294) ? . 15)) . 156) ((c counter c (c (? . 9) c (? . 840) ? . 15)) . 375) ((c counter ? . 841) v! #f (c counter c (? . 279) ? . 841) #f (? . 22) #f) ((? . 843) v! #f (? . 843) #f (? . 6) #f) ((? . 844) v! #f (? . 844) #f (? . 17) #f) ((c index-entry c (? . 1972)) c (c (? . 845)) c (c (6 italic (? . 845))) q tech) ((c counter c (c (? . 9) c (? . 1143) ? . 15)) . 66) ((c counter c (c (? . 8) c (? . 1722) c (? . 10))) . 32) ((c index-entry c (? . 413)) c (c (? . 846)) c (c (6 #f (? . 847))) c (? . 3)) ((? . 849) v! #f (? . 849) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 850) ? . 15)) . 254) ((c tech c (c (? . 57) c (? . 851))) v! #f (c tech c (? . 57) c (? . 851)) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1118) ? . 15)) . 283) ((c tech c (c (? . 661) c (? . 662))) v! #f (c tech c (? . 661) c (? . 662)) #f (? . 17) #f) ((c tech c (c (? . 114) c (? . 852))) v! #f (c tech c (? . 114) c (? . 852)) #f (? . 73) #f) ((? . 853) v! #f (? . 853) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 2001) ? . 15)) . 134) ((? . 854) v! #f (? . 854) #f (? . 28) #f) ((c tech c (c (? . 114) c (? . 855))) v! #f (c tech c (? . 114) c (? . 855)) #f (? . 73) #f) ((? . 856) v! #f (? . 856) #f (? . 17) #f) ((? . 858) v! #f (? . 858) #f (? . 28) #f) ((? . 859) v! (? . 937) (? . 859) (? . 860) (? . 187) #t) ((? . 862) v! #f (? . 862) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 885) ? . 15)) . 397) ((? . 863) v! #f (? . 863) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 958) c (? . 10))) . 29) ((? . 865) v! #f (? . 865) #f (? . 6) #f) ((? . 866) v! #f (? . 866) #f (? . 6) #f) ((? . 868) v! #f (? . 868) #f (? . 28) #f) ((c index-entry c (? . 1202)) c (c (? . 869)) c (c (6 italic (? . 869))) q tech) ((c counter c (c (? . 9) c (? . 1499) ? . 15)) . 429) ((c counter c (c (? . 9) c (? . 1574) ? . 15)) . 275) ((? . 870) v! (? . 871) (? . 870) (c 2 ? . 872) (? . 6) #f) ((? . 873) v! (? . 2047) (? . 873) (c 27 ? . 277) (? . 28) #f) ((? . 874) v! (? . 875) (? . 874) (? . 1187) (? . 17) #f) ((? . 877) v! #f (? . 877) #f (? . 73) #f) ((c tech c (c (? . 57) c (? . 878))) v! #f (c tech c (? . 57) c (? . 878)) #f (? . 17) #f) ((c index-entry c (? . 1832)) c (c (? . 879)) c (c (6 italic (? . 879))) q tech) ((? . 880) v! (? . 881) (? . 880) (c 1 ? . 882) (? . 6) #f) ((? . 884) v! #f (? . 884) #f (? . 28) #f) ((? . 886) v! #f (? . 886) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 887) ? . 15)) . 215) ((? . 889) v! #f (? . 889) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 1102) ? . 15)) . 395) ((? . 891) v! #f (? . 891) #f (? . 187) #f) ((c counter c (c (? . 9) c (? . 892) ? . 15)) . 196) ((c counter c (c (? . 9) c (? . 893) ? . 15)) . 272) ((c index-entry c (? . 726)) c (c (? . 894)) c (c (6 #f (? . 895))) c (? . 3)) ((c tech c (c (? . 661) c (? . 896))) v! #f (c tech c (? . 661) c (? . 896)) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 897) c (? . 10))) . 78) ((c index-entry c (c tech c (c (? . 114) c (? . 898)))) c (c (? . 899)) c (c (6 italic (? . 899))) q tech) ((? . 901) v! #f (? . 901) #f (? . 6) #f) ((? . 903) v! #f (? . 903) #f (? . 22) #f) ((? . 904) v! (? . 905) (? . 904) (c 3 ? . 906) (? . 73) #f) ((? . 908) v! #f (? . 908) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1109) c (? . 10))) . 74) ((c index-entry c (? . 54)) c (c (? . 909)) c (c (6 italic (? . 909))) q tech) ((c index-entry c (? . 1787)) c (c (? . 136)) c (c (6 #f (? . 1788))) c (? . 3)) ((c index-entry c (? . 480)) c (c (? . 910)) c (c (6 #f (? . 911))) c (? . 3)) ((? . 913) v! #f (? . 913) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 914) ? . 15)) . 107) ((c index-entry c (? . 1277)) c (c (? . 915)) c (c (6 italic (? . 915))) q tech) ((? . 917) v! #f (? . 917) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 918) c (? . 10))) . 16) ((? . 919) v! (? . 920) (? . 919) (c 1 ? . 430) (? . 28) #f) ((? . 921) v! #f (? . 921) #f (? . 28) #f) ((? . 922) v! #f (? . 922) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 923) ? . 15)) . 391) ((? . 924) v! #f (? . 924) #f (? . 73) #f) ((? . 925) v! #f (? . 925) #f (? . 26) #f) ((? . 926) v! #f (? . 926) #f (? . 17) #f) ((? . 928) v! #f (? . 928) #f (? . 28) #f) ((c tech c (c (? . 51) c (? . 814))) v! #f (c tech c (? . 51) c (? . 814)) #f (? . 26) #f) ((? . 929) v! #f (? . 929) #f (? . 17) #f) ((? . 930) v! (? . 931) (? . 930) (? . 1052) (? . 73) #f) ((? . 933) v! #f (? . 933) #f (? . 17) #f) ((c index-entry c (c part c (c (? . 661) c (? . 1047)))) c (c (? . 934)) c (c (6 #f (? . 1048))) c (? . 3)) ((c counter c (c (? . 9) c (? . 935) ? . 15)) . 400) ((c counter c (c (? . 9) c (? . 1681) ? . 15)) . 16) ((? . 936) v! #f (? . 936) #f (? . 6) #f) ((c index-entry c (? . 859)) c (q "Intermezzo: BSL") c (c (6 #f (? . 937))) c (? . 3)) ((c counter c (c (? . 9) c (? . 938) ? . 15)) . 376) ((c counter c (c (? . 9) c (? . 1263) ? . 15)) . 277) ((c counter c (c (? . 9) c (? . 939) ? . 15)) . 319) ((? . 941) v! #f (? . 941) #f (? . 22) #f) ((c index-entry c (? . 734)) c (c (? . 942)) c (c (6 italic (? . 942))) q tech) ((c counter c (c (? . 9) c (? . 943) ? . 15)) . 221) ((c counter c (c (? . 9) c (? . 944) ? . 15)) . 174) ((? . 945) v! (? . 946) (? . 945) (? . 906) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1071) ? . 15)) . 325) ((? . 948) v! #f (? . 948) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 949) ? . 15)) . 210) ((c index-entry c (? . 1153)) c (c (? . 950)) c (c (6 #f (? . 1154))) c (? . 3)) ((c index-entry c (? . 567)) c (c (? . 951)) c (c (6 #f (? . 952))) c (? . 3)) ((? . 953) v! #f (? . 953) #f (? . 28) #f) ((? . 955) v! #f (? . 955) #f (? . 17) #f) ((? . 956) v! #f (? . 956) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 957) ? . 15)) . 177) ((? . 959) v! #f (? . 959) #f (? . 187) #f) ((? . 960) v! (? . 961) (? . 960) (c #f c #f c (? . 167)) (? . 650) #f) ((c index-entry c (? . 1572)) c (c (? . 962)) c (c (6 #f (? . 1573))) c (? . 3)) ((? . 963) v! #f (? . 963) #f (? . 22) #f) ((? . 965) v! #f (? . 965) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1591) ? . 15)) . 109) ((c counter c (c (? . 9) c (? . 966) ? . 15)) . 248) ((c counter c (c (? . 9) c (? . 967) ? . 15)) . 82) ((c index-entry c (? . 1897)) c (c (? . 968)) c (c (6 italic (? . 968))) q tech) ((c index-entry c (? . 1040)) c (c (? . 969)) c (c (6 #f (? . 1041))) c (? . 3)) ((? . 970) v! (? . 971) (? . 970) (c 1 ? . 800) (? . 28) #f) ((? . 972) v! (? . 973) (? . 972) (c 3 ? . 306) (? . 26) #f) ((? . 974) v! #f (? . 974) #f (? . 17) #f) ((? . 975) v! #f (? . 975) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 1671) c (? . 10))) . 43) ((c index-entry c (c tech c (c (? . 114) c (? . 181)))) c (c (? . 976)) c (c (6 italic (? . 976))) q tech) ((c counter c (c (? . 9) c (? . 977) ? . 15)) . 323) ((? . 979) v! #f (? . 979) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 980) ? . 15)) . 382) ((c index-entry c (? . 1448)) c (c (? . 981)) c (c (6 #f (? . 1449))) c (? . 3)) ((c counter c (c (? . 9) c (? . 982) ? . 15)) . 383) ((c counter c (c (? . 9) c (? . 983) ? . 15)) . 364) ((? . 984) v! #f (? . 984) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1442) c (? . 10))) . 33) ((c index-entry c (? . 308)) c (c (? . 985)) c (c (6 italic (? . 985))) q tech) ((? . 987) v! #f (? . 987) #f (? . 26) #f) ((? . 988) v! #f (? . 988) #f (? . 28) #f) ((? . 989) v! (? . 990) (? . 989) (c 1 ? . 456) (? . 17) #f) ((c counter c (c (? . 9) c (? . 991) ? . 15)) . 394) ((c counter c (c (? . 9) c (? . 992) ? . 15)) . 292) ((c index-entry c (? . 328)) c (c (? . 993)) c (c (6 #f (? . 994))) c (? . 3)) ((c counter ? . 995) v! #f (c counter c (? . 62) ? . 995) #f (? . 17) #f) ((c index-entry c (? . 1336)) c (c (? . 996)) c (c (6 italic (? . 996))) q tech) ((c index-entry c (? . 1069)) c (c (? . 997)) c (c (6 italic (? . 997))) q tech) ((? . 998) v! () (? . 998) (c 35 ? . 1223) (? . 1224) #f) ((? . 999) v! #f (? . 999) #f (? . 28) #f) ((? . 1000) v! #f (? . 1000) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1001) ? . 15)) . 188) ((c counter ? . 1003) v! #f (c counter c (? . 51) ? . 1003) #f (? . 26) #f) ((c index-entry c (? . 467)) c (c (? . 1004)) c (c (6 #f (? . 1005))) c (? . 3)) ((c index-entry c (? . 1439)) c (c (? . 1006)) c (c (6 italic (? . 1006))) q tech) ((c counter c (c (? . 9) c (? . 1007) ? . 15)) . 9) ((? . 1008) v! (? . 1009) (? . 1008) (c 1 ? . 677) (? . 73) #f) ((c index-entry c (? . 147)) c (c (? . 1010)) c (c (6 italic (? . 1010))) q tech) ((c counter ? . 1012) v! #f (c counter c (? . 51) ? . 1012) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 1013) c (? . 10))) . 52) ((c tech c (c (? . 114) c (? . 1014))) v! #f (c tech c (? . 114) c (? . 1014)) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1372) ? . 15)) . 160) ((c counter c (c (? . 9) c (? . 1015) ? . 15)) . 355) ((? . 1016) v! #f (? . 1016) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1480) ? . 15)) . 267) ((c counter c (c (? . 9) c (? . 1017) ? . 15)) . 327) ((? . 1018) v! #f (? . 1018) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1019) ? . 15)) . 342) ((c index-entry c (? . 214)) c (c (? . 587)) c (c (6 italic (? . 587))) q tech) ((? . 1020) v! #f (? . 1020) #f (? . 6) #f) ((c index-entry c (? . 1843)) c (c (? . 1021)) c (c (6 #f (? . 1844))) c (? . 3)) ((c index-entry c (? . 1804)) c (c (? . 1022)) c (c (6 italic (? . 1022))) q tech) ((c index-entry c (? . 266)) c (c (? . 1023)) c (c (6 italic (? . 1023))) q tech) ((c index-entry c (? . 740)) c (c (? . 1024)) c (c (6 #f (? . 1025))) c (? . 3)) ((? . 1026) v! #f (? . 1026) #f (? . 17) #f) ((c index-entry c (? . 363)) c (c (? . 1027)) c (c (6 italic (? . 1027))) q tech) ((? . 1028) v! #f (? . 1028) #f (? . 17) #f) ((? . 1029) v! #f (? . 1029) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1827) c (? . 10))) . 28) ((? . 1030) v! #f (? . 1030) #f (? . 73) #f) ((c index-entry c (? . 1756)) c (c (? . 1031)) c (c (6 #f (? . 1757))) c (? . 3)) ((c index-entry c (? . 1554)) c (c (? . 1032)) c (c (6 #f (? . 1555))) c (? . 3)) ((? . 1034) v! #f (? . 1034) #f (? . 26) #f) ((c index-entry c (? . 165)) c (c (? . 1035)) c (c (6 #f (? . 1036))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1037) ? . 15)) . 226) ((c counter c (c (? . 8) c (? . 1038) c (? . 10))) . 14) ((c counter c (c (? . 9) c (? . 1250) ? . 15)) . 194) ((c index-entry c (? . 1820)) c (c (? . 1039)) c (c (6 #f (? . 1821))) c (? . 3)) ((? . 1040) v! (? . 1041) (? . 1040) (c #f c #f c (? . 167)) (? . 187) #f) ((c counter c (c (? . 9) c (? . 1867) ? . 15)) . 328) ((c counter c (c (? . 9) c (? . 1042) ? . 15)) . 25) ((? . 1043) v! #f (? . 1043) #f (? . 28) #f) ((? . 1045) v! #f (? . 1045) #f (? . 17) #f) ((c index-entry c (? . 1859)) c (c (? . 1046)) c (c (6 italic (? . 1046))) q tech) ((c part c (c (? . 661) c (? . 1047))) v! (? . 1048) (c part c (? . 661) c (? . 1047)) (c 5 ? . 456) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1049) ? . 15)) . 287) ((c counter c (c (? . 9) c (? . 1300) ? . 15)) . 20) ((? . 1050) v! (? . 1051) (? . 1050) (c 3 ? . 1052) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1053) ? . 15)) . 35) ((? . 1055) v! #f (? . 1055) #f (? . 22) #f) ((? . 1056) v! #f (? . 1056) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1386) c (? . 10))) . 88) ((c counter c (c (? . 9) c (? . 1057) ? . 15)) . 256) ((c index-entry c (c tech c (c (? . 114) c (? . 1516)))) c (c (? . 1058)) c (c (6 italic (? . 1058))) q tech) ((c index-entry c (? . 1330)) c (c (? . 1059)) c (c (6 #f (? . 1331))) c (? . 3)) ((? . 1060) v! (? . 1306) (? . 1060) (c 1 ? . 1061) (? . 17) #f) ((c index-entry c (? . 442)) c (c (? . 1062)) c (c (6 #f (? . 1063))) c (? . 3)) ((? . 1065) v! #f (? . 1065) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1066) ? . 15)) . 151) ((c counter c (c (? . 9) c (? . 1067) ? . 15)) . 136) ((c counter c (c (? . 9) c (? . 1068) ? . 15)) . 80) ((? . 1069) v! #f (? . 1069) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1070) c (? . 10))) . 49) ((? . 1072) v! #f (? . 1072) #f (? . 28) #f) ((? . 1073) v! #f (? . 1073) #f (? . 17) #f) ((? . 1075) v! #f (? . 1075) #f (? . 28) #f) ((? . 1076) v! #f (? . 1076) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1077) ? . 15)) . 351) ((? . 1079) v! #f (? . 1079) #f (? . 6) #f) ((c index-entry c (? . 260)) c (c (? . 1080)) c (c (6 #f (? . 1081))) c (? . 3)) ((c index-entry c (? . 482)) c (c (? . 1082)) c (c (6 italic (? . 1082))) q tech) ((? . 1083) v! #f (? . 1083) #f (? . 17) #f) ((c index-entry c (? . 1873)) c (c (? . 1084)) c (c (6 #f (? . 1874))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1085) ? . 15)) . 345) ((c counter c (c (? . 9) c (? . 1086) ? . 15)) . 385) ((c counter c (c (? . 8) c (? . 1087) c (? . 10))) . 42) ((c counter c (c (? . 9) c (? . 1731) ? . 15)) . 299) ((c index-entry c (? . 1241)) c (c (? . 1088)) c (c (6 #f (? . 1242))) c (? . 3)) ((c index-entry c (? . 1728)) c (c (? . 1089)) c (c (6 #f (? . 1729))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1284) ? . 15)) . 163) ((? . 1090) v! #f (? . 1090) #f (? . 6) #f) ((c index-entry c (? . 455)) c (c (? . 1091)) c (c (6 #f (? . 1092))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1798) ? . 15)) . 83) ((c index-entry c (? . 439)) c (c (? . 1093)) c (c (6 italic (? . 1093))) q tech) ((? . 1094) v! #f (? . 1094) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1095) ? . 15)) . 81) ((? . 1096) v! #f (? . 1096) #f (? . 26) #f) ((c index-entry c (? . 1413)) c (c (? . 1097)) c (c (6 italic (? . 1097))) q tech) ((? . 1098) v! (? . 1099) (? . 1098) (? . 92) (? . 26) #t) ((c counter ? . 1101) v! #f (c counter c (? . 57) ? . 1101) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1134) ? . 15)) . 76) ((? . 1103) v! #f (? . 1103) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1593) ? . 15)) . 112) ((c counter c (c (? . 9) c (? . 1149) ? . 15)) . 148) ((c counter c (c (? . 8) c (? . 1104) c (? . 10))) . 54) ((? . 1105) v! #f (? . 1105) #f (? . 6) #f) ((? . 1107) v! #f (? . 1107) #f (? . 17) #f) ((? . 1108) v! #f (? . 1108) #f (? . 73) #f) ((? . 1110) v! #f (? . 1110) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1111) ? . 15)) . 146) ((? . 1112) v! (? . 1779) (? . 1112) (c #f c #f c (? . 167)) (? . 237) #f) ((? . 1114) v! #f (? . 1114) #f (? . 73) #f) ((? . 1115) v! #f (? . 1115) #f (? . 28) #f) ((? . 1116) v! #f (? . 1116) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1117) ? . 15)) . 285) ((? . 1119) v! #f (? . 1119) #f (? . 28) #f) ((c index-entry c (? . 434)) c (c (? . 1120)) c (c (6 #f (? . 1121))) c (? . 3)) ((? . 1122) v! (? . 1123) (? . 1122) (c 6 ? . 800) (? . 28) #f) ((c tech c (c (? . 51) c (? . 1124))) v! #f (c tech c (? . 51) c (? . 1124)) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1173) ? . 15)) . 90) ((c counter c (c (? . 9) c (? . 1125) ? . 15)) . 183) ((c index-entry c (? . 95)) c (c (? . 1126)) c (c (6 italic (? . 1126))) q tech) ((c index-entry c (? . 254)) c (c (? . 1127)) c (c (6 italic (? . 1127))) q tech) ((? . 1128) v! #f (? . 1128) #f (? . 6) #f) ((? . 1129) v! (? . 1130) (? . 1129) (c 4 ? . 230) (? . 17) #f) ((c tech c (c (? . 57) c (? . 1131))) v! #f (c tech c (? . 57) c (? . 1131)) #f (? . 17) #f) ((? . 1132) v! (? . 1133) (? . 1132) (c 2 ? . 230) (? . 17) #f) ((? . 1135) v! #f (? . 1135) #f (? . 17) #f) ((? . 1137) v! (? . 1955) (? . 1137) (c #f c #f c (? . 167)) (? . 514) #f) ((c counter c (c (? . 9) c (? . 1247) ? . 15)) . 149) ((? . 1139) v! #f (? . 1139) #f (? . 28) #f) ((? . 1141) v! #f (? . 1141) #f (? . 17) #f) ((? . 1142) v! #f (? . 1142) #f (? . 6) #f) ((c counter ? . 1144) v! #f (c counter c (? . 57) ? . 1144) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1145) ? . 15)) . 373) ((c index-entry c (? . 655)) c (c (? . 1146)) c (c (6 italic (? . 1146))) q tech) ((c index-entry c (? . 1569)) c (c (? . 1147)) c (c (6 italic (? . 1147))) q tech) ((c counter c (c (? . 9) c (? . 1148) ? . 15)) . 243) ((? . 1150) v! #f (? . 1150) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 1151) c (? . 10))) . 64) ((c counter c (c (? . 9) c (? . 1152) ? . 15)) . 310) ((? . 1153) v! (? . 1154) (? . 1153) (c 4 ? . 677) (? . 73) #f) ((? . 1156) v! #f (? . 1156) #f (? . 22) #f) ((? . 1157) v! #f (? . 1157) #f (? . 26) #f) ((? . 1158) v! #f (? . 1158) #f (? . 6) #f) ((? . 1159) v! #f (? . 1159) #f (? . 28) #f) ((c tech c (c (? . 114) c (? . 1113))) v! #f (c tech c (? . 114) c (? . 1113)) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1160) ? . 15)) . 407) ((c counter c (c (? . 9) c (? . 1161) ? . 15)) . 239) ((c counter c (c (? . 9) c (? . 1162) ? . 15)) . 208) ((c counter c (c (? . 9) c (? . 1163) ? . 15)) . 367) ((c index-entry c (c tech c (c (? . 661) c (? . 1652)))) c (c (? . 1164)) c (c (6 italic (? . 1164))) q tech) ((c index-entry c (? . 1912)) c (c (? . 1165)) c (c (6 #f (? . 1913))) c (? . 3)) ((? . 1166) v! (? . 1167) (? . 1166) (c 2 ? . 906) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1168) ? . 15)) . 127) ((c counter c (c (? . 8) c (? . 1169) c (? . 10))) . 106) ((c index-entry c (? . 79)) c (c (? . 1170)) c (c (6 #f (? . 1171))) c (? . 3)) ((? . 1172) v! #f (? . 1172) #f (? . 6) #f) ((c counter ? . 1174) v! #f (c counter c (? . 62) ? . 1174) #f (? . 17) #f) ((c index-entry c (? . 733)) c (c (? . 1175)) c (c (6 italic (? . 1175))) q tech) ((c counter c (c (? . 9) c (? . 1176) ? . 15)) . 219) ((? . 1178) v! #f (? . 1178) #f (? . 22) #f) ((? . 1179) v! #f (? . 1179) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 1381) c (? . 10))) . 81) ((? . 1180) v! #f (? . 1180) #f (? . 28) #f) ((c index-entry c (? . 925)) c (c (? . 1181)) c (c (6 italic (? . 1181))) q tech) ((? . 1182) v! (? . 1183) (? . 1182) (c 2 ? . 450) (? . 6) #f) ((c counter c (c (? . 9) c (? . 1686) ? . 15)) . 11) ((? . 1184) v! #f (? . 1184) #f (? . 28) #f) ((c counter ? . 1185) v! #f (c counter c (? . 57) ? . 1185) #f (? . 17) #f) ((? . 1186) v! (? . 1734) (? . 1186) (c 2 ? . 1187) (? . 17) #f) ((? . 1188) v! (? . 1721) (? . 1188) (c 3 ? . 376) (? . 28) #f) ((c tech c (c (? . 51) c (? . 51))) v! #f (c tech c (? . 51) c (? . 51)) #f (? . 26) #f) ((? . 1189) v! #f (? . 1189) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1190) c (? . 10))) . 21) ((c counter c (c (? . 8) c (? . 1191) c (? . 10))) . 55) ((c tech c (c (? . 62) c (? . 1192))) v! #f (c tech c (? . 62) c (? . 1192)) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 2079) ? . 15)) . 297) ((c index-entry c (? . 1354)) c (c (? . 558)) c (c (6 italic (? . 558))) q tech) ((? . 1193) v! (? . 1429) (? . 1193) (c 20 ? . 94) (? . 73) #f) ((? . 1195) v! #f (? . 1195) #f (? . 28) #f) ((? . 1196) v! #f (? . 1196) #f (? . 22) #f) ((? . 1197) v! (? . 1198) (? . 1197) (c 3 ? . 450) (? . 6) #f) ((c index-entry c (? . 1802)) c (c (? . 1199)) c (c (6 italic (? . 1199))) q tech) ((? . 1200) v! #f (? . 1200) #f (? . 28) #f) ((c index-entry c (? . 1518)) c (c (? . 1201)) c (c (6 #f (? . 1519))) c (? . 3)) ((? . 1202) v! #f (? . 1202) #f (? . 17) #f) ((? . 1204) v! #f (? . 1204) #f (? . 73) #f) ((? . 1205) v! #f (? . 1205) #f (? . 28) #f) ((? . 1207) v! #f (? . 1207) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1208) ? . 15)) . 138) ((c index-entry c (? . 91)) c (c (? . 1209)) c (c (6 #f (? . 1210))) c (? . 3)) ((? . 1211) v! (? . 1212) (? . 1211) (c 2 ? . 376) (? . 28) #f) ((c index-entry c (? . 451)) c (c (? . 1213)) c (c (6 italic (? . 1213))) q tech) ((c index-entry c (? . 1478)) c (q "BSL: Grammar") c (c (6 #f (? . 1479))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1214) ? . 15)) . 378) ((c counter ? . 1215) v! #f (c counter c (? . 62) ? . 1215) #f (? . 17) #f) ((? . 1216) v! (? . 1217) (? . 1216) (c 4 ? . 1061) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1218) ? . 15)) . 98) ((c index-entry c (? . 1960)) c (q "Newton's Method") c (c (6 #f (? . 1961))) c (? . 3)) ((? . 1219) v! (? . 1220) (? . 1219) (c 2 ? . 232) (? . 26) #f) ((? . 1221) v! (? . 1222) (? . 1221) (? . 1223) (? . 1224) #t) ((c index-entry c (? . 1424)) c (c (? . 1225)) c (c (6 #f (? . 1425))) c (? . 3)) ((? . 1226) v! #f (? . 1226) #f (? . 26) #f) ((c index-entry c (c tech c (c (? . 114) c (? . 1228)))) c (c (? . 1227)) c (c (6 italic (? . 1227))) q tech) ((c tech c (c (? . 114) c (? . 1228))) v! #f (c tech c (? . 114) c (? . 1228)) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1268) c (? . 10))) . 61) ((c counter c (c (? . 9) c (? . 1229) ? . 15)) . 103) ((c counter c (c (? . 9) c (? . 1230) ? . 15)) . 185) ((c counter c (c (? . 9) c (? . 1231) ? . 15)) . 167) ((? . 1233) v! #f (? . 1233) #f (? . 6) #f) ((? . 1235) v! #f (? . 1235) #f (? . 28) #f) ((c counter ? . 1236) v! #f (c counter c (? . 661) ? . 1236) #f (? . 17) #f) ((c index-entry c (? . 1588)) c (c (? . 1237)) c (c (6 #f (? . 1589))) c (? . 3)) ((? . 1238) v! #f (? . 1238) #f (? . 6) #f) ((? . 1240) v! #f (? . 1240) #f (? . 17) #f) ((? . 1241) v! (? . 1242) (? . 1241) (c 2 ? . 574) (? . 22) #f) ((? . 1244) v! #f (? . 1244) #f (? . 17) #f) ((c counter ? . 1246) v! #f (c counter c (? . 661) ? . 1246) #f (? . 17) #f) ((? . 1248) v! #f (? . 1248) #f (? . 6) #f) ((? . 1249) v! #f (? . 1249) #f (? . 6) #f) ((? . 1251) v! #f (? . 1251) #f (? . 6) #f) ((? . 1252) v! #f (? . 1252) #f (? . 17) #f) ((c tech c (c (? . 62) c (? . 1253))) v! #f (c tech c (? . 62) c (? . 1253)) #f (? . 17) #f) ((c tech c (c (? . 62) c (? . 1254))) v! #f (c tech c (? . 62) c (? . 1254)) #f (? . 17) #f) ((c index-entry c (c tech c (c (? . 114) c (? . 1014)))) c (c (? . 1255)) c (c (6 italic (? . 1255))) q tech) ((c index-entry c (? . 364)) c (c (? . 1256)) c (c (6 #f (? . 1257))) c (? . 3)) ((? . 1259) v! #f (? . 1259) #f (? . 28) #f) ((? . 1260) v! #f (? . 1260) #f (? . 6) #f) ((? . 1261) v! #f (? . 1261) #f (? . 17) #f) ((c counter ? . 1262) v! #f (c counter c (? . 661) ? . 1262) #f (? . 17) #f) ((? . 1264) v! #f (? . 1264) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1265) ? . 15)) . 214) ((? . 1266) v! #f (? . 1266) #f (? . 28) #f) ((? . 1267) v! #f (? . 1267) #f (? . 26) #f) ((? . 1269) v! #f (? . 1269) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1270) ? . 15)) . 263) ((? . 1271) v! #f (? . 1271) #f (? . 187) #f) ((c counter c (c (? . 9) c (? . 1272) ? . 15)) . 340) ((c index-entry c (? . 691)) c (c (? . 1273)) c (c (6 #f (? . 1274))) c (? . 3)) ((c tech c (c (? . 57) c (? . 1275))) v! #f (c tech c (? . 57) c (? . 1275)) #f (? . 17) #f) ((c index-entry c (? . 483)) c (c (? . 1276)) c (c (6 italic (? . 1276))) q tech) ((? . 1277) v! #f (? . 1277) #f (? . 17) #f) ((? . 1278) v! #f (? . 1278) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1279) ? . 15)) . 28) ((? . 1280) v! #f (? . 1280) #f (? . 26) #f) ((? . 1282) v! #f (? . 1282) #f (? . 73) #f) ((? . 1283) v! #f (? . 1283) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1718) ? . 15)) . 61) ((c counter ? . 1285) v! #f (c counter c (? . 404) ? . 1285) #f (? . 6) #f) ((? . 1286) v! #f (? . 1286) #f (? . 73) #f) ((c index-entry c (? . 325)) c (c (? . 1287)) c (c (6 italic (? . 1287))) q tech) ((? . 1288) v! (? . 1289) (? . 1288) (c #f c #f c (? . 167)) (? . 187) #f) ((c index-entry c (? . 1485)) c (c (? . 1290)) c (c (6 italic (? . 1290))) q tech) ((c counter c (c (? . 9) c (? . 1291) ? . 15)) . 176) ((c counter c (c (? . 9) c (? . 1292) ? . 15)) . 24) ((? . 1293) v! #f (? . 1293) #f (? . 514) #f) ((? . 1295) v! #f (? . 1295) #f (? . 6) #f) ((? . 1296) v! (? . 1297) (? . 1296) (c 4 ? . 882) (? . 6) #f) ((c counter c (c (? . 9) c (? . 1298) ? . 15)) . 233) ((c counter c (c (? . 8) c (? . 1299) c (? . 10))) . 99) ((? . 1301) v! #f (? . 1301) #f (? . 17) #f) ((c index-entry c (? . 649)) c (c (? . 1302)) c (c (6 #f (? . 1303))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1304) ? . 15)) . 242) ((c index-entry c (? . 1060)) c (c (? . 1305)) c (c (6 #f (? . 1306))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1307) ? . 15)) . 413) ((? . 1308) v! (? . 1976) (? . 1308) (c #f c #f c (? . 167)) (? . 237) #f) ((c index-entry c (? . 1740)) c (c (? . 1309)) c (c (6 italic (? . 1309))) q tech) ((c counter ? . 1311) v! #f (c counter c (? . 57) ? . 1311) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1566) ? . 15)) . 360) ((c index-entry c (? . 699)) c (c (? . 1312)) c (c (6 italic (? . 1312))) q tech) ((c index-entry c (c tech c (c (? . 114) c (? . 115)))) c (c (? . 1313)) c (c (6 italic (? . 1313))) q tech) ((? . 1314) v! #f (? . 1314) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1315) ? . 15)) . 19) ((? . 1317) v! #f (? . 1317) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1318) c (? . 10))) . 45) ((c index-entry c (c tech c (c (? . 57) c (? . 878)))) c (c (? . 1319)) c (c (6 italic (? . 1319))) q tech) ((c counter c (c (? . 9) c (? . 1557) ? . 15)) . 220) ((c counter c (c (? . 8) c (? . 1825) c (? . 10))) . 97) ((? . 1321) v! #f (? . 1321) #f (? . 187) #f) ((c counter c (c (? . 9) c (? . 1322) ? . 15)) . 54) ((? . 1324) v! #f (? . 1324) #f (? . 22) #f) ((? . 1325) v! #f (? . 1325) #f (? . 17) #f) ((c index-entry c (c tech c (c (? . 51) c (? . 1124)))) c (c (? . 503)) c (c (6 italic (? . 503))) q tech) ((c counter c (c (? . 9) c (? . 1539) ? . 15)) . 302) ((c counter c (c (? . 9) c (? . 1326) ? . 15)) . 273) ((? . 1328) v! #f (? . 1328) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1329) ? . 15)) . 202) ((? . 1330) v! (? . 1331) (? . 1330) (c 1 ? . 218) (? . 17) #f) ((c counter c (c (? . 8) c (? . 1332) c (? . 10))) . 15) ((c index-entry c (? . 658)) c (c (? . 1333)) c (c (6 #f (? . 1334))) c (? . 3)) ((c counter ? . 1335) v! #f (c counter c (? . 151) ? . 1335) #f (? . 17) #f) ((? . 1336) v! #f (? . 1336) #f (? . 22) #f) ((c index-entry c (? . 1020)) c (c (? . 1337)) c (c (6 italic (? . 1337))) q tech) ((? . 1339) v! #f (? . 1339) #f (? . 17) #f) ((? . 1341) v! #f (? . 1341) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1997) ? . 15)) . 324) ((? . 1342) v! #f (? . 1342) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1343) ? . 15)) . 116) ((? . 1345) v! #f (? . 1345) #f (? . 73) #f) ((? . 1346) v! #f (? . 1346) #f (? . 28) #f) ((? . 1347) v! (? . 2000) (? . 1347) (c 7 ? . 218) (? . 17) #f) ((? . 1349) v! #f (? . 1349) #f (? . 187) #f) ((c index-entry c (? . 795)) c (c (? . 1350)) c (c (6 #f (? . 1351))) c (? . 3)) ((c index-entry c (? . 924)) c (c (? . 1352)) c (c (6 italic (? . 1352))) q tech) ((c counter c (c (? . 9) c (? . 1353) ? . 15)) . 132) ((? . 1354) v! #f (? . 1354) #f (? . 6) #f) ((c counter ? . 1355) v! #f (c counter c (? . 57) ? . 1355) #f (? . 17) #f) ((? . 1357) v! #f (? . 1357) #f (? . 17) #f) ((c index-entry c (? . 1455)) c (c (? . 1358)) c (c (6 italic (? . 1358))) q tech) ((c counter ? . 1360) v! #f (c counter c (? . 151) ? . 1360) #f (? . 17) #f) ((? . 1362) v! #f (? . 1362) #f (? . 17) #f) ((c index-entry c (? . 1942)) c (c (? . 1363)) c (c (6 #f (? . 1943))) c (? . 3)) ((? . 1364) v! (? . 1365) (? . 1364) (? . 882) (? . 6) #f) ((c index-entry c (? . 624)) c (c (? . 1366)) c (c (6 italic (? . 1366))) q tech) ((c counter c (c (? . 9) c (? . 1367) ? . 15)) . 218) ((? . 1368) v! () (? . 1368) (c 28 ? . 1369) (? . 1370) #f) ((c counter c (c (? . 9) c (? . 1371) ? . 15)) . 430) ((c counter ? . 1373) v! #f (c counter c (? . 404) ? . 1373) #f (? . 6) #f) ((? . 1375) v! #f (? . 1375) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 1376) c (? . 10))) . 109) ((? . 1377) v! (? . 1378) (? . 1377) (c 3 ? . 428) (? . 22) #f) ((c index-entry c (? . 1696)) c (c (? . 1379)) c (c (6 italic (? . 1379))) q tech) ((c counter c (c (? . 9) c (? . 1380) ? . 15)) . 331) ((? . 1382) v! #f (? . 1382) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1614) ? . 15)) . 15) ((c index-entry c (? . 1561)) c (c (? . 1383)) c (c (6 italic (? . 1383))) q tech) ((c counter ? . 1385) v! #f (c counter c (? . 62) ? . 1385) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1646) ? . 15)) . 380) ((? . 1387) v! #f (? . 1387) #f (? . 26) #f) ((c counter ? . 1389) v! #f (c counter c (? . 661) ? . 1389) #f (? . 17) #f) ((c index-entry c (? . 458)) c (c (? . 1390)) c (c (6 italic (? . 1390))) q tech) ((? . 1391) v! (? . 1392) (? . 1391) (? . 1458) (? . 22) #f) ((c counter c (c (? . 9) c (? . 1393) ? . 15)) . 189) ((c counter c (c (? . 9) c (? . 1944) ? . 15)) . 235) ((c counter ? . 1394) v! #f (c counter c (? . 151) ? . 1394) #f (? . 17) #f) ((? . 1395) v! (? . 1396) (? . 1395) (? . 277) (? . 28) #t) ((? . 1397) v! (? . 1398) (? . 1397) (? . 160) (? . 6) #t) ((? . 1399) v! #f (? . 1399) #f (? . 17) #f) ((? . 1400) v! (? . 1755) (? . 1400) (? . 1810) (? . 514) #t) ((c index-entry c (? . 362)) c (c (? . 1401)) c (c (6 italic (? . 1401))) q tech) ((c counter c (c (? . 9) c (? . 1813) ? . 15)) . 280) ((c index-entry c (c tech c (c (? . 661) c (? . 896)))) c (c (? . 1402)) c (c (6 italic (? . 1402))) q tech) ((? . 1403) v! (? . 1404) (? . 1403) (c 3 ? . 456) (? . 17) #f) ((c index-entry c (? . 132)) c (c (? . 1405)) c (c (6 italic (? . 1405))) q tech) ((? . 1406) v! #f (? . 1406) #f (? . 28) #f) ((? . 1407) v! (? . 1408) (? . 1407) (? . 481) (? . 17) #f) ((c index-entry c (? . 1930)) c (c (? . 1409)) c (c (6 italic (? . 1409))) q tech) ((c counter c (c (? . 9) c (? . 1410) ? . 15)) . 358) ((c index-entry c (? . 387)) c (c (? . 1411)) c (c (6 italic (? . 1411))) q tech) ((c counter c (c (? . 9) c (? . 1412) ? . 15)) . 8) ((c counter c (c (? . 9) c (? . 1860) ? . 15)) . 172) ((? . 1413) v! #f (? . 1413) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1414) ? . 15)) . 350) ((c index-entry c (? . 112)) c (c (? . 1415)) c (c (6 italic (? . 1415))) q tech) ((? . 1416) v! (? . 1417) (? . 1416) (c 4 ? . 218) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1418) ? . 15)) . 22) ((c counter c (c (? . 8) c (? . 2038) c (? . 10))) . 63) ((? . 1419) v! #f (? . 1419) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1420) c (? . 10))) . 83) ((c counter c (c (? . 9) c (? . 1421) ? . 15)) . 55) ((? . 1423) v! #f (? . 1423) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 1935) ? . 15)) . 419) ((? . 1424) v! (? . 1425) (? . 1424) (? . 819) (? . 26) #f) ((c index-entry c (? . 1283)) c (c (? . 1426)) c (c (6 italic (? . 1426))) q tech) ((c index-entry c (? . 504)) c (c (? . 1427)) c (c (6 #f (? . 1428))) c (? . 3)) ((c index-entry c (? . 1193)) c (c (? . 136)) c (c (6 #f (? . 1429))) c (? . 3)) ((? . 1430) v! (? . 1431) (? . 1430) (c 2 ? . 1432) (? . 26) #f) ((? . 1433) v! (? . 1434) (? . 1433) (c 5 ? . 800) (? . 28) #f) ((? . 1436) v! #f (? . 1436) #f (? . 26) #f) ((c index-entry c (? . 1116)) c (c (? . 1437)) c (c (6 italic (? . 1437))) q tech) ((? . 1438) v! #f (? . 1438) #f (? . 17) #f) ((? . 1439) v! #f (? . 1439) #f (? . 6) #f) ((c index-entry c (? . 217)) c (c (? . 1440)) c (c (6 #f (? . 1441))) c (? . 3)) ((? . 1443) v! #f (? . 1443) #f (? . 6) #f) ((? . 1444) v! #f (? . 1444) #f (? . 26) #f) ((c index-entry c (? . 1880)) c (c (? . 1445)) c (c (6 #f (? . 1881))) c (? . 3)) ((? . 1446) v! (? . 1985) (? . 1446) (c 1 ? . 1447) (? . 6) #f) ((? . 1448) v! (? . 1449) (? . 1448) (c #f c #f c (? . 167)) (? . 650) #f) ((? . 1450) v! (? . 1451) (? . 1450) (c 2 ? . 337) (? . 6) #f) ((c counter c (c (? . 9) c (? . 1452) ? . 15)) . 201) ((c counter c (c (? . 9) c (? . 1453) ? . 15)) . 182) ((? . 1454) v! #f (? . 1454) #f (? . 28) #f) ((? . 1455) v! #f (? . 1455) #f (? . 17) #f) ((? . 1456) v! (? . 1457) (? . 1456) (c 1 ? . 1458) (? . 22) #f) ((c index-entry c (? . 1845)) c (c (? . 1459)) c (c (6 italic (? . 1459))) q tech) ((c counter c (c (? . 9) c (? . 1460) ? . 15)) . 227) ((c index-entry c (? . 1964)) c (c (? . 1461)) c (c (6 #f (? . 1965))) c (? . 3)) ((? . 1463) v! #f (? . 1463) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 2004) c (? . 10))) . 7) ((? . 1464) v! () (? . 1464) (c 21 ? . 1465) (? . 197) #f) ((c counter c (c (? . 9) c (? . 1466) ? . 15)) . 332) ((c index-entry c (c tech c (c (? . 62) c (? . 1254)))) c (c (? . 1467)) c (c (6 italic (? . 1467))) q tech) ((c counter c (c (? . 9) c (? . 1468) ? . 15)) . 144) ((c index-entry c (? . 1918)) c (c (? . 1469)) c (c (6 italic (? . 1469))) q tech) ((c index-entry c (? . 668)) c (c (? . 1470)) c (c (6 #f (? . 1471))) c (? . 3)) ((c index-entry c (c tech c (c (? . 404) c (? . 280)))) c (c (? . 440)) c (c (6 italic (? . 440))) q tech) ((c index-entry c (? . 559)) c (c (? . 1472)) c (c (6 italic (? . 1472))) q tech) ((? . 1473) v! (? . 1608) (? . 1473) (c 3 ? . 232) (? . 26) #f) ((c counter c (c (? . 9) c (? . 1474) ? . 15)) . 279) ((? . 1475) v! #f (? . 1475) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1476) ? . 15)) . 229) ((? . 1477) v! #f (? . 1477) #f (? . 6) #f) ((? . 1478) v! (? . 1479) (? . 1478) (c #f c #f c (? . 167)) (? . 187) #f) ((? . 1481) v! #f (? . 1481) #f (? . 28) #f) ((? . 1482) v! #f (? . 1482) #f (? . 17) #f) ((? . 1483) v! (? . 1974) (? . 1483) (c #f c #f c (? . 167)) (? . 237) #f) ((c tech c (c (? . 62) c (? . 1484))) v! #f (c tech c (? . 62) c (? . 1484)) #f (? . 17) #f) ((? . 1485) v! #f (? . 1485) #f (? . 28) #f) ((? . 1487) v! #f (? . 1487) #f (? . 22) #f) ((? . 1488) v! (? . 1489) (? . 1488) (c 4 ? . 376) (? . 28) #f) ((? . 1491) v! #f (? . 1491) #f (? . 28) #f) ((c index-entry c (? . 1576)) c (c (? . 1492)) c (c (6 #f (? . 1577))) c (? . 3)) ((? . 1494) v! #f (? . 1494) #f (? . 28) #f) ((? . 1495) v! #f (? . 1495) #f (? . 17) #f) ((c index-entry c (? . 372)) c (c (? . 1496)) c (c (6 #f (? . 1497))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1498) ? . 15)) . 390) ((? . 1500) v! #f (? . 1500) #f (? . 22) #f) ((? . 1502) v! #f (? . 1502) #f (? . 17) #f) ((? . 1503) v! (? . 1504) (? . 1503) (c 3 ? . 1061) (? . 17) #f) ((c counter c (c (? . 9) c (? . 2081) ? . 15)) . 84) ((? . 1505) v! (? . 1506) (? . 1505) (c 2 ? . 481) (? . 17) #f) ((c index-entry c (? . 352)) c (c (? . 1507)) c (c (6 italic (? . 1507))) q tech) ((? . 1509) v! #f (? . 1509) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 2034) ? . 15)) . 414) ((? . 1511) v! #f (? . 1511) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1986) ? . 15)) . 234) ((c index-entry c (? . 301)) c (c (? . 1512)) c (c (6 italic (? . 1512))) q tech) ((c counter c (c (? . 9) c (? . 1758) ? . 15)) . 184) ((c counter c (c (? . 9) c (? . 1513) ? . 15)) . 416) ((? . 1515) v! #f (? . 1515) #f (? . 73) #f) ((c tech c (c (? . 114) c (? . 1516))) v! #f (c tech c (? . 114) c (? . 1516)) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1517) ? . 15)) . 69) ((? . 1518) v! (? . 1519) (? . 1518) (c 7 ? . 456) (? . 17) #f) ((? . 1521) v! #f (? . 1521) #f (? . 28) #f) ((c index-entry c (? . 272)) c (c (? . 1522)) c (c (6 italic (? . 1522))) q tech) ((? . 1523) v! (? . 1524) (? . 1523) (? . 94) (? . 73) #t) ((c counter c (c (? . 8) c (? . 1525) c (? . 10))) . 76) ((? . 1527) v! #f (? . 1527) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1528) c (? . 10))) . 19) ((c index-entry c (? . 81)) c (q "Functions from lambda") c (c (6 #f (? . 1529))) c (? . 3)) ((c index-entry c (? . 0)) c (c (? . 1530)) c (c (6 #f (? . 1531))) c (? . 3)) ((? . 1532) v! #f (? . 1532) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1663) ? . 15)) . 72) ((c index-entry c (c tech c (c (? . 114) c (? . 347)))) c (c (? . 1533)) c (c (6 italic (? . 1533))) q tech) ((c counter c (c (? . 9) c (? . 1534) ? . 15)) . 405) ((c counter c (c (? . 9) c (? . 1535) ? . 15)) . 249) ((c counter c (c (? . 9) c (? . 1885) ? . 15)) . 322) ((c index-entry c (? . 853)) c (c (? . 1536)) c (c (6 italic (? . 1536))) q tech) ((c counter c (c (? . 9) c (? . 1752) ? . 15)) . 246) ((? . 1538) v! #f (? . 1538) #f (? . 28) #f) ((? . 1540) v! #f (? . 1540) #f (? . 28) #f) ((? . 1542) v! #f (? . 1542) #f (? . 28) #f) ((c counter c (c (? . 8) c (? . 1543) c (? . 10))) . 46) ((c index-entry c (? . 1716)) c (c (? . 1544)) c (c (6 #f (? . 1717))) c (? . 3)) ((c index-entry c (? . 1142)) c (c (? . 1545)) c (c (6 italic (? . 1545))) q tech) ((c tech c (c (? . 404) c (? . 280))) v! #f (c tech c (? . 404) c (? . 280)) #f (? . 6) #f) ((? . 1546) v! #f (? . 1546) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1547) ? . 15)) . 420) ((c counter c (c (? . 9) c (? . 1548) ? . 15)) . 409) ((? . 1549) v! (? . 1550) (? . 1549) (? . 695) (? . 28) #f) ((? . 1551) v! (? . 1684) (? . 1551) (c 3 ? . 1447) (? . 6) #f) ((c counter c (c (? . 9) c (? . 1552) ? . 15)) . 422) ((c counter c (c (? . 8) c (? . 1553) c (? . 10))) . 18) ((? . 1554) v! (? . 1555) (? . 1554) (c #f c #f c (? . 167)) (? . 514) #f) ((c index-entry c (? . 1621)) c (c (? . 1556)) c (c (6 italic (? . 1556))) q tech) ((? . 1558) v! #f (? . 1558) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1559) c (? . 10))) . 85) ((c index-entry c (? . 1603)) c (c (? . 1560)) c (c (6 italic (? . 1560))) q tech) ((? . 1561) v! #f (? . 1561) #f (? . 28) #f) ((? . 1562) v! (? . 1563) (? . 1562) (c #f c #f c (? . 167)) (? . 237) #f) ((c index-entry c (? . 1834)) c (c (? . 1564)) c (c (6 italic (? . 1564))) q tech) ((c part c (c (? . 51) c (? . 1565))) v! (? . 2067) (c part c (? . 51) c (? . 1565)) (c 1 ? . 1432) (? . 26) #f) ((? . 1567) v! #f (? . 1567) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1568) ? . 15)) . 223) ((? . 1569) v! #f (? . 1569) #f (? . 6) #f) ((? . 1570) v! #f (? . 1570) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1571) ? . 15)) . 100) ((? . 1572) v! (? . 1573) (? . 1572) (? . 430) (? . 28) #f) ((? . 1575) v! #f (? . 1575) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1678) ? . 15)) . 173) ((? . 1576) v! (? . 1577) (? . 1576) (? . 218) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1578) ? . 15)) . 95) ((c index-entry c (? . 34)) c (c (? . 1579)) c (c (6 italic (? . 1579))) q tech) ((? . 1581) v! #f (? . 1581) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1582) ? . 15)) . 50) ((? . 1584) v! #f (? . 1584) #f (? . 73) #f) ((c tech c (c (? . 151) c (? . 66))) v! #f (c tech c (? . 151) c (? . 66)) #f (? . 17) #f) ((? . 1586) v! #f (? . 1586) #f (? . 28) #f) ((? . 1587) v! #f (? . 1587) #f (? . 6) #f) ((? . 1588) v! (? . 1589) (? . 1588) (c 2 ? . 1052) (? . 73) #f) ((c counter c (c (? . 9) c (? . 2075) ? . 15)) . 175) ((c counter c (c (? . 9) c (? . 1590) ? . 15)) . 38) ((? . 1592) v! #f (? . 1592) #f (? . 187) #f) ((? . 1594) v! #f (? . 1594) #f (? . 187) #f) ((? . 1595) v! #f (? . 1595) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1596) ? . 15)) . 142) ((c index-entry c (? . 1926)) c (c (? . 1597)) c (c (6 #f (? . 1927))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1598) ? . 15)) . 293) ((? . 1599) v! (? . 1600) (? . 1599) (c 2 ? . 1447) (? . 6) #f) ((c index-entry c (c tech c (c (? . 62) c (? . 435)))) c (c (? . 1601)) c (c (6 italic (? . 1601))) q tech) ((c counter c (c (? . 9) c (? . 1602) ? . 15)) . 86) ((? . 1603) v! #f (? . 1603) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 2008) c (? . 10))) . 104) ((? . 1604) v! (? . 1605) (? . 1604) (c 2 ? . 1061) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1606) ? . 15)) . 121) ((c counter c (c (? . 8) c (? . 1978) c (? . 10))) . 44) ((c index-entry c (? . 1473)) c (c (? . 1607)) c (c (6 #f (? . 1608))) c (? . 3)) ((? . 1610) v! #f (? . 1610) #f (? . 28) #f) ((c index-entry c (? . 617)) c (c (? . 1611)) c (c (6 #f (? . 1612))) c (? . 3)) ((c index-entry c (? . 207)) c (c (? . 1613)) c (c (6 italic (? . 1613))) q tech) ((? . 1615) v! #f (? . 1615) #f (? . 17) #f) ((? . 1616) v! #f (? . 1616) #f (? . 17) #f) ((? . 1618) v! #f (? . 1618) #f (? . 22) #f) ((c counter c (c (? . 8) c (? . 1619) c (? . 10))) . 6) ((? . 1620) v! #f (? . 1620) #f (? . 17) #f) ((? . 1621) v! #f (? . 1621) #f (? . 28) #f) ((? . 1622) v! (? . 1623) (? . 1622) (c 2 ? . 424) (? . 28) #f) ((c counter ? . 1625) v! #f (c counter c (? . 51) ? . 1625) #f (? . 26) #f) ((? . 1627) v! #f (? . 1627) #f (? . 187) #f) ((? . 1628) v! #f (? . 1628) #f (? . 6) #f) ((? . 1629) v! (? . 1630) (? . 1629) (c 3 ? . 574) (? . 22) #f) ((c counter c (c (? . 9) c (? . 1631) ? . 15)) . 131) ((c counter c (c (? . 9) c (? . 1632) ? . 15)) . 347) ((c index-entry c (? . 462)) c (c (? . 136)) c (c (6 #f (? . 1633))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1634) ? . 15)) . 122) ((? . 1635) v! #f (? . 1635) #f (? . 197) #f) ((c counter c (c (? . 9) c (? . 1636) ? . 15)) . 2) ((? . 1638) v! #f (? . 1638) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1855) ? . 15)) . 139) ((c counter c (c (? . 8) c (? . 1639) c (? . 10))) . 38) ((c index-entry c (? . 1922)) c (c (? . 1640)) c (c (6 italic (? . 1640))) q tech) ((c part c (c (? . 62) c (? . 1641))) v! (? . 1642) (c part c (? . 62) c (? . 1641)) (c 1 ? . 1187) (? . 17) #f) ((c counter c (c (? . 9) c (? . 1643) ? . 15)) . 96) ((c counter c (c (? . 8) c (? . 2040) c (? . 10))) . 68) ((c index-entry c (c tech c (c (? . 57) c (? . 58)))) c (c (? . 1644)) c (c (6 italic (? . 1644))) q tech) ((? . 1645) v! #f (? . 1645) #f (? . 28) #f) ((? . 1647) v! #f (? . 1647) #f (? . 26) #f) ((? . 1649) v! #f (? . 1649) #f (? . 26) #f) ((? . 1650) v! (? . 1651) (? . 1650) (c 3 ? . 800) (? . 28) #f) ((c tech c (c (? . 661) c (? . 1652))) v! #f (c tech c (? . 661) c (? . 1652)) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1653) c (? . 10))) . 59) ((c counter c (c (? . 9) c (? . 1654) ? . 15)) . 329) ((c part c (c (? . 57) c (? . 1655))) v! (? . 1656) (c part c (? . 57) c (? . 1655)) (c 3 ? . 481) (? . 17) #f) ((c index-entry c (? . 29)) c (c (? . 1657)) c (c (6 italic (? . 1657))) q tech) ((? . 1658) v! #f (? . 1658) #f (? . 28) #f) ((c index-entry c (? . 335)) c (c (? . 1659)) c (c (6 italic (? . 1659))) q tech) ((? . 1660) v! (? . 1661) (? . 1660) (c 4 ? . 906) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1662) ? . 15)) . 85) ((? . 1664) v! #f (? . 1664) #f (? . 17) #f) ((c index-entry c (? . 988)) c (c (? . 1665)) c (c (6 italic (? . 1665))) q tech) ((c counter c (c (? . 9) c (? . 1666) ? . 15)) . 366) ((c index-entry c (? . 722)) c (c (? . 1667)) c (c (6 italic (? . 1667))) q tech) ((? . 1669) v! #f (? . 1669) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 1670) ? . 15)) . 278) ((c index-entry c (? . 1939)) c (c (? . 39)) c (c (6 #f (? . 1940))) c (? . 3)) ((? . 1672) v! #f (? . 1672) #f (? . 6) #f) ((? . 1674) v! #f (? . 1674) #f (? . 28) #f) ((c index-entry c (? . 336)) c (c (? . 1675)) c (c (6 #f (? . 1676))) c (? . 3)) ((c index-entry c (? . 30)) c (c (? . 1677)) c (c (6 italic (? . 1677))) q tech) ((? . 1679) v! #f (? . 1679) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 1680) c (? . 10))) . 62) ((? . 1682) v! #f (? . 1682) #f (? . 17) #f) ((c index-entry c (? . 1551)) c (c (? . 1683)) c (c (6 #f (? . 1684))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1685) ? . 15)) . 317) ((? . 1687) v! #f (? . 1687) #f (? . 17) #f) ((? . 1688) v! (? . 2064) (? . 1688) (c 1 ? . 872) (? . 6) #f) ((? . 1690) v! #f (? . 1690) #f (? . 237) #f) ((c index-entry c (? . 150)) c (c (? . 1691)) c (c (6 italic (? . 1691))) q tech) ((? . 1692) v! (? . 2051) (? . 1692) (c 5 ? . 677) (? . 73) #f) ((? . 1694) v! #f (? . 1694) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1695) ? . 15)) . 1) ((? . 1696) v! #f (? . 1696) #f (? . 6) #f) ((? . 1697) v! #f (? . 1697) #f (? . 73) #f) ((c index-entry c (? . 1853)) c (c (? . 1698)) c (c (6 #f (? . 1854))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1699) ? . 15)) . 79) ((c counter ? . 1701) v! #f (c counter c (? . 62) ? . 1701) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1702) ? . 15)) . 240) ((c counter c (c (? . 9) c (? . 1703) ? . 15)) . 261) ((? . 1704) v! #f (? . 1704) #f (? . 17) #f) ((? . 1705) v! (? . 1706) (? . 1705) (c 1 ? . 1052) (? . 73) #f) ((c counter c (c (? . 9) c (? . 1707) ? . 15)) . 404) ((c part c (c (? . 404) c (? . 1708))) v! (? . 1709) (c part c (? . 404) c (? . 1708)) (c 4 ? . 1447) (? . 6) #f) ((c index-entry c (? . 594)) c (c (? . 1710)) c (c (6 #f (? . 1711))) c (? . 3)) ((? . 1713) v! #f (? . 1713) #f (? . 22) #f) ((c counter c (c (? . 9) c (? . 1714) ? . 15)) . 31) ((? . 1715) v! #f (? . 1715) #f (? . 6) #f) ((? . 1716) v! (? . 1717) (? . 1716) (c 4 ? . 1052) (? . 73) #f) ((? . 1719) v! #f (? . 1719) #f (? . 17) #f) ((c index-entry c (? . 1188)) c (c (? . 1720)) c (c (6 #f (? . 1721))) c (? . 3)) ((? . 1723) v! #f (? . 1723) #f (? . 6) #f) ((c counter ? . 1725) v! #f (c counter c (? . 151) ? . 1725) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1726) c (? . 10))) . 84) ((c counter c (c (? . 8) c (? . 1727) c (? . 10))) . 48) ((c counter c (c (? . 8) c (? . 1760) c (? . 10))) . 60) ((? . 1728) v! (? . 1729) (? . 1728) (? . 872) (? . 6) #f) ((c counter c (c (? . 8) c (? . 1730) c (? . 10))) . 25) ((? . 1732) v! #f (? . 1732) #f (? . 28) #f) ((c index-entry c (? . 1186)) c (c (? . 1733)) c (c (6 #f (? . 1734))) c (? . 3)) ((? . 1736) v! #f (? . 1736) #f (? . 73) #f) ((? . 1737) v! (? . 1738) (? . 1737) (c 3 ? . 677) (? . 73) #f) ((c index-entry c (? . 465)) c (c (? . 1739)) c (c (6 italic (? . 1739))) q tech) ((? . 1740) v! #f (? . 1740) #f (? . 26) #f) ((? . 1742) v! #f (? . 1742) #f (? . 6) #f) ((? . 1744) v! #f (? . 1744) #f (? . 73) #f) ((c counter c (c (? . 8) c (? . 1745) c (? . 10))) . 10) ((c counter ? . 1747) v! #f (c counter c (? . 57) ? . 1747) #f (? . 17) #f) ((? . 1749) v! #f (? . 1749) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1750) ? . 15)) . 264) ((? . 1751) v! #f (? . 1751) #f (? . 6) #f) ((? . 1753) v! #f (? . 1753) #f (? . 73) #f) ((c index-entry c (? . 1400)) c (c (? . 1754)) c (c (6 #f (? . 1755))) c (? . 3)) ((? . 1756) v! (? . 1757) (? . 1756) (c 3 ? . 337) (? . 6) #f) ((? . 1759) v! #f (? . 1759) #f (? . 6) #f) ((? . 1761) v! #f (? . 1761) #f (? . 28) #f) ((? . 1763) v! #f (? . 1763) #f (? . 28) #f) ((? . 1765) v! #f (? . 1765) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1766) ? . 15)) . 75) ((c counter c (c (? . 9) c (? . 1767) ? . 15)) . 258) ((c counter c (c (? . 9) c (? . 1768) ? . 15)) . 338) ((c index-entry c (c tech c (c (? . 114) c (? . 638)))) c (c (? . 1769)) c (c (6 italic (? . 1769))) q tech) ((c index-entry c (c tech c (c (? . 51) c (? . 144)))) c (c (? . 1770)) c (c (6 italic (? . 1770))) q tech) ((? . 1771) v! #f (? . 1771) #f (? . 73) #f) ((? . 1773) v! #f (? . 1773) #f (? . 28) #f) ((? . 1775) v! #f (? . 1775) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1776) ? . 15)) . 23) ((c counter c (c (? . 9) c (? . 2036) ? . 15)) . 374) ((c index-entry c (? . 134)) c (c (? . 1777)) c (c (6 italic (? . 1777))) q tech) ((c index-entry c (? . 1112)) c (c (? . 1778)) c (c (6 #f (? . 1779))) c (? . 3)) ((c index-entry c (? . 1948)) c (c (? . 1780)) c (c (6 #f (? . 1949))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1781) ? . 15)) . 393) ((? . 1783) v! #f (? . 1783) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1784) ? . 15)) . 58) ((? . 1786) v! #f (? . 1786) #f (? . 22) #f) ((? . 1787) v! (? . 1788) (? . 1787) (c 34 ? . 92) (? . 26) #f) ((c index-entry c (? . 549)) c (c (? . 1789)) c (c (6 italic (? . 1789))) q tech) ((? . 1790) v! (? . 1791) (? . 1790) (c 3 ? . 1187) (? . 17) #f) ((c counter c (c (? . 8) c (? . 1792) c (? . 10))) . 50) ((? . 1793) v! (? . 2044) (? . 1793) (c 1 ? . 450) (? . 6) #f) ((? . 1794) v! #f (? . 1794) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1795) ? . 15)) . 137) ((? . 1796) v! #f (? . 1796) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 1797) c (? . 10))) . 91) ((c counter ? . 1799) v! #f (c counter c (? . 62) ? . 1799) #f (? . 17) #f) ((? . 1801) v! #f (? . 1801) #f (? . 6) #f) ((? . 1802) v! #f (? . 1802) #f (? . 17) #f) ((c tech c (c (? . 114) c (? . 898))) v! #f (c tech c (? . 114) c (? . 898)) #f (? . 73) #f) ((c index-entry c (? . 1158)) c (c (? . 1803)) c (c (6 italic (? . 1803))) q tech) ((? . 1804) v! #f (? . 1804) #f (? . 6) #f) ((? . 1806) v! #f (? . 1806) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1933) ? . 15)) . 266) ((? . 1808) v! #f (? . 1808) #f (? . 17) #f) ((? . 1809) v! () (? . 1809) (c 15 ? . 1810) (? . 514) #f) ((c index-entry c (c part c (c (? . 114) c (? . 684)))) c (c (? . 1811)) c (c (6 #f (? . 1812))) c (? . 3)) ((? . 1814) v! #f (? . 1814) #f (? . 28) #f) ((? . 1815) v! #f (? . 1815) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1816) ? . 15)) . 147) ((? . 1818) v! #f (? . 1818) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1819) ? . 15)) . 247) ((? . 1820) v! (? . 1821) (? . 1820) (c 2 ? . 456) (? . 17) #f) ((? . 1823) v! #f (? . 1823) #f (? . 26) #f) ((c index-entry c (c tech c (c (? . 661) c (? . 1882)))) c (c (? . 1824)) c (c (6 italic (? . 1824))) q tech) ((? . 1826) v! #f (? . 1826) #f (? . 26) #f) ((? . 1828) v! #f (? . 1828) #f (? . 187) #f) ((? . 1830) v! #f (? . 1830) #f (? . 17) #f) ((c counter c (c (? . 8) c (? . 1831) c (? . 10))) . 37) ((? . 1832) v! #f (? . 1832) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1833) ? . 15)) . 87) ((? . 1834) v! #f (? . 1834) #f (? . 26) #f) ((? . 1836) v! #f (? . 1836) #f (? . 26) #f) ((c index-entry c (? . 1839)) c (c (? . 1837)) c (c (6 #f (? . 1840))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1838) ? . 15)) . 255) ((? . 1839) v! (? . 1840) (? . 1839) (? . 337) (? . 6) #f) ((? . 1841) v! #f (? . 1841) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1842) ? . 15)) . 47) ((? . 1843) v! (? . 1844) (? . 1843) (c 5 ? . 230) (? . 17) #f) ((? . 1845) v! #f (? . 1845) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1846) ? . 15)) . 6) ((c counter c (c (? . 9) c (? . 1847) ? . 15)) . 231) ((c counter c (c (? . 9) c (? . 1848) ? . 15)) . 241) ((? . 1849) v! #f (? . 1849) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 1850) c (? . 10))) . 35) ((c counter ? . 1852) v! #f (c counter c (? . 62) ? . 1852) #f (? . 17) #f) ((? . 1853) v! (? . 1854) (? . 1853) (? . 450) (? . 6) #f) ((? . 1856) v! #f (? . 1856) #f (? . 6) #f) ((c index-entry c (? . 929)) c (c (? . 1857)) c (c (6 italic (? . 1857))) q tech) ((c index-entry c (? . 1293)) c (c (? . 1858)) c (c (6 italic (? . 1858))) q tech) ((? . 1859) v! #f (? . 1859) #f (? . 6) #f) ((? . 1861) v! #f (? . 1861) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1862) ? . 15)) . 12) ((c index-entry c (? . 129)) c (c (? . 1863)) c (c (6 #f (? . 1864))) c (? . 3)) ((c index-entry c (? . 99)) c (c (? . 1865)) c (c (6 #f (? . 1866))) c (? . 3)) ((? . 1868) v! #f (? . 1868) #f (? . 28) #f) ((? . 1869) v! (? . 1870) (? . 1869) (c 2 ? . 1458) (? . 22) #f) ((c counter c (c (? . 9) c (? . 1871) ? . 15)) . 289) ((c index-entry c (? . 1114)) c (c (? . 777)) c (c (6 italic (? . 777))) q tech) ((c counter c (c (? . 8) c (? . 1872) c (? . 10))) . 9) ((? . 1873) v! (? . 1874) (? . 1873) (? . 677) (? . 73) #f) ((c index-entry c (? . 1751)) c (c (? . 1875)) c (c (6 italic (? . 1875))) q tech) ((? . 1877) v! #f (? . 1877) #f (? . 28) #f) ((? . 1879) v! #f (? . 1879) #f (? . 237) #f) ((? . 1880) v! (? . 1881) (? . 1880) (c 2 ? . 716) (? . 26) #f) ((c tech c (c (? . 661) c (? . 1882))) v! #f (c tech c (? . 661) c (? . 1882)) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 1883) ? . 15)) . 180) ((c counter c (c (? . 9) c (? . 1884) ? . 15)) . 318) ((? . 1886) v! #f (? . 1886) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1887) ? . 15)) . 361) ((? . 1888) v! #f (? . 1888) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 1889) ? . 15)) . 52) ((c index-entry c (c tech c (c (? . 114) c (? . 852)))) c (c (? . 1890)) c (c (6 italic (? . 1890))) q tech) ((? . 1891) v! (? . 1892) (? . 1891) (c #f c #f c (? . 167)) (? . 187) #f) ((c counter c (c (? . 9) c (? . 1893) ? . 15)) . 18) ((c index-entry c (? . 1888)) c (c (? . 1894)) c (c (6 italic (? . 1894))) q tech) ((c counter c (c (? . 9) c (? . 1895) ? . 15)) . 13) ((c counter c (c (? . 8) c (? . 1896) c (? . 10))) . 58) ((? . 1897) v! #f (? . 1897) #f (? . 6) #f) ((c tech c (c (? . 404) c (? . 1898))) v! #f (c tech c (? . 404) c (? . 1898)) #f (? . 6) #f) ((? . 1899) v! (? . 1900) (? . 1899) (c 4 ? . 430) (? . 28) #f) ((c counter c (c (? . 9) c (? . 1901) ? . 15)) . 222) ((c index-entry c (? . 305)) c (c (? . 1902)) c (c (6 #f (? . 1903))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1904) ? . 15)) . 365) ((? . 1905) v! #f (? . 1905) #f (? . 17) #f) ((c index-entry c (? . 429)) c (c (? . 1906)) c (c (6 #f (? . 1907))) c (? . 3)) ((c index-entry c (? . 423)) c (c (? . 1908)) c (c (6 #f (? . 1909))) c (? . 3)) ((c tech c (c (? . 51) c (? . 1910))) v! #f (c tech c (? . 51) c (? . 1910)) #f (? . 26) #f) ((c counter c (c (? . 9) c (? . 1911) ? . 15)) . 119) ((c counter c (c (? . 9) c (? . 2048) ? . 15)) . 3) ((? . 1912) v! (? . 1913) (? . 1912) (c 1 ? . 481) (? . 17) #f) ((c index-entry c (? . 1107)) c (c (? . 63)) c (c (6 italic (? . 63))) q tech) ((? . 1915) v! #f (? . 1915) #f (? . 6) #f) ((? . 1916) v! (? . 1917) (? . 1916) (c 6 ? . 456) (? . 17) #f) ((? . 1918) v! #f (? . 1918) #f (? . 28) #f) ((c index-entry c (? . 229)) c (c (? . 1919)) c (c (6 #f (? . 1920))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1921) ? . 15)) . 341) ((c index-entry c (c tech c (c (? . 151) c (? . 407)))) c (c (? . 1437)) c (c (6 italic (? . 1437))) q tech) ((? . 1922) v! #f (? . 1922) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 1923) ? . 15)) . 304) ((c index-entry c (? . 76)) c (c (? . 1924)) c (c (6 italic (? . 1924))) q tech) ((c counter c (c (? . 9) c (? . 1925) ? . 15)) . 4) ((? . 1926) v! (? . 1927) (? . 1926) () (p+ #"/Users/matthias/0Unison/0Web/HtDP2e/index.html" . unix) #t) ((c index-entry c (? . 582)) c (c (? . 1928)) c (c (6 #f (? . 1929))) c (? . 3)) ((? . 1930) v! #f (? . 1930) #f (? . 17) #f) ((? . 1932) v! #f (? . 1932) #f (? . 26) #f) ((? . 1934) v! #f (? . 1934) #f (? . 28) #f) ((? . 1936) v! #f (? . 1936) #f (? . 22) #f) ((? . 1938) v! #f (? . 1938) #f (? . 17) #f) ((? . 1939) v! (? . 1940) (? . 1939) (c 2 ? . 882) (? . 6) #f) ((c counter c (c (? . 9) c (? . 1941) ? . 15)) . 236) ((? . 1942) v! (? . 1943) (? . 1942) (c 7 ? . 230) (? . 17) #f) ((? . 1945) v! #f (? . 1945) #f (? . 73) #f) ((? . 1947) v! #f (? . 1947) #f (? . 28) #f) ((? . 1948) v! (? . 1949) (? . 1948) (c 1 ? . 695) (? . 28) #f) ((c counter c (c (? . 9) c (? . 1950) ? . 15)) . 68) ((c index-entry c (? . 398)) c (c (? . 1951)) c (c (6 #f (? . 1952))) c (? . 3)) ((? . 1953) v! (? . 1954) (? . 1953) (c 4 ? . 368) (? . 73) #f) ((c index-entry c (? . 1137)) c (c (? . 1136)) c (c (6 #f (? . 1955))) c (? . 3)) ((c index-entry c (? . 799)) c (c (? . 1956)) c (c (6 #f (? . 1957))) c (? . 3)) ((c index-entry c (? . 276)) c (c (? . 1958)) c (c (6 #f (? . 1959))) c (? . 3)) ((? . 1960) v! (? . 1961) (? . 1960) (c 1 ? . 819) (? . 26) #f) ((c counter c (c (? . 9) c (? . 2031) ? . 15)) . 94) ((c counter c (c (? . 9) c (? . 1962) ? . 15)) . 40) ((c index-entry c (? . 592)) c (c (? . 1963)) c (c (6 italic (? . 1963))) q tech) ((? . 1964) v! (? . 1965) (? . 1964) (c 4 ? . 481) (? . 17) #f) ((? . 1966) v! #f (? . 1966) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 2077) ? . 15)) . 259) ((c index-entry c (c tech c (c (? . 62) c (? . 157)))) c (c (? . 1967)) c (c (6 italic (? . 1967))) q tech) ((? . 1968) v! #f (? . 1968) #f (? . 6) #f) ((? . 1969) v! (? . 1970) (? . 1969) (c 2 ? . 800) (? . 28) #f) ((c index-entry c (? . 41)) c (c (? . 1971)) c (c (6 italic (? . 1971))) q tech) ((? . 1972) v! #f (? . 1972) #f (? . 17) #f) ((c index-entry c (? . 1483)) c (c (? . 1973)) c (c (6 #f (? . 1974))) c (? . 3)) ((c index-entry c (? . 1308)) c (c (? . 1975)) c (c (6 #f (? . 1976))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1977) ? . 15)) . 392) ((? . 1979) v! #f (? . 1979) #f (? . 6) #f) ((c counter c (c (? . 8) c (? . 1980) c (? . 10))) . 26) ((c counter c (c (? . 8) c (? . 1981) c (? . 10))) . 4) ((c counter c (c (? . 9) c (? . 1982) ? . 15)) . 7) ((c index-entry c (? . 1438)) c (c (? . 1983)) c (c (6 italic (? . 1983))) q tech) ((c index-entry c (? . 1446)) c (c (? . 1984)) c (c (6 #f (? . 1985))) c (? . 3)) ((? . 1987) v! #f (? . 1987) #f (? . 73) #f) ((c counter c (c (? . 9) c (? . 1988) ? . 15)) . 314) ((c counter c (c (? . 9) c (? . 1989) ? . 15)) . 371) ((c index-entry c (? . 367)) c (c (? . 1990)) c (c (6 #f (? . 1991))) c (? . 3)) ((? . 1993) v! #f (? . 1993) #f (? . 187) #f) ((c index-entry c (? . 38)) c (c (? . 1994)) c (c (6 #f (? . 1995))) c (? . 3)) ((c counter c (c (? . 9) c (? . 1996) ? . 15)) . 46) ((? . 1998) v! #f (? . 1998) #f (? . 28) #f) ((c index-entry c (? . 1347)) c (c (? . 1999)) c (c (6 #f (? . 2000))) c (? . 3)) ((? . 2002) v! #f (? . 2002) #f (? . 6) #f) ((c counter c (c (? . 9) c (? . 2003) ? . 15)) . 78) ((? . 2005) v! #f (? . 2005) #f (? . 17) #f) ((c counter c (c (? . 9) c (? . 2006) ? . 15)) . 381) ((c counter c (c (? . 9) c (? . 2007) ? . 15)) . 309) ((? . 2009) v! #f (? . 2009) #f (? . 22) #f) ((? . 2011) v! #f (? . 2011) #f (? . 73) #f) ((c index-entry c (c tech c (c (? . 57) c (? . 851)))) c (c (? . 2012)) c (c (6 italic (? . 2012))) q tech) ((c index-entry c (? . 797)) c (c (? . 2013)) c (c (6 italic (? . 2013))) q tech) ((c counter c (c (? . 9) c (? . 2014) ? . 15)) . 295) ((c index-entry c (? . 815)) c (c (? . 551)) c (c (6 italic (? . 551))) q tech) ((? . 2016) v! #f (? . 2016) #f (? . 187) #f) ((? . 2017) v! (? . 2018) (? . 2017) (c (? . 167)) (? . 237) #t) ((? . 2020) v! #f (? . 2020) #f (? . 26) #f) ((c counter c (c (? . 8) c (? . 2021) c (? . 10))) . 12) ((? . 2023) v! #f (? . 2023) #f (? . 28) #f) ((c counter ? . 2025) v! #f (c counter c (? . 57) ? . 2025) #f (? . 17) #f) ((? . 2027) v! #f (? . 2027) #f (? . 514) #f) ((c counter c (c (? . 9) c (? . 2028) ? . 15)) . 118) ((c counter c (c (? . 9) c (? . 2029) ? . 15)) . 64) ((? . 2030) v! () (? . 2030) (c #f c (? . 167)) (? . 237) #f) ((c counter ? . 2032) v! #f (c counter c (? . 62) ? . 2032) #f (? . 17) #f) ((c index-entry c (? . 552)) c (q "BSL: Tests") c (c (6 #f (? . 2033))) c (? . 3)) ((c counter ? . 2035) v! #f (c counter c (? . 279) ? . 2035) #f (? . 22) #f) ((? . 2037) v! #f (? . 2037) #f (? . 26) #f) ((? . 2039) v! #f (? . 2039) #f (? . 28) #f) ((? . 2041) v! #f (? . 2041) #f (? . 28) #f) ((c counter c (c (? . 9) c (? . 2042) ? . 15)) . 288) ((c index-entry c (? . 1793)) c (c (? . 2043)) c (c (6 #f (? . 2044))) c (? . 3)) ((c index-entry c (? . 1697)) c (c (? . 2045)) c (c (6 italic (? . 2045))) q tech) ((c counter c (c (? . 9) c (? . 2046) ? . 15)) . 27) ((c index-entry c (? . 873)) c (c (? . 136)) c (c (6 #f (? . 2047))) c (? . 3)) ((? . 2049) v! #f (? . 2049) #f (? . 17) #f) ((c index-entry c (? . 1692)) c (c (? . 2050)) c (c (6 #f (? . 2051))) c (? . 3)) ((? . 2052) v! (? . 2053) (? . 2052) (? . 70) (? . 17) #t) ((c index-entry c (? . 571)) c (c (? . 2054)) c (c (6 italic (? . 2054))) q tech) ((c index-entry c (? . 710)) c (c (? . 2055)) c (c (6 #f (? . 2056))) c (? . 3)) ((c counter c (c (? . 9) c (? . 2057) ? . 15)) . 203) ((c index-entry c (? . 1252)) c (c (? . 2058)) c (c (6 italic (? . 2058))) q tech) ((c index-entry c (? . 789)) c (c (? . 2059)) c (c (6 italic (? . 2059))) q tech) ((? . 2061) v! #f (? . 2061) #f (? . 22) #f) ((c counter c (c (? . 8) c (? . 2062) c (? . 10))) . 101) ((c index-entry c (? . 1688)) c (c (? . 2063)) c (c (6 #f (? . 2064))) c (? . 3)) ((c counter c (c (? . 8) c (? . 2065) c (? . 10))) . 39) ((c index-entry c (c part c (c (? . 51) c (? . 1565)))) c (c (? . 2066)) c (c (6 #f (? . 2067))) c (? . 3)) ((c index-entry c (? . 69)) c (c (? . 2068)) c (c (6 #f (? . 2069))) c (? . 3)) ((c counter c (c (? . 9) c (? . 2070) ? . 15)) . 313) ((c counter c (c (? . 8) c (? . 2071) c (? . 10))) . 87) ((c counter c (c (? . 9) c (? . 2072) ? . 15)) . 349) ((? . 2073) v! (? . 2074) (? . 2073) (c 3 ? . 218) (? . 17) #f) ((? . 2076) v! #f (? . 2076) #f (? . 6) #f) ((c tech c (c (? . 62) c (? . 1106))) v! #f (c tech c (? . 62) c (? . 1106)) #f (? . 17) #f) ((? . 2078) v! #f (? . 2078) #f (? . 28) #f) ((? . 2080) v! #f (? . 2080) #f (? . 28) #f) ((c counter ? . 2082) v! #f (c counter c (? . 62) ? . 2082) #f (? . 17) #f)))
