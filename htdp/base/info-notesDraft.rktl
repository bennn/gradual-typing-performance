((3) 3 (((lib "scribble/decode-struct.rkt") . deserialize-info:part-index-desc-v0) ((lib "scribble/render-struct.rkt") . deserialize-info:mobile-root-v0) ((lib "scribble/core.rkt") . deserialize-info:element-v0)) 37 ("AllKeys" "Notes on How to Design Programs, Second Edition" "Dealing with Part I: K-12" (0) "figure" "fig:collect-digits" (c counter c (c (? . 4) c (? . 5))) (q part "notes") (c (? . 1)) (q part "college") (p+ #"./Trash/HtDP2e/Draft/notes/note_teaching.html" . unix) "value" (q part "k12") (c (? . 2)) (q 1) "exercise" (c (? . 11)) (q tech "allmouseevt") (c counter c (c (? . 4) c (? . 25))) (p+ #"./Trash/HtDP2e/Draft/notes/note_mice-and-chars.html" . unix) (q tech "allkey") "A Note on Mice and Characters" "design11" (c counter c (c (? . 15) c (? . 22))) "AllMouseEvts" "fig:mouse-record" "design11a" (c counter c (c (? . 15) c (? . 26))) "A Note on Teaching Part I" (q part "note:mice-and-chars") (c (? . 21)) (q part "note:teaching") (c (? . 28)) "fig:key-record" (c counter c (c (? . 4) c (? . 33))) "Dealing with Part I: College" (c (? . 35))) () (c (1 #f) h ! (equal) ((c index-entry c (? . 20)) c (c (? . 0)) c (c (2 italic (? . 0))) q tech) ((c index-entry c (? . 7)) c (c (? . 1)) c (c (2 #f (? . 8))) c (? . 3)) ((c counter c (c (? . 4) c (? . 5) c (? . 11))) . 1) ((c index-entry c (? . 12)) c (c (? . 2)) c (c (2 #f (? . 13))) c (? . 3)) ((? . 6) v! #f (? . 6) #f (? . 10) #f) ((? . 7) v! (? . 8) (? . 7) () (p+ #"./Trash/HtDP2e/Draft/notes/index.html" . unix) #t) ((? . 9) v! (? . 36) (? . 9) (c 1 ? . 14) (? . 10) #f) ((c counter c (c (? . 15) c (? . 22) ? . 16)) . 2) ((? . 12) v! (? . 13) (? . 12) (c 2 ? . 14) (? . 10) #f) ((c counter c (c (? . 15) c (? . 26) ? . 16)) . 1) ((? . 17) v! #f (? . 17) #f (? . 19) #f) ((? . 18) v! #f (? . 18) #f (? . 19) #f) ((? . 20) v! #f (? . 20) #f (? . 19) #f) ((c counter c (c (? . 4) c (? . 33) c (? . 11))) . 3) ((c index-entry c (? . 29)) c (c (? . 21)) c (c (2 #f (? . 30))) c (? . 3)) ((? . 23) v! #f (? . 23) #f (? . 19) #f) ((c index-entry c (? . 17)) c (c (? . 24)) c (c (2 italic (? . 24))) q tech) ((c counter c (c (? . 4) c (? . 25) c (? . 11))) . 2) ((? . 27) v! #f (? . 27) #f (? . 19) #f) ((c index-entry c (? . 31)) c (c (? . 28)) c (c (2 #f (? . 32))) c (? . 3)) ((? . 29) v! (? . 30) (? . 29) (q 2) (? . 19) #t) ((? . 31) v! (? . 32) (? . 31) (? . 14) (? . 10) #t) ((? . 34) v! #f (? . 34) #f (? . 19) #f) ((c index-entry c (? . 9)) c (c (? . 35)) c (c (2 #f (? . 36))) c (? . 3))))