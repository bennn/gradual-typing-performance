((3) 3 (((lib "scribble/decode-struct.rkt") . deserialize-info:part-index-desc-v0) ((lib "scribble/render-struct.rkt") . deserialize-info:mobile-root-v0) ((lib "scribble/core.rkt") . deserialize-info:element-v0)) 43 ((c counter c (c (? . 6) c (? . 20))) (c part c (u . "chap:part:prologue")) (p+ #"../base/Trash/../base/HtDP2e/Draft/part_prologue.html" . unix) "Arithmetic and Arithmetic" (q part "more-def") "" "figure" (u . "fig:create-rocket-scene.v6") (c counter c (c (? . 6) c (? . 7))) "Not!" (0) (q part "some-i/o") (c counter c (c (? . 6) c (? . 36))) (q part "program-now") "Many Ways To Compute" "How to Design Programs, Second Edition" "Inputs and Output" (c (? . 16)) "Prologue: How to Program" (c counter c (c (? . 6) c (? . 31))) (u . "fig:create-rocket-scene.v5") "value" (q part "sec:not") (c (? . 9)) (q part "part:prologue") (c (? . 18)) (q part "htdp2e") (c (? . 15)) (q part "pro-cond") (c (? . 14)) "One Program, Many Definitions" (u . "fig:create-rocket-scene.v4") "One More Definition" (c (? . 32)) (q part "pro-many-def") (c (? . 30)) (u . "fig:create-rocket-scene.v3") (u . "fig:create-rocket-scene.v2") (c counter c (c (? . 6) c (? . 37))) "You Are a Programmer Now" (c (? . 39)) (q part "arithmetic-pro") (c (? . 3))) () (c (1 #f) h ! (equal) ((? . 0) v! #f (? . 0) #f (? . 2) #f) ((? . 1) v! () (? . 1) (c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 41)) c (c (? . 3)) c (c (2 #f (? . 42))) c (? . 10)) ((? . 4) v! (? . 33) (? . 4) (c #f c #f c (? . 5)) (? . 2) #f) ((c counter c (c (? . 6) c (? . 7) c (? . 21))) . 5) ((? . 8) v! #f (? . 8) #f (? . 2) #f) ((c index-entry c (? . 22)) c (c (? . 9)) c (c (2 #f (? . 23))) c (? . 10)) ((? . 11) v! (? . 17) (? . 11) (c #f c #f c (? . 5)) (? . 2) #f) ((? . 12) v! #f (? . 12) #f (? . 2) #f) ((? . 13) v! (? . 40) (? . 13) (c #f c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 28)) c (c (? . 14)) c (c (2 #f (? . 29))) c (? . 10)) ((c index-entry c (? . 26)) c (c (? . 15)) c (c (2 #f (? . 27))) c (? . 10)) ((c index-entry c (? . 11)) c (c (? . 16)) c (c (2 #f (? . 17))) c (? . 10)) ((c index-entry c (? . 24)) c (c (? . 18)) c (c (2 #f (? . 25))) c (? . 10)) ((? . 19) v! #f (? . 19) #f (? . 2) #f) ((c counter c (c (? . 6) c (? . 20) c (? . 21))) . 4) ((? . 22) v! (? . 23) (? . 22) (c #f c #f c (? . 5)) (? . 2) #f) ((? . 24) v! (? . 25) (? . 24) (c (? . 5)) (? . 2) #t) ((? . 26) v! (? . 27) (? . 26) () (p+ #"../base/Trash/../base/HtDP2e/Draft/index.html" . unix) #t) ((? . 28) v! (? . 29) (? . 28) (c #f c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 34)) c (c (? . 30)) c (c (2 #f (? . 35))) c (? . 10)) ((c counter c (c (? . 6) c (? . 31) c (? . 21))) . 3) ((c counter c (c (? . 6) c (? . 37) c (? . 21))) . 1) ((c index-entry c (? . 4)) c (c (? . 32)) c (c (2 #f (? . 33))) c (? . 10)) ((? . 34) v! (? . 35) (? . 34) (c #f c #f c (? . 5)) (? . 2) #f) ((c counter c (c (? . 6) c (? . 36) c (? . 21))) . 2) ((? . 38) v! #f (? . 38) #f (? . 2) #f) ((c index-entry c (? . 13)) c (c (? . 39)) c (c (2 #f (? . 40))) c (? . 10)) ((? . 41) v! (? . 42) (? . 41) (c #f c #f c (? . 5)) (? . 2) #f)))