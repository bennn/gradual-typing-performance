((3) 3 (((lib "scribble/decode-struct.rkt") . deserialize-info:part-index-desc-v0) ((lib "scribble/render-struct.rkt") . deserialize-info:mobile-root-v0) ((lib "scribble/core.rkt") . deserialize-info:element-v0)) 43 ((c counter c (c (? . 6) c (? . 22))) (c part c (u . "chap:part:prologue")) (p+ #"../base/Trash/HtDP2e/part_prologue.html" . unix) "Arithmetic and Arithmetic" (q part "more-def") "" "figure" (u . "fig:create-rocket-scene.v6") (c counter c (c (? . 6) c (? . 7))) (q part "some-i/o") "You Are a Programmer Now" (0) (q part "program-now") (c (? . 10)) "Inputs and Output" (c (? . 14)) "Many Ways To Compute" "One Program, Many Definitions" "Prologue: How to Program" (c counter c (c (? . 6) c (? . 36))) "Not!" (c counter c (c (? . 6) c (? . 35))) (u . "fig:create-rocket-scene.v5") "value" (q part "part:prologue") (c (? . 18)) "One More Definition" (c (? . 26)) (q part "sec:not") (c (? . 20)) "How to Design Programs, Second Edition" (q part "pro-cond") (c (? . 16)) (q part "htdp2e") (c (? . 30)) (u . "fig:create-rocket-scene.v4") (u . "fig:create-rocket-scene.v2") (q part "pro-many-def") (c (? . 17)) (u . "fig:create-rocket-scene.v3") (c counter c (c (? . 6) c (? . 39))) (q part "arithmetic-pro") (c (? . 3))) () (c (1 #f) h ! (equal) ((? . 0) v! #f (? . 0) #f (? . 2) #f) ((? . 1) v! () (? . 1) (c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 41)) c (c (? . 3)) c (c (2 #f (? . 42))) c (? . 11)) ((? . 4) v! (? . 27) (? . 4) (c #f c #f c (? . 5)) (? . 2) #f) ((c counter c (c (? . 6) c (? . 7) c (? . 23))) . 5) ((? . 8) v! #f (? . 8) #f (? . 2) #f) ((? . 9) v! (? . 15) (? . 9) (c #f c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 12)) c (c (? . 10)) c (c (2 #f (? . 13))) c (? . 11)) ((? . 12) v! (? . 13) (? . 12) (c #f c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 9)) c (c (? . 14)) c (c (2 #f (? . 15))) c (? . 11)) ((c index-entry c (? . 31)) c (c (? . 16)) c (c (2 #f (? . 32))) c (? . 11)) ((c index-entry c (? . 37)) c (c (? . 17)) c (c (2 #f (? . 38))) c (? . 11)) ((c index-entry c (? . 24)) c (c (? . 18)) c (c (2 #f (? . 25))) c (? . 11)) ((? . 19) v! #f (? . 19) #f (? . 2) #f) ((c index-entry c (? . 28)) c (c (? . 20)) c (c (2 #f (? . 29))) c (? . 11)) ((? . 21) v! #f (? . 21) #f (? . 2) #f) ((c counter c (c (? . 6) c (? . 22) c (? . 23))) . 4) ((? . 24) v! (? . 25) (? . 24) (c (? . 5)) (? . 2) #t) ((c index-entry c (? . 4)) c (c (? . 26)) c (c (2 #f (? . 27))) c (? . 11)) ((? . 28) v! (? . 29) (? . 28) (c #f c #f c (? . 5)) (? . 2) #f) ((c index-entry c (? . 33)) c (c (? . 30)) c (c (2 #f (? . 34))) c (? . 11)) ((? . 31) v! (? . 32) (? . 31) (c #f c #f c (? . 5)) (? . 2) #f) ((? . 33) v! (? . 34) (? . 33) () (p+ #"../base/Trash/HtDP2e/index.html" . unix) #t) ((c counter c (c (? . 6) c (? . 35) c (? . 23))) . 3) ((c counter c (c (? . 6) c (? . 36) c (? . 23))) . 1) ((? . 37) v! (? . 38) (? . 37) (c #f c #f c (? . 5)) (? . 2) #f) ((c counter c (c (? . 6) c (? . 39) c (? . 23))) . 2) ((? . 40) v! #f (? . 40) #f (? . 2) #f) ((? . 41) v! (? . 42) (? . 41) (c #f c #f c (? . 5)) (? . 2) #f)))